
  ___  ____  ____  ____  ____ ®
 /__    /   ____/   /   ____/      StataNow 18.5
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2023 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-782-8272        https://www.stata.com
                                   979-696-4600        service@stata.com

Stata license: Unlimited-user 4-core network, expiring 16 Dec 2025
Serial number: 501809302042
  Licensed to: WBG User
               World Bank

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000 but can be increased;
          see help set_maxvar.

. do batch_2023 

. *!v2.0
. *============================================================================
> ===
. * Macro-Micro Simulations
. *============================================================================
> ===
. * Created on : July 24, 2024
. * Last update: October 1, 2024
. *============================================================================
> ===
. * Prepared by: South Asia Regional Stats Team
. 
. * Initiated by: Sergio Olivieri
. * E-mail: colivieri@worldbank.org
. 
. * Modified by: Kelly Montoya, Jaime Fernandez Romero and Israel Osorio Rodart
> e
. * For this version e-mail: iosoriorordarte@worldbank.org
. *============================================================================
> ===
. 
. *============================================================================
> ===
. * TIME
. *============================================================================
> ===
. set processors 4
    The maximum number of processors or cores being used is 4.  It can be set
    to any number between 1 and 4.

. capture which etime

. if _rc ssc install etime

. etime, start

. *============================================================================
> ===
. 
. *============================================================================
> ===
. * RUNNING STEPS
. *============================================================================
> ===
. {
. * Step 1: Load base household survey data for simulation
.         local  step1_loadhhdata  ""             // if yes, save simulation da
> ta
.                 global reload_dlw        ""             // SUBOPTION: if yes,
>  reloads simulation databases from datalibweb
. 
. * Step 2: Calculate macro-micro inputs, (aka elasticity tool)
.         local step2_macromicroinputs "" // recalculates the macro and micro i
> nputs needed for simulation
. 
. * Step 3: Run macro-micro simulation
.         local  step3_runsim       "yes"         // Run simulations      
.                 
.         * Initial and final year for sequential run
.                 local iniyear = 2023    // Initial year when doing sequential
>  runs
.                 local finyear = 2023    // Final year when doing sequential r
> uns
. 
.         * Local parallel
.                 *local parallel         "yes"   // If "yes", the program will
>  run simulation parallel mode
. 
.         * Parallel run set up
.                 * If *local parallel is set to "yes". Then n batch files will
>  be created
.                 * with the name batch_`i'.do located in the working directory
> .
.                 * Select initial and final parallel years below 
.                         local iniparallelyear = 2022    // First batch file t
> o be created
.                         local finparallelyear = 2026    // Last batch file to
>  be created
.                         *local parallel_automatic "yes"  // If yes, parallel 
> run will start automatically
.                                                                              
>            // Otherwise, call the batch file from terminal or the command pro
> mpt
. }               

. *============================================================================
> ===
. * PATHS - Modify according to your local route
. *============================================================================
> ===
. {
. * Main
.         * MacOSX and Unix
.         if (c(os)=="MacOSX"|c(os)=="Unix") & c(username)=="Israel" {
.                  gl main  "/Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY2
> 5 - SAR MPO AM24"
.         }
.         * Windows
.         if c(os)=="Windows" & c(username)=="WB308767" {
.                  gl main  "C:/Users/WB308767/OneDrive/WBG/ETIRI/Projects/FY25
> /FY25 - SAR MPO AM24"
.         }
.         
. * Path  
.         gl path "$main/BGD-MPO-Microsimulation/2024AM"
.         cd "$path"
/Users/Israel/Library/CloudStorage/OneDrive-Personal/WBG/ETIRI/Projects/FY25/FY
> 25 - SAR MPO AM24/BGD-MPO-Microsimulation/2024AM
.         
. * Do-files path
.         global dofiles     "$path/Do-files" // Do-files path
. 
. * Data directories
.         cap mkdir "${path}/Data"
.         gl data_root "${path}/Data"
.         gl data_in   "${path}/Data/INPUT"
.         gl data_out  "${path}/Data/OUTPUT"
. 
. }

. 
. *============================================================================
> ===
. * Country Parameters
. *============================================================================
> ===
. {
. * Globals for country and year identification
.         global country BGD                      // Country to upload
.         global year 2022                        // household survey year to u
> se
.         global final_year 2026          // Last simulated year
.         global base_year 2022           // Base year for building LAVs
. 
. * Parameters
.         *gl use_saved_parameters "yes" // Not working yet
.         gl re_scale ""                  // Change for "yes"/"no" re-scale usi
> ng total income
.         gl sector_model 3               // 
.         gl random_remittances "no" // Change for "yes" or "no" on modelling
.         gl baseyear 2022
. 
. }

. *============================================================================
> ===
. * Parallelization - Don't modify
. *============================================================================
> ===
. {
.         * Parallel operationalization, do not modify
.         
.                 scalar xrxx = 1                 // Do not modify
.                 scalar xrxy = 1                 // Do not modify
.                 local iniyear=2023      // Do not modify
.                 local finyear=2023      // Do not modify
. 
.                 * Create batch files in MacOSX with sed function
.                 if "`parallel'"=="yes" & (c(os)=="MacOSX"|c(os)=="Unix") {
.                         cd "$dofiles"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.sh
.                         cap file close myscript
.                         file open myscript using myscript.sh, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                 
.                                 * Copy batch file
.                                 !cp "0 master.do" "batch_`bi'.do"
  3.                                 * Replace xrxx and xryy with initial and f
> inal years
.                                 !sed -i '' "s/iniyear=2023/iniyear=`bi'/g" ba
> tch_`bi'.do
  4.                                 !sed -i '' "s/finyear=2023/finyear=`bi'/g"
>  batch_`bi'.do
  5.                                 * Turn off parallel option
.                                 !sed -i '' "s/local[[:space:]]parallel/**loca
> l parallel/g" batch_`bi'.do
  6.                                 
.                                 * Append line to myscript.sh
.                                 file write myscript "/usr/local/bin/stata-mp 
> -b do batch_`bi' &" _n
  7.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript
.                         !chmod u+rx myscript.sh
.                         if "`parallel_automatic'"=="yes" {
.                                 !./myscript.sh
.                         }
.                         etime
.                         exit
.                 }
.                 
.                 * Create batch files in Windows with powershell
.                 if "`parallel'"=="yes" & c(os)=="Windows" {
.                         cd "$dofiles"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.bat
.                         cap file close myscript
.                         file open myscript using myscript.bat, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                                                 
.                                 * Copy batch file
.                                 !copy "0 master.do" "batch_`bi'.do"
  3.                                 * Replace _fake xrxx and xryy with initial
>  and final years
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace 'iniyear=2023', 'iniyear=`bi'' | Out-File -encoding ASCII batc
> h_`bi'.do "
  4.                                 !powershell -command " (Get-Content batch_
> `bi'.do) -replace 'finyear=2023', 'finyear=`bi'' | Out-File -encoding ASCII b
> atch_`bi'.do "
  5.                                 * Turn off parallel option
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace '*local parallel', '**local parallel' | Out-File -encoding ASC
> II batch_`bi'.do "
  6.                                 
.                                 * Append line to myscript.sh
.                                 if `bi'==`iniparallelyear' file write myscrip
> t `"   "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  7.                                 else                       file write mysc
> ript `" | "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  8.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript     
.                         if "`parallel_automatic'"=="yes" { 
.                                 !myscript.bat
.                         }
.                         etime
.                         exit    
.                 }
. }

. 
. *============================================================================
> ===
. * Step 1: Load and save household survey for simulation
. * The process must be done before starting the macro-micro simulation.
. * Here, we force it to be run only during sequential runs.
. * Running it in parallel mode can create problems when the same file is being
>  
. * saved by each parallel instance.
. * This happens more often in Windows environments.
. *============================================================================
> ===
. if "`step1_loadhhdata'"=="yes" & "`parallel'"=="" {
.         
.         * The harmonized HIES contains 160 variables and 76.8MB
.         * The minimum harmonized HIES contains 74 variables and 12.5MB
.         
.         * 000. Load data
.         do "$dofiles/001_load_data.do"
.         save "$data_root/BGD_2022_HIES_v02_M_v02_A_SARMD_SIM.dta", replace
.         
.         
.         * Minimum set of variables for simulation
.         *#delimit ;
.         *local minvarset  "industry3 industry3_2
.         *                                 occup_year occup_2_year            
>             
.         
.         * 010. Prepare variables for regressions
.         do "$dofiles/010_variables.do"
. 
.         #delimit ;
delimiter now ;
.         local minvarset "year countrycode subnatid1 urban
>                                         hhid pid wgt hsize h_size
>                                         age male edad atschool educ_lev id   
>    married h_head
>                                         active emplyd unemplyd self_emp unpai
> d salaried salaried2 self_emp2 unpaid2
>                                         labor_rel labor_rel2 public_job
>                                         sect_main sect_secu  
>                                         occupation
>                                         skill_edu       skill_occup     skill
>                                         sample sample_1 sample_2
>                                         h_inc 
>                                         h_lai 
>                                         h_remesas
>                                         h_pensions
>                                         h_capital
>                                         h_renta_imp
>                                         h_otherinla
>                                         h_transfers
>                                         h_nlai
>                                         remitt_any
>                                         depen
>                                         oth_pub
>                                         ln_lai_m
>                                         lai_m
>                                         tot_lai
>                                         lai_s
>                                         food_share nfood_share
>                                         pline_int pline_nat welfarenom_ppp17"
> ;
.         #delimit cr
delimiter now cr
.         keep `minvarset'        
. 
.         compress
.         
.         save "$data_root/BGD_2022_HIES_v02_M_v02_A_SARMD_SIM_MIN.dta", replac
> e
. 
. }

. 
. *============================================================================
> ===
. * Step 2: Calculates simulation parameters from macro and micro databases
. * The process must be done before simulation steps.
. * Here, we force it to be run only during sequential runs.
. *============================================================================
> ===
. if "`step2_macromicroinputs'"=="yes" & "`parallel'"=="" {
. 
.         * 002 Update United Nations World Population Prospects
.                 * output A: "$data_in/UN WPP/popdata_sar_mpo.dta"
.         do "$dofiles/002_import_pop_wpp_wdi.do"
.         
.         * 003. Process standard-MFMod parameters for Tableau
.                 * output B: "$data_in/POV_MOD/macrodata.dta"
.                 * output C: "$data_in/Tableau/AM24/MPO Check data.dta"
.                 * output D: "$data_in/Macro and elasticities/mfmod_bgd.dta"  
>    
.         do "$dofiles/003_sar_mpo_tableau_dashboard.do"
.                 
.         * 004 (master) Elaticity tool based on HIES and LFS
.                 * 005, 006, and 007 are called within 004
.                 * output E: "$data_in/Macro and elasticities/input_elasticiti
> es_hies.dta"
.                 * output F: "$data_in/Macro and elasticities/input_elasticiti
> es_lfs.dta"
.                 * output G: "$data_in/Macro and elasticities/Elasticities.dta
> "
.         do "$dofiles/004_masterelasticity.do"
.         
.                 
.         * Append all databases
.         * Output A
.         use "$data_in/UN WPP/popdata_sar_mpo.dta", clear
.                 isid country year indicator
.                 decode title, gen(strtitle)
.                 drop title
.                 rename strtitle title
.                 keep    country year indicator value title date
.                 order   country year indicator value title date
.         tempfile a
.         save `a', replace
. 
.         * Output B
.         use "$data_in/POV_MOD/macrodata.dta", clear
.                 *decode title, gen(strtitle)
.                 drop title
.                 rename strtitle title
.                 keep    country year indicator value title date
.                 order   country year indicator value title date
.         tempfile b
.         save `b', replace
. 
.         * Output C
.         use "$data_in/Tableau/AM_24 MPO Check/MPO Check data.dta", clear
.                 replace indicator = lower(indicator)
.                 replace indicator = "ma" + indicator
.                 keep    country year indicator value title date
.                 order   country year indicator value title date
.         tempfile c
.         save `c', replace
.         
.         * Output D
.         use "$data_in/Macro and elasticities/mfmod_bgd.dta", clear
.         append using "$data_in/Macro and elasticities/mfmod_bgd_base.dta"    
>    // For July 2024 baseline
.         drop ind
.         tempfile d
.         save `d', replace
.                 
.         
.         use `a', clear
.         append using `b'
.         append using `c'
.         append using `d'
.         
.         save               "$path/input-mpo.dta", replace
.         export excel using "$path/input_MASTER.xlsx", sheet("input-mpo", repl
> ace) firstrow(variables)
.         
.         * INFLOWS
.         use if indicator=="mfbxfstremtcd" using "$data_in/Macro and elasticit
> ies/mfmod_bgd.dta", clear
.         order country year value
.         export excel using "$path/input_MASTER.xlsx", sheet("inflows", replac
> e) firstrow(variables)
.         
.         * OUTPUT E
.         use "$data_in/Tableau/AM_24 MPO Check/input-labor-hies.dta", clear
.                 gen date = "`c(current_date)'"
.                 keep    country year indicator value title date nsectors
.                 order   country year indicator value title date nsectors
.                 tempfile e
.                 save `e', replace
.         
.         * OUTPUT F
.         use "$data_in/Tableau/AM_24 MPO Check/input-labor-lfs.dta", clear
.                 gen date = "`c(current_date)'"          
.                 keep    country year indicator value title date nsectors
.                 order   country year indicator value title date nsectors
.                 tempfile f
.                 save `f', replace
.         
.         use `e', clear
.         append using `f'
.         
.         save               "$path/input-labor", replace
.         export excel using "$path/input_MASTER.xlsx", sheet("input-labor", re
> place) firstrow(variables)
.         
.         * OUTPUT G
.         use "$data_in/Macro and elasticities/Elasticities.dta", clear
.         save                       "$path/input-elasticities.dta", replace
.         export excel using "$path/input_MASTER.xlsx", sheet("Elasticities") s
> heetreplace firstrow(variables)
. }

. *===========================================================================
. * run dofiles
. *===========================================================================
. if "`step3_runsim'"=="yes" {
. 
.         forval yyyy = `iniyear'/`finyear' {
  2.                 clear all
  3.                 clear mata
  4.                 clear matrix
  5. 
.                 * Declarre simulation year
.                 global sim_year = `yyyy'
  6.                 
.                 if "`yyyy'"=="`iniyear'" global use_saved_parameters "no"
  7.                 else                                     global use_saved_
> parameters "yes"
  8.                 
.                 * Load auxiliary simulation programs
.                 local files : dir "$dofiles/auxcode" files "*.do"
  9.                 di `files'
 10.                 foreach f of local files{
 11.                         dis in yellow "`f'"
 12.                         qui: run "$dofiles/auxcode/`f'"
 13.                 }
 14. 
.                 * Use base household survey
.                 if ${year}==2022 use "$data_root/BGD_2022_HIES_v02_M_v02_A_SA
> RMD_SIM_MIN.dta", clear
 15.                 
.                 * Globals for reading scenarios
.                 *gl inputs   "$path/Microsimulation_Inputs_BGD_A3_BaUAM2024.x
> lsm" // Country's input Excel file
.                 gl inputs   "$path/Microsimulation_Inputs_BGD_A3_CrisisAM2024
> .xlsm"
 16.                 
.                 * 020.input parameters
.                         do "$dofiles/020_parameters.do"
 17.                 * 030.model labor incomes by groups
.                         do "$dofiles/030_occupation.do"
 18.                 * 040.model labor incomes by skills
.                         do "$dofiles/040_labor_income.do"
 19.                 * 050.modeling population growth
.                         do "$dofiles/050_population.do"
 20.                 * 060.modeling labor activity rate
.                         do "$dofiles/060_activity.do"
 21.                 * 070.modeling unemployment rate
.                         do "$dofiles/070_unemployment.do"
 22.                 * 080.modeling changes in employment by sectors
.                         do "$dofiles/080_struct_emp.do"
 23.                 * 090.modeling labor income by sector
.                         do "$dofiles/090_asign_labor_income.do" 
 24.                 * 100.income growth by sector
.                         if "$re_scale" == "yes" do "$dofiles/100_income_rel_n
> ew.do"
 25.                         if "$re_scale" == ""    do "$dofiles/101_income_re
> l_new_no_rescaling.do"
 26.                 * 110. total labor incomes
.                         do "$dofiles/110_total_income.do"
 27.                 * 120. total non-labor incomes
.                         if "$random_remittances" == "no"  do "$dofiles/120_as
> sign_nlai.do"
 28.                         if "$random_remittances" == "yes" do "$dofiles/121
> _assign_nlai.do"
 29.                 * 130. household income
.                         do "$dofiles/130_household_income.do"
 30.                 * 140. household consumption
.                         *do "$dofiles/140_household_consumption.do"
.                         
.                 * Quick summary
.                         ineqdec0 pc_inc_s  [w=fexp_s]
 31.                         *ineqdec0 pc_con_s  [w=fexp_s]
.                         
.                 drop if welfarenom==.
 32.                 save "${data_out}/basesim_`yyyy'", replace
 33.         }
cuantiles.doprog_mata.dozk.domtab1.domatnames.dogini.dotheil.dodesigual.doshare
> s.doparam_res.dofgt.dosimchoiceres.do
cuantiles.do
prog_mata.do
zk.do
mtab1.do
matnames.do
gini.do
theil.do
desigual.do
shares.do
param_res.do
fgt.do
simchoiceres.do

. *!v1.0
. *===========================================================================
. * TITLE: Set up parameters
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Dec 03, 2020
. * Last update: Jun 26, 2024 - Israel Osorio Rodarte
. *                          Jan 04, 2021 Kelly Y. Montoya
. *                          Jan 13, 2021 - Modification of average labor incom
> e sheet
. *                          Jul 22, 2022 - Added macro data matrix for re-scal
> ing with sectoral and total GDP in the new model
. *                          Jul 25, 2022 - Added WDI population matrix for new
>  weights
. *                          Jul 26, 2022 - Moved model set up from master. Mut
> ed population by gender.
. *===========================================================================
. 
. *===========================================================================
. * setting up the model
. *===========================================================================
. 
. 
. * mata matrix
. mata:
------------------------------------------------- mata (type end to exit) -----
: void st_shares(string scalar name1)
> {
>         real matrix M,N,P
>         M = st_matrix(name1)
>     N = runningsum(M[1..(rows(M)-1),1])
>     P = N:/M[rows(M),1]
>     st_matrix("shr",P)
> }

: end
-------------------------------------------------------------------------------

. 
. 
. *===========================================================================
. * general parameters
. *===========================================================================
. 
. preserve

. 
. import excel using "$inputs", sheet("input_setup") first clear
(6 vars, 1 obs)

. 
. * type of estimation
. gl national   = type_estimation[1]

. if $national == 1 gl tipo "local"

. if $national == 0 gl tipo "inter"  

. 
. * select scenario
. *gl model = model[1]
. *tostring model, replace
. 
. * bonus
. if inlist(bonus,1) gl bonus = 1

. if inlist(bonus,0) gl bonus = 0 

. 
. * sectors (by default 6 sectors)
. gl m = num_sectors[1]

. 
. * new weights
. if inlist(weights,1) gl weights = 1

. if inlist(weights,0) gl weights = 0

. 
. * Read LAV sheet from Excel Input File
. import excel using "$inputs", sheet("linkage_aggregate_variables") first clea
> r    // previously called resumen
(31 vars, 43 obs)

.         keep parameters value* lav*

.         drop if parameters==""
(10 observations deleted)

.         reshape long value lav, i(parameters) j(year)
(j = 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026)
(variable lav2014 not found)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations               33   ->   429         
Number of variables                  26   ->   4           
j variable (13 values)                    ->   year
xij variables:
      value2014 value2015 ... value2026   ->   value
            lav2014 lav2015 ... lav2026   ->   lav
-----------------------------------------------------------------------------

.         keep if year==$sim_year
(396 observations deleted)

.         rename lav rate

.         tempfile lavdata

. save `lavdata', replace
(file /var/folders/fc/5g_0xpf55dz7bg775xzr1vfw0000gp/T//St31735.000002 not
    found)
file /var/folders/fc/5g_0xpf55dz7bg775xzr1vfw0000gp/T//St31735.000002 saved
    as .dta format

. 
. * macro data (See sheet "input_gpd")
. use `lavdata', clear

.         keep if substr(parameters,1,3)=="gdp"
(29 observations deleted)

.         sort parameters

. mkmat rate, mat(growth_macro_data)

. 
. * average labor incomes (See sheet "input_labor_incomes")
. use `lavdata', clear

.         keep if substr(parameters,1,3)=="inc"
(26 observations deleted)

.         gen A = substr(parameters,length(parameters)-1,2)

.         replace A = "z0" if A=="A0"     // To place it at the bottom
(1 real change made)

.         sort A parameters

. mkmat rate, mat(growth_labor_income)

. 
. * labor market (See sheet "input_labor")
. use `lavdata', clear

.         keep if substr(parameters,1,2)=="sh"|parameters=="parti_rate"|paramet
> ers=="unemp_rate"
(25 observations deleted)

.         gen A = "A0"

.         replace A = substr(parameters,length(parameters)-1,2) if substr(param
> eters,1,2)=="sh"
(6 real changes made)

.         sort A parameters

. mkmat rate, mat(growth_labor)

. 
. * non-labor incomes (See sheet "input_nonlabor")
. use `lavdata', clear

.         gen order = . 
(33 missing values generated)

.         replace order = 1 if parameter=="remittances"
(1 real change made)

.         replace order = 2 if parameter=="pensions"
(1 real change made)

.         replace order = 3 if parameter=="capital"
(1 real change made)

.         replace order = 4 if parameter=="bdh"
(1 real change made)

.         replace order = 5 if parameter=="jgl"
(1 real change made)

.         keep if order!=.
(28 observations deleted)

.         sort order

. mkmat rate, mat(growth_nlabor)

. 
. * total population (See sheet "input_pop_wdi")
. use `lavdata', clear

.         keep if parameter=="total population"
(32 observations deleted)

. mkmat value, mat(growth_pop_wdi)

. *Alternatively, for using the growth rate:
. *mkmat rate, mat(growth_pop_wdi)
. 
. * GDP Per Capita
. use `lavdata', clear

.         keep if parameter=="pccons"
(32 observations deleted)

. mkmat rate, mat(pccons)

. 
. restore

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 03 - Modelling labor status by education skills 
. *============================================================================
> =
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 27, 2022 Kelly Y. Montoya
. * Last update: March 22 - Cicero Braga (region dummies)
. *                          Mar 31, 2022 Included region for ECU (KM)
. *                          Apr 19, 2022 Included estimations saving for post-
> estimation (KM)
. *                          Feb 17, 2023 Changed region set up (KM)
. *============================================================================
> =
. 
. *============================================================================
> =
. * independet variables
. *============================================================================
> =
. 
. encode subnatid1, gen(region)

. 
. 
. loc mnl_rhs           c.age##c.age urban ib0.male#ibn.h_head#ib0.married

. loc mnl_rhs `mnl_rhs' remitt_any depen oth_pub /*ib0.male#ibn.educ_lev*/ atsc
> hool

. loc mnl_rhs `mnl_rhs' ib1.region

. 
. * skill levels
. levelsof skill, loc(numb_skills)
1 2

. 
. foreach skill of numlist `numb_skills' {
  2. 
.         sum occupation if skill == `skill' 
  3.         loc base = r(min)
  4.         
.         * Parameters
.         if "$use_saved_parameters" == "no" {
  5.                 mlogit occupation `mnl_rhs'  [pw = wgt] if skill == `skill
> ' & sample ==1, baseoutcome(`base')
  6.                 capture mkdir "${data_root}/models/${country}_${year}"
  7.                 estimates save "${data_root}/models/${country}_${year}/Sta
> tus_skill_`skill'.dta", replace
  8.         }
  9.         else {
 10.                 estimates use "${data_root}/models/${country}_${year}/Stat
> us_skill_`skill'.dta"
 11.                 estimates esample: occupation `mnl_rhs' [aw = pondera] if 
> skill == `skill' & sample ==1, baseoutcome(`base')
 12.         }
 13. 
.         *====================================================================
> =====
.         * residuals
.         *====================================================================
> =====
.         
.         levelsof occupation if skill == `skill', local(occ_cat) 
 14.         loc rvarlist
 15.         
.         foreach sect of numlist `occ_cat' {
 16.         loc rvarlist "`rvarlist' U`sect'_`skill'"
 17.         }
 18.         
.         set seed 23081985
 19.         simchoiceres `rvarlist' if skill == `skill', total
 20. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  occupation |     19,309    7.142835    6.735472          0         16

note: 1.male#1.h_head#1.married omitted because of collinearity.
Iteration 0:  Log pseudolikelihood =  -45028572  
Iteration 1:  Log pseudolikelihood =  -39856993  
Iteration 2:  Log pseudolikelihood =  -39465270  
Iteration 3:  Log pseudolikelihood =  -38550158  
Iteration 4:  Log pseudolikelihood =  -38498483  
Iteration 5:  Log pseudolikelihood =  -38489534  
Iteration 6:  Log pseudolikelihood =  -38489317  
Iteration 7:  Log pseudolikelihood =  -38489305  
Iteration 8:  Log pseudolikelihood =  -38489303  
Iteration 9:  Log pseudolikelihood =  -38489303  
Iteration 10: Log pseudolikelihood =  -38489303  
Iteration 11: Log pseudolikelihood =  -38489303  
Iteration 12: Log pseudolikelihood =  -38489303  
Iteration 13: Log pseudolikelihood =  -38489303  
Iteration 14: Log pseudolikelihood =  -38489303  
Iteration 15: Log pseudolikelihood =  -38489303  

Multinomial logistic regression                      Number of obs  =    9,226
                                                     Wald chi2(119) = 41835.14
                                                     Prob > chi2    =   0.0000
Log pseudolikelihood = -38489303                     Pseudo R2      =   0.1452

------------------------------------------------------------------------------
             |               Robust
  occupation | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
Inactive     |  (base outcome)
-------------+----------------------------------------------------------------
Unemployed   |
         age |  -.0052361   .0591919    -0.09   0.930    -.1212501     .110778
             |
 c.age#c.age |  -.0007497     .00063    -1.19   0.234    -.0019846    .0004851
             |
       urban |   .5629043    .336858     1.67   0.095    -.0973252    1.223134
             |
 male#h_head#|
     married |
   Male#0#0  |   -.351372   .6847274    -0.51   0.608    -1.693413    .9906689
   Male#0#1  |   .2241316   .5828363     0.38   0.701    -.9182066     1.36647
   Male#1#0  |  -20.11259   .4367291   -46.05   0.000    -20.96857   -19.25662
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0802169   .3460541     0.23   0.817    -.5980367    .7584704
       depen |  -.3589097   .7854842    -0.46   0.648     -1.89843    1.180611
     oth_pub |  -1.447845   .7041351    -2.06   0.040    -2.827925   -.0677656
    atschool |  -2.179717   1.108912    -1.97   0.049    -4.353144   -.0062896
             |
      region |
20-Chitta~g  |   .9795613   .5434641     1.80   0.071    -.0856087    2.044731
   30-Dhaka  |   1.497121   .5444922     2.75   0.006      .429936    2.564306
  40-Khulna  |   .5292843   .7035614     0.75   0.452    -.8496706    1.908239
45-Mymens~h  |   .0477638   .6339083     0.08   0.940    -1.194674    1.290201
50-Rajshahi  |  -.8216367   .8545334    -0.96   0.336    -2.496491    .8532179
 55-Rangpur  |   .1712059    .654056     0.26   0.794     -1.11072    1.453132
  60-Sylhet  |   1.169278   .5391828     2.17   0.030      .112499    2.226057
             |
       _cons |  -1.555698    1.55186    -1.00   0.316    -4.597288    1.485891
-------------+----------------------------------------------------------------
Agricultur~0 |
         age |   .0127302   .0328999     0.39   0.699    -.0517525    .0772128
             |
 c.age#c.age |  -.0009248   .0003211    -2.88   0.004    -.0015541   -.0002954
             |
       urban |  -.6525033   .1966731    -3.32   0.001    -1.037976   -.2670311
             |
 male#h_head#|
     married |
   Male#0#0  |  -4.441654   .4321507   -10.28   0.000    -5.288654   -3.594654
   Male#0#1  |  -2.751354   .2538527   -10.84   0.000    -3.248896   -2.253812
   Male#1#0  |  -.9897689   .4053945    -2.44   0.015    -1.784328   -.1952102
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0876034   .1558518    -0.56   0.574    -.3930673    .2178604
       depen |   1.686522   .3865344     4.36   0.000     .9289285    2.444116
     oth_pub |  -2.596593   1.041631    -2.49   0.013    -4.638153    -.555034
    atschool |  -28.37079   .3400795   -83.42   0.000    -29.03733   -27.70425
             |
      region |
20-Chitta~g  |   .1151164   .2543659     0.45   0.651    -.3834316    .6136644
   30-Dhaka  |   .1536106   .2732939     0.56   0.574    -.3820356    .6892568
  40-Khulna  |   .0666859   .2990714     0.22   0.824    -.5194833     .652855
45-Mymens~h  |  -.0630527   .2585419    -0.24   0.807    -.5697855    .4436801
50-Rajshahi  |   .7190162   .2854579     2.52   0.012      .159529    1.278503
 55-Rangpur  |   .2164908   .2682632     0.81   0.420    -.3092953     .742277
  60-Sylhet  |   .5178547   .2597755     1.99   0.046     .0087041    1.027005
             |
       _cons |   1.953076   .8738842     2.23   0.025     .2402943    3.665857
-------------+----------------------------------------------------------------
Agricultur~1 |
         age |   .0393703   .0206413     1.91   0.056     -.001086    .0798266
             |
 c.age#c.age |  -.0011458   .0002013    -5.69   0.000    -.0015404   -.0007512
             |
       urban |  -1.172595   .1299344    -9.02   0.000    -1.427262   -.9179283
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.906968    .227156   -17.20   0.000    -4.352185    -3.46175
   Male#0#1  |  -2.436263   .1523686   -15.99   0.000      -2.7349   -2.137626
   Male#1#0  |  -1.615015   .2771087    -5.83   0.000    -2.158138   -1.071892
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0882482   .1112166    -0.79   0.427    -.3062287    .1297322
       depen |   .8586069   .2693539     3.19   0.001      .330683    1.386531
     oth_pub |  -.6346215   .3066555    -2.07   0.038    -1.235655   -.0335878
    atschool |  -3.587529   .9907718    -3.62   0.000    -5.529406   -1.645652
             |
      region |
20-Chitta~g  |  -.4279506   .1837425    -2.33   0.020    -.7880793   -.0678219
   30-Dhaka  |   -.086167   .1934029    -0.45   0.656    -.4652297    .2928958
  40-Khulna  |   .6301854   .1889782     3.33   0.001     .2597949    1.000576
45-Mymens~h  |  -.0474589   .1773136    -0.27   0.789    -.3949872    .3000693
50-Rajshahi  |    1.13129   .2014456     5.62   0.000     .7364641    1.526116
 55-Rangpur  |   .2418364   .1860031     1.30   0.194    -.1227229    .6063957
  60-Sylhet  |   .4486269   .1847861     2.43   0.015     .0864528    .8108009
             |
       _cons |   3.412053   .5544351     6.15   0.000      2.32538    4.498726
-------------+----------------------------------------------------------------
Industry_s0  |
         age |   .0145187   .0248008     0.59   0.558    -.0340901    .0631275
             |
 c.age#c.age |  -.0015544   .0002611    -5.95   0.000    -.0020662   -.0010425
             |
       urban |   .3857696   .1333887     2.89   0.004     .1243325    .6472067
             |
 male#h_head#|
     married |
   Male#0#0  |  -4.077709    .247539   -16.47   0.000    -4.562876   -3.592541
   Male#0#1  |  -2.526379   .1856909   -13.61   0.000    -2.890327   -2.162431
   Male#1#0  |  -1.338358   .3298109    -4.06   0.000    -1.984776   -.6919406
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .1246787   .1234329     1.01   0.312    -.1172453    .3666026
       depen |   .5910764   .3057783     1.93   0.053     -.008238    1.190391
     oth_pub |  -1.282958   .4394584    -2.92   0.004     -2.14428   -.4216349
    atschool |   -4.17052   1.068936    -3.90   0.000    -6.265596   -2.075443
             |
      region |
20-Chitta~g  |  -.1434263   .2038167    -0.70   0.482    -.5428996     .256047
   30-Dhaka  |   .7457573   .2090816     3.57   0.000     .3359648     1.15555
  40-Khulna  |   .2868297   .2262297     1.27   0.205    -.1565724    .7302318
45-Mymens~h  |  -.1735038   .2033095    -0.85   0.393    -.5719831    .2249755
50-Rajshahi  |   1.102247   .2235176     4.93   0.000     .6641608    1.540334
 55-Rangpur  |   .2353318   .2150597     1.09   0.274    -.1861774     .656841
  60-Sylhet  |   .4596088   .2046375     2.25   0.025     .0585268    .8606909
             |
       _cons |   4.161931    .621446     6.70   0.000      2.94392    5.379943
-------------+----------------------------------------------------------------
Industry_s1  |
         age |   .0111631   .0346741     0.32   0.747    -.0567968     .079123
             |
 c.age#c.age |  -.0014092   .0003779    -3.73   0.000    -.0021498   -.0006685
             |
       urban |    .558012   .1548495     3.60   0.000     .2545125    .8615114
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.938285   .3192044   -12.34   0.000    -4.563914   -3.312655
   Male#0#1  |   -2.31553   .2244911   -10.31   0.000    -2.755524   -1.875535
   Male#1#0  |  -1.011289   .4256818    -2.38   0.018     -1.84561   -.1769682
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.2957625   .1483728    -1.99   0.046    -.5865679   -.0049571
       depen |   .8737386   .3726052     2.34   0.019     .1434458    1.604031
     oth_pub |  -.7371663   .5253032    -1.40   0.161    -1.766742     .292409
    atschool |  -4.272311   1.035081    -4.13   0.000    -6.301032   -2.243589
             |
      region |
20-Chitta~g  |  -.5664708   .2455598    -2.31   0.021    -1.047759   -.0851823
   30-Dhaka  |   .5973946   .2351989     2.54   0.011     .1364132    1.058376
  40-Khulna  |   .2371038   .2616065     0.91   0.365    -.2756356    .7498431
45-Mymens~h  |  -.3580036   .2397957    -1.49   0.135    -.8279945    .1119873
50-Rajshahi  |   .5284619   .2615207     2.02   0.043     .0158908    1.041033
 55-Rangpur  |  -.1324008   .2540963    -0.52   0.602    -.6304204    .3656189
  60-Sylhet  |  -.0242635   .2461872    -0.10   0.921    -.5067815    .4582545
             |
       _cons |      3.413   .8246327     4.14   0.000      1.79675     5.02925
-------------+----------------------------------------------------------------
Services_s0  |
         age |   .0044251   .0215405     0.21   0.837    -.0377936    .0466438
             |
 c.age#c.age |  -.0011715   .0002164    -5.41   0.000    -.0015957   -.0007474
             |
       urban |   .4353017   .1235387     3.52   0.000     .1931703    .6774332
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.740635   .2302097   -16.25   0.000    -4.191838   -3.289432
   Male#0#1  |  -2.150514   .1614894   -13.32   0.000    -2.467027      -1.834
   Male#1#0  |  -1.747815   .3344279    -5.23   0.000    -2.403282   -1.092349
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0052344   .1154379     0.05   0.964    -.2210197    .2314885
       depen |   1.075372   .2806104     3.83   0.000     .5253862    1.625359
     oth_pub |  -.7630384   .3528588    -2.16   0.031    -1.454629   -.0714479
    atschool |  -5.664498   1.023385    -5.54   0.000    -7.670295     -3.6587
             |
      region |
20-Chitta~g  |   .3623854   .1892746     1.91   0.056     -.008586    .7333567
   30-Dhaka  |   .7860634   .1994079     3.94   0.000     .3952311    1.176896
  40-Khulna  |   .7292757   .2097419     3.48   0.001     .3181891    1.140362
45-Mymens~h  |   .1968243   .1915636     1.03   0.304    -.1786335     .572282
50-Rajshahi  |   1.070059   .2170972     4.93   0.000     .6445568    1.495562
 55-Rangpur  |   .3267916   .2026366     1.61   0.107    -.0703688     .723952
  60-Sylhet  |   .7546704   .1936963     3.90   0.000     .3750326    1.134308
             |
       _cons |   3.903265   .5663103     6.89   0.000     2.793317    5.013213
-------------+----------------------------------------------------------------
Services_s1  |
         age |   .0629302   .0321088     1.96   0.050    -1.94e-06    .1258623
             |
 c.age#c.age |  -.0016186   .0003284    -4.93   0.000    -.0022623   -.0009749
             |
       urban |   .4118626   .1600101     2.57   0.010     .0982486    .7254765
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.963895   .3552083   -11.16   0.000     -4.66009     -3.2677
   Male#0#1  |  -2.180787   .2313779    -9.43   0.000    -2.634279   -1.727295
   Male#1#0  |  -1.408003   .4503833    -3.13   0.002    -2.290738   -.5252678
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.2474291   .1524615    -1.62   0.105    -.5462482      .05139
       depen |   .3363807   .3728317     0.90   0.367     -.394356    1.067117
     oth_pub |  -.8364151   .5618005    -1.49   0.137    -1.937524    .2646937
    atschool |  -28.90301   .3187785   -90.67   0.000     -29.5278   -28.27822
             |
      region |
20-Chitta~g  |   -.231088   .2783437    -0.83   0.406    -.7766317    .3144557
   30-Dhaka  |   .7981638   .2568915     3.11   0.002     .2946657    1.301662
  40-Khulna  |   .6868245   .2746868     2.50   0.012     .1484483    1.225201
45-Mymens~h  |  -.5911978   .2946758    -2.01   0.045    -1.168752   -.0136438
50-Rajshahi  |   1.173881   .2738359     4.29   0.000     .6371725    1.710589
 55-Rangpur  |   .7898595    .257392     3.07   0.002     .2853804    1.294339
  60-Sylhet  |    .645452   .2603012     2.48   0.013      .135271    1.155633
             |
       _cons |   1.257741   .8239456     1.53   0.127    -.3571623    2.872645
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Status_skill_1.dta saved
0 10 11 12 13 14 15 16

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  occupation |     24,960    6.646755    7.099439          0         16

note: 1.male#1.h_head#1.married omitted because of collinearity.
Iteration 0:  Log pseudolikelihood =  -62194404  
Iteration 1:  Log pseudolikelihood =  -50439936  
Iteration 2:  Log pseudolikelihood =  -49306322  
Iteration 3:  Log pseudolikelihood =  -49204734  
Iteration 4:  Log pseudolikelihood =  -49203122  
Iteration 5:  Log pseudolikelihood =  -49203110  
Iteration 6:  Log pseudolikelihood =  -49203110  

Multinomial logistic regression                       Number of obs  =  12,613
                                                      Wald chi2(119) = 3817.73
                                                      Prob > chi2    =  0.0000
Log pseudolikelihood = -49203110                      Pseudo R2      =  0.2089

------------------------------------------------------------------------------
             |               Robust
  occupation | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
Inactive     |  (base outcome)
-------------+----------------------------------------------------------------
Unemployed   |
         age |   .4142992   .0691362     5.99   0.000     .2787948    .5498035
             |
 c.age#c.age |  -.0059362   .0012236    -4.85   0.000    -.0083344    -.003538
             |
       urban |   .0015329    .164275     0.01   0.993    -.3204401     .323506
             |
 male#h_head#|
     married |
   Male#0#0  |   1.057535   .5933746     1.78   0.075    -.1054578    2.220528
   Male#0#1  |   .2069029    .603105     0.34   0.732    -.9751611    1.388967
   Male#1#0  |   .7416161   1.013971     0.73   0.465    -1.245731    2.728963
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .2604152   .1554327     1.68   0.094    -.0442273    .5650578
       depen |  -1.668518   .4870022    -3.43   0.001    -2.623025   -.7140114
     oth_pub |   .1766998   .2281845     0.77   0.439    -.2705336    .6239333
    atschool |  -1.653719   .1923961    -8.60   0.000    -2.030808    -1.27663
             |
      region |
20-Chitta~g  |  -.1208522   .2688578    -0.45   0.653    -.6478039    .4060994
   30-Dhaka  |    .104214   .2527802     0.41   0.680    -.3912262    .5996541
  40-Khulna  |  -.1298841   .2784543    -0.47   0.641    -.6756445    .4158764
45-Mymens~h  |   .0783941   .2847171     0.28   0.783    -.4796411    .6364293
50-Rajshahi  |  -.1736417   .3036132    -0.57   0.567    -.7687127    .4214293
 55-Rangpur  |  -.0402323   .2845176    -0.14   0.888    -.5978766    .5174119
  60-Sylhet  |  -.1169047    .290674    -0.40   0.688    -.6866153    .4528059
             |
       _cons |  -7.876928   .9501095    -8.29   0.000    -9.739108   -6.014747
-------------+----------------------------------------------------------------
Agricultur~0 |
         age |   .0974935   .0375743     2.59   0.009     .0238492    .1711378
             |
 c.age#c.age |  -.0015297   .0003884    -3.94   0.000    -.0022909   -.0007685
             |
       urban |  -1.427668     .21109    -6.76   0.000    -1.841397   -1.013939
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.461343   .4269482    -8.11   0.000    -4.298146   -2.624539
   Male#0#1  |  -2.414803   .3264377    -7.40   0.000    -3.054609   -1.774997
   Male#1#0  |  -.5689659   .6339503    -0.90   0.369    -1.811486    .6735539
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .2115859   .1815544     1.17   0.244    -.1442541    .5674259
       depen |   1.235892   .4799225     2.58   0.010     .2952617    2.176523
     oth_pub |  -2.963034    .673438    -4.40   0.000    -4.282949    -1.64312
    atschool |  -2.629612   .4440722    -5.92   0.000    -3.499977   -1.759246
             |
      region |
20-Chitta~g  |   .1366867   .2897904     0.47   0.637    -.4312921    .7046654
   30-Dhaka  |  -.8017298   .3602811    -2.23   0.026    -1.507868   -.0955918
  40-Khulna  |  -.1986555   .3313907    -0.60   0.549    -.8481694    .4508584
45-Mymens~h  |  -.3165407   .3620076    -0.87   0.382    -1.026063    .3929813
50-Rajshahi  |  -.0100592   .3506094    -0.03   0.977    -.6972409    .6771226
 55-Rangpur  |   .2871263   .3099262     0.93   0.354    -.3203179    .8945706
  60-Sylhet  |     .30195   .3284594     0.92   0.358    -.3418186    .9457187
             |
       _cons |  -.5782776   .8964523    -0.65   0.519    -2.335292    1.178737
-------------+----------------------------------------------------------------
Agricultur~1 |
         age |   .2159078   .0229114     9.42   0.000     .1710022    .2608134
             |
 c.age#c.age |  -.0027766   .0002412   -11.51   0.000    -.0032494   -.0023038
             |
       urban |  -1.631542   .1112344   -14.67   0.000    -1.849557   -1.413526
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.570445   .2263824   -11.35   0.000    -3.014146   -2.126743
   Male#0#1  |  -1.728768   .1845511    -9.37   0.000    -2.090481   -1.367054
   Male#1#0  |    .017745   .4520426     0.04   0.969    -.8682421    .9037322
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0539537   .1009728     0.53   0.593    -.1439493    .2518567
       depen |   .6925779   .2784825     2.49   0.013     .1467623    1.238393
     oth_pub |  -.9234436   .2011887    -4.59   0.000    -1.317766   -.5291211
    atschool |  -2.388606   .1578994   -15.13   0.000    -2.698083   -2.079129
             |
      region |
20-Chitta~g  |  -.5008735   .1714939    -2.92   0.003    -.8369954   -.1647515
   30-Dhaka  |  -.8515578   .1832401    -4.65   0.000    -1.210702   -.4924139
  40-Khulna  |   .3177804   .1648917     1.93   0.054    -.0054014    .6409621
45-Mymens~h  |   .0163773   .1759011     0.09   0.926    -.3283824     .361137
50-Rajshahi  |   .7029663   .1753339     4.01   0.000     .3593183    1.046614
 55-Rangpur  |   .3407339   .1685534     2.02   0.043     .0103754    .6710924
  60-Sylhet  |  -.0800882   .1890943    -0.42   0.672    -.4507062    .2905299
             |
       _cons |  -1.078745   .5535703    -1.95   0.051    -2.163722    .0062332
-------------+----------------------------------------------------------------
Industry_s0  |
         age |   .2085668   .0276661     7.54   0.000     .1543422    .2627914
             |
 c.age#c.age |  -.0034151   .0003271   -10.44   0.000    -.0040563    -.002774
             |
       urban |   .0314728   .1063186     0.30   0.767    -.1769079    .2398535
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.597858   .2308051   -11.26   0.000    -3.050227   -2.145488
   Male#0#1  |  -1.955573   .2010978    -9.72   0.000    -2.349718   -1.561429
   Male#1#0  |  -.7364785   .4993726    -1.47   0.140    -1.715231    .2422739
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0809693    .104496     0.77   0.438     -.123839    .2857776
       depen |  -.1363109   .2973087    -0.46   0.647    -.7190253    .4464034
     oth_pub |  -1.950368     .29947    -6.51   0.000    -2.537319   -1.363418
    atschool |  -3.218466   .1769559   -18.19   0.000    -3.565294   -2.871639
             |
      region |
20-Chitta~g  |  -.0194057   .1735549    -0.11   0.911     -.359567    .3207556
   30-Dhaka  |   .2794592   .1733317     1.61   0.107    -.0602646    .6191831
  40-Khulna  |    .059434    .186711     0.32   0.750     -.306513    .4253809
45-Mymens~h  |   .2348395   .1897631     1.24   0.216    -.1370894    .6067683
50-Rajshahi  |   .5753466   .1911062     3.01   0.003     .2007853    .9499078
 55-Rangpur  |   .2870188    .189663     1.51   0.130    -.0847138    .6587514
  60-Sylhet  |   .0193473   .2003847     0.10   0.923    -.3733995    .4120941
             |
       _cons |  -.3498715   .6013488    -0.58   0.561    -1.528494    .8287505
-------------+----------------------------------------------------------------
Industry_s1  |
         age |   .2140978    .032284     6.63   0.000     .1508223    .2773734
             |
 c.age#c.age |  -.0033887   .0003858    -8.78   0.000     -.004145   -.0026325
             |
       urban |   .1528324   .1095334     1.40   0.163    -.0618492     .367514
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.945424   .2414348   -12.20   0.000    -3.418627    -2.47222
   Male#0#1  |  -1.719369    .204855    -8.39   0.000    -2.120877   -1.317861
   Male#1#0  |  -.9391518   .5164477    -1.82   0.069    -1.951371     .073067
   Male#1#1  |          0  (omitted)
             |
  remitt_any |    .059612   .1102879     0.54   0.589    -.1565483    .2757722
       depen |  -.4198319   .3032808    -1.38   0.166    -1.014251    .1745876
     oth_pub |  -.7984688   .2241314    -3.56   0.000    -1.237758   -.3591793
    atschool |  -2.975699   .2037392   -14.61   0.000    -3.375021   -2.576378
             |
      region |
20-Chitta~g  |  -.0020636   .1784499    -0.01   0.991     -.351819    .3476917
   30-Dhaka  |     .30982   .1762891     1.76   0.079    -.0357002    .6553402
  40-Khulna  |  -.2444028   .2008396    -1.22   0.224    -.6380412    .1492357
45-Mymens~h  |   .1411144   .2012679     0.70   0.483    -.2533635    .5355923
50-Rajshahi  |    .217165   .2015533     1.08   0.281    -.1778722    .6122022
 55-Rangpur  |  -.0168928   .1996575    -0.08   0.933    -.4082143    .3744287
  60-Sylhet  |  -.0457282   .2122217    -0.22   0.829     -.461675    .3702186
             |
       _cons |  -.6599445   .6708606    -0.98   0.325    -1.974807    .6549181
-------------+----------------------------------------------------------------
Services_s0  |
         age |    .217209   .0228474     9.51   0.000      .172429     .261989
             |
 c.age#c.age |  -.0032993   .0002547   -12.95   0.000    -.0037986   -.0028001
             |
       urban |  -.0854865   .0960048    -0.89   0.373    -.2736523    .1026794
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.324815   .2120853   -10.96   0.000    -2.740495   -1.909136
   Male#0#1  |  -1.625909   .1873806    -8.68   0.000    -1.993169    -1.25865
   Male#1#0  |  -1.175314   .4827212    -2.43   0.015     -2.12143   -.2291979
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .1173208   .0952913     1.23   0.218    -.0694467    .3040883
       depen |   .1194686   .2725096     0.44   0.661    -.4146404    .6535775
     oth_pub |   -1.21292   .1918438    -6.32   0.000    -1.588927   -.8369131
    atschool |  -2.973326   .1465496   -20.29   0.000    -3.260558   -2.686094
             |
      region |
20-Chitta~g  |   .2476598   .1562537     1.58   0.113    -.0585919    .5539114
   30-Dhaka  |  -.1138244   .1630848    -0.70   0.485    -.4334647    .2058159
  40-Khulna  |   .3832895   .1620065     2.37   0.018     .0657626    .7008163
45-Mymens~h  |   .1704792    .170761     1.00   0.318    -.1642062    .5051647
50-Rajshahi  |    .280326   .1735388     1.62   0.106    -.0598037    .6204557
 55-Rangpur  |   .1482231   .1726448     0.86   0.391    -.1901545    .4866008
  60-Sylhet  |   .4782519   .1690637     2.83   0.005      .146893    .8096107
             |
       _cons |  -.5815272   .5294547    -1.10   0.272    -1.619239    .4561849
-------------+----------------------------------------------------------------
Services_s1  |
         age |   .3723083   .0251931    14.78   0.000     .3229308    .4216859
             |
 c.age#c.age |  -.0047206    .000291   -16.22   0.000    -.0052909   -.0041502
             |
       urban |   .2035573   .0930066     2.19   0.029     .0212678    .3858469
             |
 male#h_head#|
     married |
   Male#0#0  |  -1.867953   .2141629    -8.72   0.000    -2.287705   -1.448201
   Male#0#1  |  -1.316917   .1845668    -7.14   0.000    -1.678661   -.9551725
   Male#1#0  |   .0667501    .478948     0.14   0.889    -.8719707    1.005471
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0907871   .0938585     0.97   0.333    -.0931721    .2747463
       depen |  -.1531489   .2632618    -0.58   0.561    -.6691325    .3628348
     oth_pub |  -.2359199   .1613892    -1.46   0.144    -.5522369    .0803971
    atschool |  -1.955675   .1364835   -14.33   0.000    -2.223178   -1.688173
             |
      region |
20-Chitta~g  |  -.1736857   .1547114    -1.12   0.262    -.4769143     .129543
   30-Dhaka  |  -.0878005   .1560014    -0.56   0.574    -.3935576    .2179565
  40-Khulna  |   .1625034   .1578881     1.03   0.303    -.1469516    .4719583
45-Mymens~h  |    .081846   .1701049     0.48   0.630    -.2515535    .4152455
50-Rajshahi  |   .3418123   .1624507     2.10   0.035     .0234148    .6602098
 55-Rangpur  |   .0903815   .1648688     0.55   0.584    -.2327554    .4135185
  60-Sylhet  |   .2340585   .1666899     1.40   0.160    -.0926477    .5607646
             |
       _cons |  -4.212665   .5515038    -7.64   0.000    -5.293593   -3.131738
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Status_skill_2.dta saved
0 10 11 12 13 14 15 16

. 
. *============================================================================
> =
. *                                                                            
>    END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 04 - Modeling labor incomes by education skills and economic sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 08, 2021
. *                          Apr 19, 2022 - Included estimations saving (Kelly 
> Y. Montoya)
. *                          Jul 25, 2022 - Change loc numsector (only 3 sector
> s). KYM
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * y vars 
. loc depvar "ln_lai_m"

. 
. * x vars 
. loc ols_rhs           c.age##c.age urban ib0.male##ib0.h_head

. loc ols_rhs `ols_rhs' ib0.male#ibn.educ_lev salaried public_job

. loc ols_rhs `ols_rhs' ib1.region

. 
. levelsof sect_main , loc(numb_sectors)
1 2 3 4 5 6

. levelsof skill, loc(numb_skills)
1 2

. 
. foreach sector of numlist `numb_sectors' {
  2. 
.         foreach skill of numlist `numb_skills' {
  3.         
.                 * Parameters
.                 if "$use_saved_parameters" == "no" {
  4.                         regress `depvar' `ols_rhs' [pw = wgt] if sect_main
>  == `sector' & skill == `skill'   & sample == 1
  5.                         estimates save "${data_root}/models/${country}_${y
> ear}/Income_sector_`sector'_skill_`skill'.dta", replace
  6.                 }
  7.                 else {
  8.                         estimates use "${data_root}/models/${country}_${ye
> ar}\Income_sector_`sector'_skill_`skill'.dta"
  9.                         estimates esample: `depvar' `ols_rhs' [pw = ponder
> a] if `numsector' == `sector' & skill == `skill'   & sample==1
 10.                 }
 11.         
.                 mat b_`sector'_`skill' = e(b)
 12.                 scalar sigma_`sector'_`skill' = e(rmse)  
 13.         }
 14. }
(sum of wgt is 1,148,860.9971924)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =        372
                                                F(14, 356)        =          .
                                                Prob > F          =          .
                                                R-squared         =     0.1767
                                                Root MSE          =     1.4691

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0240562   .0303623     0.79   0.429    -.0356558    .0837681
             |
 c.age#c.age |  -.0005552   .0003224    -1.72   0.086    -.0011892    .0000788
             |
       urban |   .2262529   .2722587     0.83   0.407    -.3091847    .7616905
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .1194798      .2325     0.51   0.608    -.3377662    .5767259
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.4833349   .2287537    -2.11   0.035    -.9332134   -.0334564
     Male#2  |  -.2497763   .2451324    -1.02   0.309     -.731866    .2323134
     Male#3  |          0  (omitted)
             |
    salaried |   .5389807   .1719869     3.13   0.002     .2007427    .8772186
  public_job |   2.998149   .3276863     9.15   0.000     2.353704    3.642593
             |
      region |
20-Chitta~g  |  -.6522346    .300988    -2.17   0.031    -1.244173   -.0602965
   30-Dhaka  |  -.2718233   .3841381    -0.71   0.480    -1.027289    .4836419
  40-Khulna  |   .1553436   .3205149     0.48   0.628     -.474997    .7856842
45-Mymens~h  |  -.7306601   .3568717    -2.05   0.041    -1.432502   -.0288185
50-Rajshahi  |   .0773131   .3069969     0.25   0.801    -.5264424    .6810686
 55-Rangpur  |  -.6180246   .3039564    -2.03   0.043    -1.215801   -.0202487
  60-Sylhet  |  -.3949634   .2971436    -1.33   0.185    -.9793409    .1894141
             |
       _cons |    2.13151   .6512818     3.27   0.001     .8506664    3.412353
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_1_skill_1.dta save
> d
(sum of wgt is 574,568.791564941)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =        193
                                                F(15, 176)        =          .
                                                Prob > F          =          .
                                                R-squared         =     0.1057
                                                Root MSE          =     2.7493

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0914079   .0389117     2.35   0.020     .0146143    .1682016
             |
 c.age#c.age |  -.0011487    .000381    -3.01   0.003    -.0019006   -.0003967
             |
       urban |   .1402528   .3744374     0.37   0.708    -.5987124     .879218
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.5406895   .4575367    -1.18   0.239    -1.443654    .3622749
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |   -.250007   .3619933    -0.69   0.491    -.9644133    .4643992
     Male#5  |   1.103848   1.460089     0.76   0.451    -1.777688    3.985384
     Male#6  |  -.1362631   .4777693    -0.29   0.776    -1.079157    .8066311
     Male#7  |          0  (omitted)
             |
    salaried |   .5126627   .3958692     1.30   0.197    -.2685987    1.293924
  public_job |   .7231962   .4035527     1.79   0.075    -.0732289    1.519621
             |
      region |
20-Chitta~g  |    2.40798   1.968181     1.22   0.223    -1.476292    6.292252
   30-Dhaka  |   1.777869   1.946434     0.91   0.362    -2.063485    5.619223
  40-Khulna  |    1.93047   1.972288     0.98   0.329    -1.961909    5.822848
45-Mymens~h  |   1.626456   2.025887     0.80   0.423    -2.371702    5.624615
50-Rajshahi  |   1.860323   1.936495     0.96   0.338    -1.961418    5.682063
 55-Rangpur  |   2.216821   1.997704     1.11   0.269    -1.725718    6.159359
  60-Sylhet  |    1.34508   1.932267     0.70   0.487    -2.468316    5.158475
             |
       _cons |  -1.436641   2.351973    -0.61   0.542     -6.07834    3.205058
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_1_skill_2.dta save
> d
(sum of wgt is 7,471,206.7234497)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      2,475
                                                F(15, 2459)       =      13.68
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0862
                                                Root MSE          =     1.1149

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0269414   .0108657     2.48   0.013     .0056345    .0482483
             |
 c.age#c.age |  -.0003991   .0001113    -3.59   0.000    -.0006174   -.0001809
             |
       urban |   .1429207   .0694604     2.06   0.040     .0067137    .2791276
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .1916773   .0984815     1.95   0.052    -.0014379    .3847925
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.1641042   .0680843    -2.41   0.016    -.2976127   -.0305956
     Male#2  |  -.1962709   .0812147    -2.42   0.016    -.3555272   -.0370146
     Male#3  |          0  (omitted)
             |
    salaried |   .3083471   .0546649     5.64   0.000     .2011531    .4155411
  public_job |   .3297429   .1723098     1.91   0.056    -.0081444    .6676301
             |
      region |
20-Chitta~g  |  -.1909405   .1159271    -1.65   0.100    -.4182653    .0363843
   30-Dhaka  |  -.1486558    .124446    -1.19   0.232    -.3926856    .0953739
  40-Khulna  |   .1213028   .0943856     1.29   0.199    -.0637806    .3063862
45-Mymens~h  |  -.0266314   .0965932    -0.28   0.783    -.2160438    .1627809
50-Rajshahi  |   .1420113   .0987393     1.44   0.150    -.0516095    .3356321
 55-Rangpur  |  -.2141905   .1002014    -2.14   0.033    -.4106783   -.0177027
  60-Sylhet  |  -.5228509    .100859    -5.18   0.000    -.7206283   -.3250736
             |
       _cons |   1.219983   .2336811     5.22   0.000     .7617505    1.678215
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_2_skill_1.dta save
> d
(sum of wgt is 4,018,462.0094299)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,360
                                                F(16, 1343)       =      13.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1209
                                                Root MSE          =      1.335

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .1233646   .0190916     6.46   0.000      .085912    .1608172
             |
 c.age#c.age |  -.0014131   .0002057    -6.87   0.000    -.0018166   -.0010097
             |
       urban |   .1099808   .1333622     0.82   0.410    -.1516401    .3716016
             |
        male |
       Male  |          0  (omitted)
    1.h_head |    .053075    .115118     0.46   0.645    -.1727556    .2789056
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.3446067   .1329856    -2.59   0.010    -.6054887   -.0837246
     Male#5  |  -.3084742   .1947487    -1.58   0.113    -.6905189    .0735705
     Male#6  |  -.5293483   .5238477    -1.01   0.312    -1.556997    .4983005
     Male#7  |          0  (omitted)
             |
    salaried |   .3615563   .0859637     4.21   0.000     .1929185     .530194
  public_job |   1.051573   .2226695     4.72   0.000     .6147548    1.488391
             |
      region |
20-Chitta~g  |  -.2925501   .1851897    -1.58   0.114    -.6558426    .0707424
   30-Dhaka  |  -.0086311   .2150354    -0.04   0.968    -.4304728    .4132106
  40-Khulna  |   .3722909   .1310787     2.84   0.005     .1151496    .6294323
45-Mymens~h  |   .0607059   .1530445     0.40   0.692    -.2395264    .3609382
50-Rajshahi  |   .2617239   .1412189     1.85   0.064    -.0153098    .5387576
 55-Rangpur  |  -.0420404   .1481405    -0.28   0.777    -.3326524    .2485717
  60-Sylhet  |  -.3196875   .1771978    -1.80   0.071    -.6673021    .0279272
             |
       _cons |   -.637748   .3971352    -1.61   0.109    -1.416821    .1413247
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_2_skill_2.dta save
> d
(sum of wgt is 3,941,250.4300232)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,483
                                                F(15, 1467)       =       8.32
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1161
                                                Root MSE          =     .62981

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0522311    .011921     4.38   0.000     .0288472    .0756151
             |
 c.age#c.age |  -.0006384   .0001499    -4.26   0.000    -.0009324   -.0003444
             |
       urban |   .1003347   .0404855     2.48   0.013     .0209189    .1797504
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0354927    .058124     0.61   0.542    -.0785222    .1495077
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.1413875   .0475534    -2.97   0.003    -.2346673   -.0481076
     Male#2  |  -.1036219   .0545171    -1.90   0.058    -.2105617    .0033179
     Male#3  |          0  (omitted)
             |
    salaried |  -.0360112   .0962644    -0.37   0.708    -.2248417    .1528193
  public_job |  -1.629017   .4276293    -3.81   0.000    -2.467847   -.7901868
             |
      region |
20-Chitta~g  |  -.1009608    .076111    -1.33   0.185    -.2502587    .0483371
   30-Dhaka  |   .0450667    .055624     0.81   0.418    -.0640444    .1541778
  40-Khulna  |   -.048932   .0690515    -0.71   0.479    -.1843821    .0865182
45-Mymens~h  |  -.1078734    .062645    -1.72   0.085    -.2307567      .01501
50-Rajshahi  |  -.0841762   .0608875    -1.38   0.167    -.2036121    .0352597
 55-Rangpur  |  -.2795841   .0800073    -3.49   0.000     -.436525   -.1226432
  60-Sylhet  |  -.3879067   .0748779    -5.18   0.000    -.5347859   -.2410276
             |
       _cons |   1.302035   .2098852     6.20   0.000     .8903282    1.713743
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_3_skill_1.dta save
> d
(sum of wgt is 3,941,956.7865295)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,339
                                                F(16, 1322)       =      11.61
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1948
                                                Root MSE          =      .7517

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0548829   .0109396     5.02   0.000      .033422    .0763438
             |
 c.age#c.age |   -.000559   .0001413    -3.95   0.000    -.0008363   -.0002817
             |
       urban |   .2476543   .0541679     4.57   0.000     .1413899    .3539187
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.0838231   .0731212    -1.15   0.252    -.2272694    .0596231
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.4701005   .1291491    -3.64   0.000    -.7234601   -.2167408
     Male#5  |  -.1795593   .1502302    -1.20   0.232    -.4742749    .1151564
     Male#6  |  -.4286449   .2560432    -1.67   0.094    -.9309403    .0736505
     Male#7  |          0  (omitted)
             |
    salaried |  -.2167596   .1347217    -1.61   0.108    -.4810512    .0475319
  public_job |   .1206343   .1602424     0.75   0.452    -.1937229    .4349915
             |
      region |
20-Chitta~g  |   .0885671   .0859995     1.03   0.303    -.0801434    .2572776
   30-Dhaka  |   .2009702   .0646719     3.11   0.002     .0740995     .327841
  40-Khulna  |  -.1686444   .0645127    -2.61   0.009    -.2952028    -.042086
45-Mymens~h  |   .0303541   .0695496     0.44   0.663    -.1060856    .1667937
50-Rajshahi  |   -.079906   .0811344    -0.98   0.325    -.2390723    .0792603
 55-Rangpur  |  -.1329001   .0753294    -1.76   0.078    -.2806783     .014878
  60-Sylhet  |   -.471625   .1095194    -4.31   0.000    -.6864757   -.2567743
             |
       _cons |   1.765296   .2697521     6.54   0.000     1.236107    2.294485
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_3_skill_2.dta save
> d
(sum of wgt is 1,670,692.1684265)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =        625
                                                F(15, 609)        =       3.79
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1324
                                                Root MSE          =     .63478

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |    .058928    .020171     2.92   0.004     .0193149    .0985411
             |
 c.age#c.age |  -.0006894   .0002428    -2.84   0.005    -.0011663   -.0002126
             |
       urban |   .0582005   .0680315     0.86   0.393    -.0754043    .1918053
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0430111   .1009947     0.43   0.670    -.1553291    .2413513
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.0525867    .070945    -0.74   0.459    -.1919133    .0867399
     Male#2  |   .1606422   .0828114     1.94   0.053    -.0019883    .3232727
     Male#3  |          0  (omitted)
             |
    salaried |  -.0429592   .1235018    -0.35   0.728    -.2855002    .1995818
  public_job |   .3609604   .2861477     1.26   0.208    -.2009956    .9229164
             |
      region |
20-Chitta~g  |   .0311724   .1387319     0.22   0.822    -.2412786    .3036234
   30-Dhaka  |   .1121289   .1012631     1.11   0.269    -.0867385    .3109962
  40-Khulna  |  -.1081698   .1143023    -0.95   0.344    -.3326443    .1163048
45-Mymens~h  |   .0567064   .1212538     0.47   0.640    -.1814199    .2948327
50-Rajshahi  |  -.1640748   .1241464    -1.32   0.187    -.4078819    .0797323
 55-Rangpur  |  -.3396711   .1267984    -2.68   0.008    -.5886863    -.090656
  60-Sylhet  |  -.2036584   .1150533    -1.77   0.077    -.4296077    .0222909
             |
       _cons |   1.103462   .3764689     2.93   0.004     .3641267    1.842796
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_4_skill_1.dta save
> d
(sum of wgt is 3,252,464.0574036)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,101
                                                F(16, 1084)       =      23.79
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3818
                                                Root MSE          =     .70927

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0903869   .0112174     8.06   0.000     .0683766    .1123972
             |
 c.age#c.age |  -.0008777    .000138    -6.36   0.000    -.0011485   -.0006069
             |
       urban |   .1054863   .0526515     2.00   0.045     .0021758    .2087968
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.0580361   .0665664    -0.87   0.383    -.1886498    .0725775
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.6309192   .0714152    -8.83   0.000     -.771047   -.4907914
     Male#5  |  -.4895356   .0933078    -5.25   0.000      -.67262   -.3064513
     Male#6  |  -.4284701   .2234484    -1.92   0.055    -.8669104    .0099702
     Male#7  |          0  (omitted)
             |
    salaried |  -.2396789   .0982493    -2.44   0.015    -.4324591   -.0468986
  public_job |   .1545131   .1050737     1.47   0.142    -.0516578    .3606839
             |
      region |
20-Chitta~g  |   .1293362    .082368     1.57   0.117    -.0322826    .2909549
   30-Dhaka  |    .413948   .0671072     6.17   0.000     .2822734    .5456227
  40-Khulna  |  -.1398133   .0823774    -1.70   0.090    -.3014505    .0218239
45-Mymens~h  |   .2628278   .0892168     2.95   0.003     .0877707    .4378849
50-Rajshahi  |  -.0752437   .0841203    -0.89   0.371    -.2403007    .0898134
 55-Rangpur  |  -.1740936   .0999917    -1.74   0.082    -.3702928    .0221055
  60-Sylhet  |  -.2129745   .0848855    -2.51   0.012    -.3795329    -.046416
             |
       _cons |    1.23526   .2580084     4.79   0.000     .7290072    1.741512
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_4_skill_2.dta save
> d
(sum of wgt is 4,882,750.2703857)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,883
                                                F(15, 1867)       =      10.24
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0983
                                                Root MSE          =     .67568

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0318625    .010389     3.07   0.002     .0114873    .0522378
             |
 c.age#c.age |  -.0003881   .0001173    -3.31   0.001    -.0006182    -.000158
             |
       urban |   .1129885   .0394274     2.87   0.004     .0356621     .190315
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .1211387   .0734853     1.65   0.099    -.0229832    .2652606
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.1289349   .0495145    -2.60   0.009    -.2260445   -.0318254
     Male#2  |  -.1157994   .0499317    -2.32   0.020    -.2137273   -.0178715
     Male#3  |          0  (omitted)
             |
    salaried |   .1732256   .0513876     3.37   0.001     .0724423    .2740088
  public_job |   .2976048    .196898     1.51   0.131    -.0885586    .6837681
             |
      region |
20-Chitta~g  |  -.1797751   .0800841    -2.24   0.025    -.3368388   -.0227114
   30-Dhaka  |   .0608341    .070467     0.86   0.388    -.0773682    .1990365
  40-Khulna  |  -.0440709   .0685855    -0.64   0.521    -.1785832    .0904413
45-Mymens~h  |  -.3014881   .0782679    -3.85   0.000    -.4549899   -.1479863
50-Rajshahi  |  -.0422334   .0698441    -0.60   0.545    -.1792142    .0947473
 55-Rangpur  |  -.2911615   .0752287    -3.87   0.000    -.4387027   -.1436204
  60-Sylhet  |  -.2895478    .075521    -3.83   0.000    -.4376622   -.1414334
             |
       _cons |    1.54614   .1949692     7.93   0.000     1.163759     1.92852
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_5_skill_1.dta save
> d
(sum of wgt is 4,142,088.9911499)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,744
                                                F(15, 1727)       =          .
                                                Prob > F          =          .
                                                R-squared         =     0.1982
                                                Root MSE          =     .68122

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0637456   .0108777     5.86   0.000     .0424108    .0850803
             |
 c.age#c.age |  -.0006943   .0001303    -5.33   0.000    -.0009499   -.0004388
             |
       urban |    .091292   .0422552     2.16   0.031     .0084153    .1741688
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0820464   .0562596     1.46   0.145    -.0282979    .1923906
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.3996136   .0815754    -4.90   0.000    -.5596105   -.2396166
     Male#5  |  -.2075612   .0965236    -2.15   0.032    -.3968766   -.0182458
     Male#6  |  -.8559943   .0968372    -8.84   0.000    -1.045925   -.6660638
     Male#7  |          0  (omitted)
             |
    salaried |  -.0672947   .0577064    -1.17   0.244    -.1804764    .0458871
  public_job |   .3150456   .0478094     6.59   0.000     .2212752     .408816
             |
      region |
20-Chitta~g  |   .1457708    .072527     2.01   0.045     .0035209    .2880207
   30-Dhaka  |   .2683901   .0654868     4.10   0.000     .1399484    .3968318
  40-Khulna  |   .0598071   .0602129     0.99   0.321    -.0582908    .1779051
45-Mymens~h  |   .0068938   .0805557     0.09   0.932    -.1511031    .1648908
50-Rajshahi  |   .0345236   .0733031     0.47   0.638    -.1092485    .1782957
 55-Rangpur  |  -.1559021   .0694747    -2.24   0.025    -.2921656   -.0196386
  60-Sylhet  |  -.1871338   .0711054    -2.63   0.009    -.3265955    -.047672
             |
       _cons |   1.324701   .2178288     6.08   0.000     .8974649    1.751937
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_5_skill_2.dta save
> d
(sum of wgt is 1,338,835.6506653)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =        530
                                                F(15, 514)        =       2.65
                                                Prob > F          =     0.0007
                                                R-squared         =     0.0576
                                                Root MSE          =     1.0025

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |    .008672   .0275478     0.31   0.753    -.0454482    .0627922
             |
 c.age#c.age |  -.0000731   .0003148    -0.23   0.817    -.0006916    .0005454
             |
       urban |    .279285   .1250266     2.23   0.026      .033659    .5249111
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .1199619   .1209609     0.99   0.322    -.1176767    .3576005
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.2335715   .1621172    -1.44   0.150    -.5520653    .0849223
     Male#2  |   .0268513   .1208055     0.22   0.824    -.2104819    .2641846
     Male#3  |          0  (omitted)
             |
    salaried |   .0754708    .106212     0.71   0.478    -.1331923    .2841339
  public_job |   .3934309   .2074063     1.90   0.058    -.0140374    .8008991
             |
      region |
20-Chitta~g  |  -.0725651    .156507    -0.46   0.643    -.3800371     .234907
   30-Dhaka  |   .2128966    .166338     1.28   0.201    -.1138894    .5396825
  40-Khulna  |   .1881231   .1427871     1.32   0.188     -.092395    .4686412
45-Mymens~h  |  -.1534804   .1210237    -1.27   0.205    -.3912424    .0842816
50-Rajshahi  |   .1548674   .1255187     1.23   0.218    -.0917253    .4014601
 55-Rangpur  |   .0338378   .1521379     0.22   0.824    -.2650508    .3327264
  60-Sylhet  |  -.1087606   .1240411    -0.88   0.381    -.3524504    .1349293
             |
       _cons |   1.653534   .5114408     3.23   0.001     .6487626    2.658305
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_6_skill_1.dta save
> d
(sum of wgt is 5,372,801.6852722)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      2,332
                                                F(16, 2315)       =      28.89
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2480
                                                Root MSE          =     .95559

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0593101   .0175032     3.39   0.001     .0249864    .0936337
             |
 c.age#c.age |  -.0005017   .0002071    -2.42   0.016    -.0009078   -.0000955
             |
       urban |   .4264868   .0535395     7.97   0.000     .3214964    .5314772
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.0530729    .065424    -0.81   0.417    -.1813687    .0752229
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.5706695   .0679776    -8.39   0.000    -.7039728   -.4373661
     Male#5  |  -.3942032   .0876337    -4.50   0.000    -.5660519   -.2223545
     Male#6  |  -.3216795   .2398249    -1.34   0.180    -.7919735    .1486146
     Male#7  |          0  (omitted)
             |
    salaried |  -.0271831   .0729343    -0.37   0.709    -.1702065    .1158404
  public_job |   .1405612   .0617943     2.27   0.023     .0193832    .2617392
             |
      region |
20-Chitta~g  |   .0466558   .0788413     0.59   0.554    -.1079511    .2012627
   30-Dhaka  |   .3802673   .0838033     4.54   0.000     .2159299    .5446047
  40-Khulna  |   .0067457   .0701686     0.10   0.923    -.1308542    .1443457
45-Mymens~h  |  -.0157836     .07128    -0.22   0.825     -.155563    .1239958
50-Rajshahi  |  -.0907603   .0837653    -1.08   0.279    -.2550232    .0735025
 55-Rangpur  |  -.3221065   .0872315    -3.69   0.000    -.4931666   -.1510464
  60-Sylhet  |  -.2834585   .0756495    -3.75   0.000    -.4318064   -.1351107
             |
       _cons |   1.287744   .3489304     3.69   0.000      .603495    1.971993
------------------------------------------------------------------------------
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO AM24/BGD-MPO
> -Microsimulation/2024AM/Data/models/BGD_2022/Income_sector_6_skill_2.dta save
> d

. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 05 - Population Growth
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 05, 2021
. *===========================================================================
. * Modified by: Kelly Y. Montoya
. *                               Jul 25, 2022 - Adjusted fexp_s according to W
> DI population.
. *===========================================================================
. loc prior_wgt "wgt"

. loc nw_name   "all"

. 
. *===========================================================================
. * household ID (numeric) = psu + household   
. *sort psu id, stable
. *egen psuhid = group(psu id)
. 
. 
. 
. if $weights == 1 {
. *===========================================================================
. * 1. dummies for category
. *===========================================================================
. * dummies by cross categories "gender and age groups"
. gen     age_groups =  .
. replace age_groups =  1 if age >=  0 & age <=  14
. replace age_groups =  2 if age >= 15 & age <=  29
. replace age_groups =  3 if age >= 30 & age <=  44
. replace age_groups =  4 if age >= 45 & age <=  64
. replace age_groups =  5 if age >= 65 
. 
. egen int groupvar = group(male age_groups) 
. xi i.groupvar, noomit prefix(_by)
. unab caliblist: _by*
. 
. 
. loc mem_rel   "h_head"
. loc byvars    "male age_groups"
. loc hhd_id    "hhid"
. loc prior_wgt "wgt"
. loc nw_name   "all"
. 
. *===========================================================================
. * 2. means by category and total population in base year
. *===========================================================================
. total `caliblist' [pw = `prior_wgt'] 
. mat  tot_old = e(b)
. 
. * share by groups
. sum `prior_wgt' if e(sample), meanonly 
. scalar  total_`nw_name' = r(sum)
. mat mean_old = tot_old / r(sum)
. mat mean_old = mean_old'
. 
. * add n-1 restrictions
. mata: st_matrix("tot_new", st_matrix("tot_old"):*st_matrix("vec_pop_grw1")')
. mata: st_matrix("mean_`nw_name'",st_matrix("tot_new")'/sum(st_matrix("tot_new
> ")))
. mata: st_local("totalnew",strofreal(sum(st_matrix("tot_new")),"%20.5f"))
. mata: st_numscalar("TN1",sum(st_matrix("tot_new")))
. mat mean_`nw_name'c = mean_`nw_name'[2...,1]
. 
. *===========================================================================
. * 3. constrains
. *===========================================================================
. capture drop sort
. gsort `hhd_id' -`mem_rel'
. gen long sort = _n 
. bysort `hhd_id' (sort): gen byte _first = (_n == 1) 
. 
. 
. capture drop aux
. gen aux = 1 
. egen _hhsize = sum(aux), by(`hhd_id')
. 
. 
. * I use this expression in case individuals have different weights in the hou
> sehold
. * Within the household
. bysort `hhd_id' (sort): gen double _sumw_`nw_name' = sum(`prior_wgt')    
. bysort `hhd_id' (sort): replace    _sumw_`nw_name' = _sumw_`nw_name'[_N] 
. 
. foreach x of varlist `caliblist' {
  2.     bysort `hhd_id' (sort): gen double m_`nw_name'_`x' = sum(`x' * `prior_
> wgt' ) 
  3.     bysort `hhd_id' (sort): replace    m_`nw_name'_`x' = m_all_`x'[_N]/_su
> mw_`nw_name'
  4.         loc recaliblist `recaliblist' m_`nw_name'_`x'
  5. }
. 
. * add n-1 restrictions
. loc first: word 1 of `recaliblist'
. loc recaliblist: list recaliblist - first
. mat rownames mean_`nw_name'c = `recaliblist'
. 
. loc nw_name = "all"
. loc mem_rel  "h_head"
. tempvar factor_`nw_name'
. loc varlist: rownames(mean_`nw_name'c)
. mata: st_local("totalnew",strofreal(sum(st_matrix("tot_new")),"%20.5f"))
. 
. noi di "maxentropy `varlist' if `mem_rel' == 1, matrix(mean_`nw_name'c) prior
> (`prior_wgt') generate(`factor_`nw_name'') total(`totalnew')"
. maxentropy `varlist' if `mem_rel' == 1, matrix(mean_`nw_name'c) prior(`prior_
> wgt') generate(`factor_`nw_name'') total(`totalnew')
. 
. bysort `hhd_id' (sort): gen `nw_name'_wgt = `prior_wgt' * `factor_`nw_name''[
> 1]/_sumw_`nw_name'
. la var `nw_name'_wgt "Simulated `nw_name' weights"
. 
. drop aux* psuhid groupvar age_groups
. 
. //gen fexp_s = fexp
. //label var fexp_s "weight -$scenario"
. 
. rename  all_wgt fexp_s 
. 
. 
. }

. 
. 
. if $weights == 0 {
.     
.         sum wgt [w = wgt]
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         wgt |  61,849   165687181    4160.661   1958.489   411.2634   8718.561
.         sca var0 = r(sum_w)
.         sca var1 = growth_pop_wdi[1,1]
.         sca ratio_pop = var1/var0
.         gen fexp_s = round(`prior_wgt'* ratio_pop)
.         
.         * Check
.         sum fexp_s [w = fexp_s]
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
      fexp_s |  61,849   167395587    4203.459   1978.766        416       8809
.         if abs(r(sum_w) - growth_pop_wdi[1,1]) > 1000000 di in red "WARNING: 
> Population differs in more than a million people with WDI."
.         
.         
.         * Another way to adjust but keeping all decimal positions.
.         /*sum fexp_s [w = fexp_s]
>         if abs(r(sum_w) - growth_pop_wdi[1,1]) != 0 {
>             sum fexp_s [w = fexp_s]
>                 sca var0 = r(sum_w) - growth_pop_wdi[1,1]
>                 sca var1 = growth_pop_wdi[1,1]
>                 sca ratio_pop = var0/var1
>                 replace fexp_s = fexp_s * (1 + ratio_pop)
>         }*/
. 
. }

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 06 - Simulating changes in the labor force participation rate
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 09, 2022 Kelly Y. Montoya minor corrections an
> d warnings.
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * sample labor force 
. gen lf_samp = (active ==1) if sample==1
(17,415 missing values generated)

. sum lf_samp [aw = wgt] 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lf_samp |  44,434   119100762    .4654076   .4988075          0          1

. 
. * goal
. note: this procedure changes the labor market structure (% inactivity, unempl
> oyment, employment by sector) according to elasticities.

. mat activity = J(1,1,r(mean))

. mat activity = r(mean)*(1 + growth_labor[1,1])

. mat list activity

symmetric activity[1,1]
          c1
r1  .4571312

. 
. * allocate individuals according to their utility of being inactive
. *clonevar  active_s = lf_samp
. clonevar  active_s = active

. clonevar U0 = U0_1 
(52,623 missing values generated)

. replace  U0 = U0_2 if U0 == .
(12,613 real changes made)

. gsort -active_s U0 hhid 

. cap drop aux*

. 
. qui sum fexp_s                               if sample == 1 & lf_samp != . 

. gen double aux = sum(fexp_s)/r(sum)  if sample == 1 & lf_samp != . 
(17,415 missing values generated)

. replace active_s = 1    if aux <= (activity[1,1] + 10^(-23)) & sample == 1 & 
> lf_samp !=. 
(0 real changes made)

. replace active_s = 0    if aux >  (activity[1,1] + 10^(-23)) & sample == 1 & 
> lf_samp !=. 
(800 real changes made)

. 
. * check
. sum lf_samp  [aw = wgt]   if sample == 1 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lf_samp |  44,434   119100762    .4654076   .4988075          0          1

. scalar v0 = r(mean)

. sum active_s [aw = fexp_s] if sample == 1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    active_s |  44,434   120329030    .4571309   .4981645          0          1

. scalar v1 = r(mean)

. 
. di scalar(v1)/scalar(v0)-1
-.01778377

. mat list growth_labor

growth_labor[8,1]
          rate
r1  -.01778312
r2  -.11077523
r3  -.02811961
r4  -.02811961
r5  -.00081903
r6   .02493667
r7    .0218013
r8   .00856453

. 
. if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_labor[1,1],.005)
>  ) != 0 {
.         di in red "WARNING: New active population doesn´t match growth rate."
.         break
. }

. 
. cap drop aux*

. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 07 - Simulating changes in the unemployment rate
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 09, 2022 Kelly Y. Montoya minor corrections an
> d warnings.
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * sample unemployment rate 
. gen     aux = unemplyd / lf_samp 
(41,465 missing values generated)

. sum aux [w = wgt] if lf_samp == 1
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  20,384  55430400.1    .0440891    .205298          0          1

. * goal
. mat unemploy = r(mean)*(1 + growth_labor[2,1])

. mat list unemploy

symmetric unemploy[1,1]
           c1
r1  .03920508

. 
. * allocate individuals according to their probability of being unemployed
. *gen    unemplyd_s = unemplyd  if active_s == 1
. clonevar unemplyd_s = unemplyd

. clonevar U10 = U10_1 
(52,623 missing values generated)

. replace  U10 = U10_2 if U10 == .
(12,613 real changes made)

. gsort -unemplyd_s U10 id 

. cap drop aux*

. 
. qui sum fexp_s                              if active_s == 1 

. gen double aux = sum(fexp_s)/r(sum) if active_s == 1 
(41,976 missing values generated)

. 
. replace unemplyd_s = 1                      if aux <= (unemploy[1,1] + epsflo
> at()) & active_s == 1 
(0 real changes made)

. replace unemplyd_s = 0                      if aux >  (unemploy[1,1] + epsflo
> at()) & active_s == 1 
(219 real changes made)

. 
. * simulating: employment status
. *gen     emplyd_s = emplyd  if active_s  == 1
. clonevar emplyd_s = emplyd

. replace emplyd_s = 1       if unemplyd_s == 0 & active_s == 1
(226 real changes made)

. replace emplyd_s = 0       if unemplyd_s == 1 & active_s == 1
(0 real changes made)

. tab emplyd_s active_s

           |       active_s
  emplyd_s |         0          1 |     Total
-----------+----------------------+----------
         0 |    39,232        765 |    39,997 
         1 |     2,744     19,108 |    21,852 
-----------+----------------------+----------
     Total |    41,976     19,873 |    61,849 

. 
. * check 
. capt drop aux

. gen     aux = unemplyd / lf_samp 
(41,465 missing values generated)

. sum aux [w = wgt] if lf_samp == 1 
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  20,384  55430400.1    .0440891    .205298          0          1

. scalar v0 = r(mean)

. 
. cap drop aux

. gen     aux = unemplyd_s / active_s 
(41,976 missing values generated)

. sum aux [w = fexp_s] if active_s == 1 
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,873    55794788    .0391974   .1940693          0          1

. scalar v1 = r(mean)

. 
. di scalar(v1)/scalar(v0)-1
-.11094891

. mat list growth_labor

growth_labor[8,1]
          rate
r1  -.01778312
r2  -.11077523
r3  -.02811961
r4  -.02811961
r5  -.00081903
r6   .02493667
r7    .0218013
r8   .00856453

. 
. if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_labor[2,1],.005)
>  ) != 0 {
.         di in red "WARNING: New active population doesn´t match growth rate."
.         break
. }

. 
. drop aux*

. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 08 - Simulating changes in the employment structure
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 10, 2022 Kelly Y. Montoya Changed estructure s
> ectoral matrix line 293.
. *                          Aug 11, 2022 Kelly Y. Montoya Changed informality 
> simulation and added checks for estructure and informality.
. *===========================================================================
. 
. note: those with public jobs do not change between sectors

. 
. *===========================================================================
. * I. MISCELLANEOUS TASKS  
. *===========================================================================
. 
. * public sector fixed
. clonevar public   = public_job
(40,223 missing values generated)

. 
. * number of sectors
. clonevar sectorg = sect_main
(40,522 missing values generated)

. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     21,327    3.846861     1.59241          1          6

. loc lim = r(max)

. 
. * employment structure 
. mat sector     = J(`lim',1,.)

. mat sect_prv   = J(`lim',1,.)

. mat sect_pub   = J(`lim',1,.)

. 
. mat sector_s   = J(`lim',1,.)

. mat sect_prv_s = J(`lim',1,.)

. mat sect_pub_s = J(`lim',1,.)

. 
. forvalues a = 1/`lim' {
  2.         
.         * base year 
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' 
  3.         mat sector[`a',1]   = r(sum)
  4. 
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' & public == 0 
  5.         mat sect_prv[`a',1]   = r(sum)
  6.         
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' & public == 1
  7.         mat sect_pub[`a',1]   = r(sum)
  8.         
.         * simulated
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' 
  9.         mat sector_s[`a',1] = r(sum)
 10. 
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' & public =
> = 0 
 11.         mat sect_prv_s[`a',1] = r(sum)
 12. 
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' & public =
> = 1 
 13.         mat sect_pub_s[`a',1] = r(sum)
 14. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |        939    3082.417    1801.169   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |        934    3090.396    1800.212   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          5    1591.936    1437.944   411.2634   3612.648

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        939    3114.095    1819.649        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        934    3122.154    1818.684        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          5      1608.6    1452.533        416       3650

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,232    2978.101    1640.055   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,212    2985.474    1638.455   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |         20    1056.769    607.6478   475.7301   2718.986

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,232    3008.718    1656.849        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,212    3016.166    1655.233        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |         20      1067.8    613.7984        481       2747

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,582    2868.485    2191.247   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,519    2876.612    2193.157   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |         63      2414.5    2047.147   411.2634   8057.709

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,582    2898.098    2213.812        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,519    2906.309    2215.741        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |         63    2439.476    2068.226        416       8141

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,987    2978.173    2193.334   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,908    3010.822    2204.033   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |         79    2189.634    1751.084   411.2634   6185.226

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,987    3008.936    2215.942        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,908    3041.919    2226.757        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |         79    2212.329    1768.999        416       6249

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,577     2541.52    2035.911   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,185    2581.944     2048.04   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |        392    2006.832    1786.195   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,577    2567.752    2056.839        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,185     2608.59    2069.093        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        392    2027.594    1804.558        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      4,010    2318.446    2036.428   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,218    2441.775    2071.936   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |        792    1817.345    1801.581   411.2634   8057.709

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      4,010    2342.443    2057.366        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,218    2467.036    2093.244        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        792    1836.207    1820.089        416       8141

. 
. * employment matrix goals 
. loc row_tot = rowsof(growth_labor)

. local lim =6

. mat growth_estru = growth_labor[3..`row_tot',1]

. 
. mata: st_mat("growth_estru", "sector", 1,`lim')

. mat sector = sector , sector_mata

. mata: st_gr("sector_s", "shares_mata")

. 
. * re-weighting the shares 
. sum fexp_s if emplyd_s == 1 & sample == 1

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |     21,498    2746.539    2015.375        416       8809

. ret li

scalars:
                  r(N) =  21498
              r(sum_w) =  21498
               r(mean) =  2746.539305981952
                r(Var) =  4061735.009875166
                 r(sd) =  2015.374657445897
                r(min) =  416
                r(max) =  8809
                r(sum) =  59045102

. mata: st_repond_1("shares_mata", "growth_estru", 2, `r(sum)', "sector_rep")

. 
. * sector dummies: identifying employed individuals who already have sector an
> d those who do not
. forvalues s = 1/`lim' {
  2.         gen d_act`s'     = cond(sectorg == `s',1,0) if sample == 1 & emply
> d_s == 1
  3.         gen d_act`s'_sim = d_act`s'                  
  4. }
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)
(40,351 missing values generated)

. 
. order d_act*_sim

. 
. * This is only for those who belongs to the employment in both moments
. egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emplyd_s == 1 & emplyd
>  == 1 & sample  == 1
(40,522 missing values generated)

. tab     changed

    changed |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     21,327      100.00      100.00
------------+-----------------------------------
      Total |     21,327      100.00

. 
. 
. *===========================================================================
. *II. SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS
. *===========================================================================
. * Mata rutine which orders sectors in ascending way 
. mata: st_order("growth_estru_n", 1, 2, "aux")

. 
. dis in red "SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS"
SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS

. 
. forvalues r = 1/`lim' {
  2.         
.         *drop jobs from decreasing sectors 
.         if aux[`r',2] < 0 {
  3. 
.                 *identifies the sector          
.                 loc s = aux[`r',1] 
  4.                 dis in red "economic sector `s'"
  5.                 
.                 *orders the population according to: activity, probability, h
> hd id and ind id 
.                 loc p = `s' + 10
  6.                 noi di "Sector `s' Occupation `p'"
  7.                 clonevar P`s' = U`p'_1 
  8.                 replace  P`s' = U`p'_2 if P`s' == .
  9.                 
.                 gsort  -d_act`s'_sim -P`s' id -public
 10.                 capture drop aux
 11.                 gen     aux = sum(fexp_s) if emplyd_s == 1 & emplyd == 1 &
>  d_act`s'_sim == 1                                                 
 12.                 replace d_act`s'_sim = 0  if emplyd_s == 1 & emplyd == 1 &
>  d_act`s'_sim == 1 & (aux > sector_rep[`s',1] ) 
 13.                 
.                 drop aux changed
 14.                 egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emp
> lyd_s == 1 & emplyd == 1 & sample  == 1 
 15.         }
 16. }
economic sector 2
Sector 2 Occupation 12
(52,623 missing values generated)
(12,613 real changes made)
(56,617 missing values generated)
(218 real changes made)
(40,522 missing values generated)
economic sector 1
Sector 1 Occupation 11
(52,623 missing values generated)
(12,613 real changes made)
(60,910 missing values generated)
(40 real changes made)
(40,522 missing values generated)
economic sector 3
Sector 3 Occupation 13
(52,623 missing values generated)
(12,613 real changes made)
(58,267 missing values generated)
(0 real changes made)
(40,522 missing values generated)

. 
. *===========================================================================
. *II. SECTORS WHICH INCREASE THEIR EMPLOYMENT LEVELS
. *===========================================================================
. * Mata routine which orders sectors in descending way
. mata: st_order("growth_estru_n", 1, -2, "aux")

. 
. * Employed ranking(t): 1- employed(t-1) and changed sector; 2- unemployed(t-1
> ); 3- inactives(t-1)
. gen     rank$t =.
(61,849 missing values generated)

. replace rank$t = 1 if emplyd_s == 1 & emplyd  == 1 & changed == 0
(258 real changes made)

. replace rank$t = 2 if emplyd_s == 1 & unemplyd == 1 
(219 real changes made)

. replace rank$t = 3 if emplyd_s == 1 & lf_samp  == 0
(1,927 real changes made)

. 
. dis in red "SECTORS WHICH INCREASED THEIR EMPLOYMENT LEVELS"
SECTORS WHICH INCREASED THEIR EMPLOYMENT LEVELS

. 
. forvalues r = 1/`lim'   {
  2. 
.         * Asign a job to increasing sectors
.         if aux[`r',2]>=0        {
  3.         
.                 * Identifies the sector         
.                 loc s = aux[`r',1] 
  4.                 dis in red "economic sector `s'"
  5. 
.                 loc p = `s' + 10
  6.                 noi di "Sector `s' Occupation `p'"
  7.                 clonevar P`s' = U`p'_1 
  8.                 replace  P`s' = U`p'_2 if P`s' == .
  9.                 
.                 gsort -d_act`s'_sim rank$t -P`s' id 
 10. 
.                 gen aux = sum(fexp_s)       if (d_act`s'_sim == 1 | rank$t !=
>  .)                                                           
 11.                 replace d_act`s'_sim = 1        if  d_act`s'_sim == 0 & ra
> nk$t != .  & (aux <= sector_rep[`s',1]) 
 12. 
.                 drop changed aux
 13.                 egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emp
> lyd_s == 1 & sample  == 1
 14.                 sum     changed
 15.                                 
.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & emplyd  
> == 1
 16.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & unemp
> lyd == 1
 17.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & lf_sa
> mp  == 0 
 18.         }
 19. }
economic sector 4
Sector 4 Occupation 14
(52,623 missing values generated)
(12,613 real changes made)
(57,471 missing values generated)
(131 real changes made)
(40,351 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,498    .9861382    .1169198          0          1
(2,058 real changes made, 2,058 to missing)
(0 real changes made)
(0 real changes made)
economic sector 5
Sector 5 Occupation 15
(52,623 missing values generated)
(12,613 real changes made)
(55,926 missing values generated)
(216 real changes made)
(40,351 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,498    .9961857    .0616436          0          1
(127 real changes made, 127 to missing)
(89 real changes made, 89 to missing)
(0 real changes made)
economic sector 6
Sector 6 Occupation 16
(52,623 missing values generated)
(12,613 real changes made)
(57,709 missing values generated)
(62 real changes made)
(40,351 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,498    .9990697    .0304877          0          1
(0 real changes made)
(62 real changes made, 62 to missing)
(0 real changes made)

. 
. 
. *===========================================================================
. *III. Allocate sectors for those who were not assigned (by growth rate and sh
> are employment)
. *===========================================================================
. *mata: st_repond("sector","growth_estru" , 2, 1, "sector_shr", "share")
. sum rank$t

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
        rank |         68           2           0          2          2

. loc mm = r(N)

. dis in red "`mm'"
68

. 
. while (`mm' > 0) {
  2.         forvalues r = 1/`lim'   {
  3.         
.                 loc s = aux[`r',1] 
  4. 
.                 if growth_estru[`s',1]>0        {
  5.         
.                         loc p = shares_mata[`s',2]
  6.                 
.                         di in red "this is p: " "`p'"
  7.                 
.                         gsort -d_act`s'_sim -P`s' id 
  8.                         sum fexp_s                                   if em
> plyd_s == 1 & changed == 0 
  9.                         gen aux = sum(fexp_s)/r(sum) if emplyd_s == 1 & ch
> anged == 0 
 10.                         replace d_act`s'_sim = 1         if emplyd_s == 1 
> & changed == 0 & rank$t !=. & (aux <= `p') 
 11.                 
.                         drop changed aux
 12.                         egen changed = rsum(d_act1_sim - d_act`lim'_sim) i
> f emplyd_s ==1
 13.                         sum  changed
 14. 
.                         replace rank$t =. if changed == 1 & emplyd_s == 1 & e
> mplyd == 1
 15.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & unemplyd ==1
 16.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & lf_samp == 0
 17.                 }
 18.                 
.                 if growth_estru[`s',1]<0        {
 19.         
.                         loc p = shares_mata[`s',2]
 20.                 
.                         di in red "this is p: " "`p'"
 21.                 
.                         gsort -d_act`s'_sim -P`s' id 
 22.                         sum fexp_s                                      if
>  emplyd_s == 1 & changed == 0 
 23.                         gen aux = sum(fexp_s)/r(sum)    if emplyd_s == 1 &
>  changed == 0 
 24.                         replace d_act`s'_sim = 1                if emplyd_
> s == 1 & changed == 0 & rank$t !=. & (aux <= `p') 
 25.                 
.                         drop changed aux
 26.                         egen changed = rsum(d_act1_sim - d_act`lim'_sim)  
>       if emplyd_s ==1
 27.                         sum  changed
 28. 
.                         replace rank$t =. if changed == 1 & emplyd_s == 1 & e
> mplyd == 1
 29.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & unemplyd ==1
 30.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & lf_samp == 0
 31.                 }
 32.         }
 33.         
.         sum rank$t
 34.         loc mm = r(N)
 35.         di in red "there are `mm' observations left"
 36.         if `mm' < 102 loc mm = 0        
 37.         note: adjust in case it doesn´t converge, increase the 16. 
 38. }
this is p: .1043216478179108

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |         20     2509.75    1416.081        867       3853
(61,829 missing values generated)
(1 real change made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9829306    .1295329          0          1
(0 real changes made)
(1 real change made, 1 to missing)
(0 real changes made)
this is p: .2491094415707734

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        373    2687.279    1972.836        416       8141
(61,476 missing values generated)
(19 real changes made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9838001    .1262465          0          1
(0 real changes made)
(19 real changes made, 19 to missing)
(0 real changes made)
this is p: .1612778305862237

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        354    2700.602     1998.88        416       8141
(61,495 missing values generated)
(0 real changes made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9838001    .1262465          0          1
(0 real changes made)
(0 real changes made)
(0 real changes made)
this is p: .1765842077391323

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        354    2700.602     1998.88        416       8141
(61,495 missing values generated)
(0 real changes made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9838001    .1262465          0          1
(0 real changes made)
(0 real changes made)
(0 real changes made)
this is p: .0483837315781203

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        354    2700.602     1998.88        416       8141
(61,495 missing values generated)
(0 real changes made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9838001    .1262465          0          1
(0 real changes made)
(0 real changes made)
(0 real changes made)
this is p: .2604651248956083

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        354    2700.602     1998.88        416       8141
(61,495 missing values generated)
(0 real changes made)
(39,997 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     21,852    .9838001    .1262465          0          1
(0 real changes made)
(0 real changes made)
(0 real changes made)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
        rank |         48           2           0          2          2
there are 48 observations left

. 
. drop changed rank$t

. 
. *===========================================================================
. * Creates new activity
. *===========================================================================
. gen act$t = .
(61,849 missing values generated)

. forvalues s = 1/`lim'   {
  2.         replace act$t = `s' if d_act`s'_sim == 1 &  act$t == .
  3.         }
(899 real changes made)
(5,014 real changes made)
(3,582 real changes made)
(2,119 real changes made)
(5,812 real changes made)
(4,072 real changes made)

. drop d_act*

. 
. 
. * new main labor sector 
.         gen           sect_main_s = .
(61,849 missing values generated)

.         replace   sect_main_s =  1 if act$t == 1
(899 real changes made)

.         replace   sect_main_s =  2 if act$t == 2 
(5,014 real changes made)

.         replace   sect_main_s =  3 if act$t == 3
(3,582 real changes made)

.         replace   sect_main_s =  4 if act$t == 4
(2,119 real changes made)

.         replace   sect_main_s =  5 if act$t == 5
(5,812 real changes made)

.         replace   sect_main_s =  6 if act$t == 6
(4,072 real changes made)

.         replace   sect_main_s = sectorg if sect_main_s== . & sample == . & em
> plyd_s == 1
(0 real changes made)

.         label var sect_main_s "economic sector simulated"

.         
.         *recode sect_main6_s (1 2 = 1) (3 4 = 2) (5 6 = 3), gen(sect_main_s)
.         *label values sect_main_s sector
.         *ADD labels!
.         
.         
. * new occupation status
.         gen     occupation_s = .
(61,849 missing values generated)

.         replace occupation_s = 0  if  active_s    == 0 & sample == 1
(24,850 real changes made)

.         replace occupation_s = 10 if  unemplyd_s  == 1 & sample == 1
(813 real changes made)

.         replace occupation_s = 11 if  sect_main_s == 1 & sample == 1
(899 real changes made)

.         replace occupation_s = 12 if  sect_main_s == 2 & sample == 1
(5,014 real changes made)

.         replace occupation_s = 13 if  sect_main_s == 3 & sample == 1
(3,582 real changes made)

.         replace occupation_s = 14 if  sect_main_s == 4 & sample == 1
(2,119 real changes made)

.         replace occupation_s = 15 if  sect_main_s == 5 & sample == 1
(5,812 real changes made)

.         replace occupation_s = 16 if  sect_main_s == 6 & sample == 1
(4,072 real changes made)

. 
.         label var    occupation_s "occupation status - simulated"

.         label values occupation_s occupation

. 
. 
. 
. *===========================================================================
. * Creates the structure sectoral matrix
. *===========================================================================
. mat sector   = J(`lim',1,.)

. mat sector_s = J(`lim',1,.)

. 
. forvalues a = 1/`lim' {
  2.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a'
  3.         mat sector[`a',1]   = r(sum)
  4.  
.         if $m == 1 {
  5.                 sum fexp_s if sample == 1 & emplyd_s == 1 & sect_main_s== 
> `a'
  6.                 mat sector_s[`a',1] = r(sum)
  7.         }
  8.         
.         if $m != 1 {
  9.                 sum fexp_s if sample == 1 & emplyd_s == 1 & sect_main_s== 
> `a'
 10.                 mat sector_s[`a',1] = r(sum)
 11.         }
 12. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |        939    3082.417    1801.169   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |        899    3176.915    1820.027        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,232    2978.101    1640.055   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,014    3066.466     1652.06        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,582    2868.485    2191.247   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,582    2898.098    2213.812        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,987    2978.173    2193.334   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      2,119    2907.911    2188.456        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,577     2541.52    2035.911   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,812     2538.34    2037.755        416       8809

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      4,010    2318.446    2036.428   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      4,072    2337.454    2048.534        416       8809

. 
. mat growth_estru = growth_labor[3..`row_tot',1]

. mata: st_mat("growth_estru", "sector", 1,`lim')

. mat sector = sector , sector_mata

. 
. mat list sector

sector[6,2]
           c1         c1
r1  2894389.5  2813000.4
r2   15581426   15143282
r3   10274913   10266497
r4  5917630.4  6065196.4
r5   14174057   14483070
r6  9296969.6  9376593.8

. mat list sector_s 

sector_s[6,1]
          c1
r1   2856047
r2  15375261
r3  10380987
r4   6161863
r5  14752830
r6   9518114

. 
. * including those out of sample
. replace unemplyd_s   = unemplyd if sample == .
(48 real changes made)

. replace emplyd_s     = emplyd   if sample == .
(55 real changes made)

. replace active_s     = lf_samp  if sample == .
(17,415 real changes made, 17,415 to missing)

. replace sect_main_s = sectorg  if sect_main_s== . & sample == . & emplyd_s ==
>  1
(0 real changes made)

. 
. * check new sectoral structure 
. clonevar sectorg_s = sect_main_s 
(40,351 missing values generated)

. local lim = 6

. forvalues a = 1/`lim' {
  2.         
.         capt drop aux
  3.         gen aux = sectorg == `a' if sample == 1 & sectorg != .
  4.         sum aux [w = wgt] if lf_samp == 1
  5.         scalar v0 = r(mean)
  6.                 
.         capt drop aux
  7.         gen aux = sectorg_s == `a' if sample == 1 & sectorg_s != .
  8.         sum aux [w = fexp_s] if active_s == 1
  9.         scalar v1 = r(mean)
 10.         
.         if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_estru[`a
> ',1],.005) ) > 0.01 {
 11.                 di in red "WARNING: New sectoral estructure doesn´t match 
> growth rates."
 12.                 break
 13.         }       
 14. }
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526    .0543885   .2267886          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590    .0531424   .2243233          0          1
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526     .291298   .4543722          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590    .2862582   .4520235          0          1
WARNING: New sectoral estructure doesn´t match growth rates.
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526    .1932398   .3948496          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590    .1933755   .3949553          0          1
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526    .1112598   .3144617          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590     .112142   .3155494          0          1
WARNING: New sectoral estructure doesn´t match growth rates.
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526    .1953846   .3965067          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590    .1992102    .399417          0          1
(40,522 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,400    52986526    .1544292    .361369          0          1
(40,351 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,861    52951590    .1558718   .3627434          0          1

. 
. drop aux*

. 
. /*
> 
> *===========================================================================
> * Informality rates by economic sector
> *===========================================================================
> 
> * Creating a new informal variable
> cap drop informal_s
> 
> if $m == 1 {
>         
>         gen      informal_s = informal if emplyd_s == 1
> 
>         * random numbers
>         capture drop aleat_inf
>         set seed 12345678
>         gen aleat_inf = uniform() if sample == 1 
> 
>         * in and out of informality
>         sum sect_main
>         loc lim = r(max)
> 
>         * Creates the structure sectoral matrix - targets
>         mat informal      = J(`lim',1,.)
> 
>         forvalues a = 1/`lim' {
>                 sum informal [w = wgt] if lf_samp == 1 & emplyd == 1 & sect_m
> ain == `a' 
>                 mat informal[`a',1] = r(mean)*(1 + growth_informal[`a',1])
>         }
> 
>         * Allocate individuals according to their probability of being employ
> ed
>         gsort  sect_main_s -informal_s aleat_inf id 
> 
>         forvalues i = 1/`lim' {
>       
>                 qui sum fexp_s if active_s == 1 & sect_main_s == `i'
>                 gen double aux = sum(fexp_s)/r(sum) if emplyd_s == 1 & sect_m
> ain_s == `i'
>                 replace informal_s = 1 if aux <= (informal[`i',1] + epsfloat(
> )) & emplyd_s == 1 & sect_main_s == `i'
>                 replace informal_s = 0 if aux >  (informal[`i',1] + epsfloat(
> )) & emplyd_s == 1 & sect_main_s == `i'
>                 drop aux*
> 
>         }
> }
> 
> if $m != 1 {
>         
>         gen     informal_s = 1 if (sect_main6_s == 2 | sect_main6_s== 4 | sec
> t_main6_s== 6) & emplyd_s == 1
>         
>         replace informal_s = 0 if (sect_main6_s == 1 | sect_main6_s== 3 | sec
> t_main6_s== 5) & emplyd_s == 1
> }
> 
> 
> * Check new informal rates
> sum sect_main
> loc lim_inf = r(max)
> forvalues a = 1/`lim_inf' {
>                 
>         capt drop aux
>         gen aux = informal / lf_samp if sample == 1
>         sum aux [w = wgt] if lf_samp == 1 & sect_main == `a'
>         scalar v0 = r(mean)
>                 
>         capt drop aux
>         gen aux = informal_s / active_s if sample == 1
>         sum aux [w = fexp_s] if active_s == 1 & sect_main_s == `a' 
>         scalar v1 = r(mean)
>         
>         if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_informal
> [`a',1],.005) ) > 0.01 {
>                 di in red "WARNING: New informal workers in sector `a' doesn´
> t match growth rate."
>         }
>                 
> 
> }
> 
> * Bringing back those who do not belong to the sample
> replace informal_s = informal if sample == . & informal_s == .
> 
> *===========================================================================
> *                                     END
> *===========================================================================
> 
> */
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 090 - Assign labor income by sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *===========================================================================
. 
. *===========================================================================
. * Random numbers
. *===========================================================================
. capture drop aleat_ila

. set seed 23081985

. gen aleat_ila = uniform() if sample == 1 
(17,415 missing values generated)

. 
. ** I- Asign the contrafactual labor income by sector
. 
. *  IMPUTATION of salaried to those who come from the non-employed status in o
> rder to obtain the INCOME LINEAR PROJECTION
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     21,327    3.846861     1.59241          1          6

. loc lim = r(max)

. replace salaried = . if unemplyd == 1
(0 real changes made)

. 
. forvalues i = 1/`lim' {
  2.    forvalues k =1(1)2 {
  3.            
.    sum salaried  [w = wgt] if sectorg == `i' & sample_`k' == 1
  4.    sca ns_`k'_`i' = 1-r(mean)
  5.    
.    sum public_job    [w = wgt] if sectorg == `i' & sample_`k' == 1
  6.    sca pj_`k'_`i' = 1-r(mean)
  7.         
.    }
  8. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     603  1871176.34    .2250343   .4179516          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     603  1871176.34    .0004584   .0214232          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     332  1015463.55    .0617389    .241044          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     332  1015463.55    .0065224   .0806194          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   3,371  10116455.6    .4005575   .4900841          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   3,371  10116455.6    .0004662   .0215907          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,853  5441274.07    .2048962   .4037347          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,853  5441274.07    .0030174   .0548631          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,883   5153949.8    .8761613   .3294849          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,883   5153949.8    .0029659   .0543935          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,690  5103698.47    .8488877   .3582643          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,690  5103698.47    .0267163   .1613007          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     747  2146730.17     .840324   .3665507          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     747  2146730.17    .0065642   .0808077          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,236  3764231.55    .8041026   .3970506          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,236  3764231.55    .0415661   .1996763          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   2,935  7667588.57    .5017294   .5000822          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   2,935  7667588.57    .0117453   .1077557          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   2,623  6465677.25    .5025092    .500089          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   2,623  6465677.25    .1073788   .3096532          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     614  1559160.63    .3506176   .4775524          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     614  1559160.63    .0220563   .1469865          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   3,351  7623861.95    .5591647   .4965613          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   3,351  7623861.95    .1816153   .3855847          0          1

. 
. *===========================================================================
. * SALARIED - NON-SALARIED
. *===========================================================================
. 
. * Identifies the people who change sector by education level
. gen     ch_l = (occupation != occupation_s) if sample_1 == 1 & (occupation_s 
> > 0 & occupation_s < .) & salaried == .
(61,644 missing values generated)

. replace ch_l = . if ch_l == 0
(168 real changes made, 168 to missing)

. gen     ch_h = (occupation != occupation_s) if sample_2 == 1 & (occupation_s 
> > 0 & occupation_s < .) & salaried == .
(61,071 missing values generated)

. replace ch_h = . if ch_h == 0
(645 real changes made, 645 to missing)

. 
. * Assigns the same salaried structure of the sector
. capture drop aux_l* aux_h* 

. * Creates the new salaried variable
. clonevar salaried_s = salaried
(40,223 missing values generated)

. replace  salaried_s = 1 if (ch_l == 1 | ch_h == 1) 
(170 real changes made)

. 
. forvalues i = 1/`lim' {
  2.         sum  ch_l [aw = fexp_s] if sect_main_s== `i'
  3.         if r(sum) != 0 {
  4.                 gen  aux_l_`i' = sum(fexp_s)/r(sum) if ch_l == 1 & sect_ma
> in_s== `i'
  5.                 sort aleat_ila, stable
  6.                 replace salaried_s = 0 if  aux_l_`i' <= ns_1_`i'
  7.                 di in ye "share of self employment is ===>   ns_1_`i'  = "
>  scalar(ns_1_`i')
  8.                 ta salaried_s [aw=fexp_s] if aux_l_`i' != .
  9.         }
 10. 
.         sum  ch_h [aw = fexp_s] if occupation_s == `i'
 11.         if r(sum) != 0 {
 12.                 gen  aux_h_`i' = sum(fexp_s)/r(sum) if ch_h == 1 & sect_ma
> in_s== `i'
 13.                 sort aleat_ila, stable
 14.                 replace salaried_s = 0 if  aux_h_`i' <= ns_2_`i'
 15.                 di in ye "share of self employment is ===>   ns_2_`i'  = "
>  scalar(ns_2_`i')
 16.                 ta salaried_s [aw=fexp_s] if aux_h_`i' != .
 17.         }
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |      26       44077           1          0          1          1
(61,823 missing values generated)
(18 real changes made)
share of self employment is ===>   ns_1_5  = .49827062

 salaried_s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 11.3940604       43.82       43.82
          1 | 14.6059396       56.18      100.00
------------+-----------------------------------
      Total |         26      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |      11       27648           1          0          1          1
(61,838 missing values generated)
(6 real changes made)
share of self employment is ===>   ns_1_6  = .64938242

 salaried_s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 6.55193866       59.56       59.56
          1 | 4.44806134       40.44      100.00
------------+-----------------------------------
      Total |         11      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

. 
. 
. rename ch_l ch_l_sal

. rename ch_h ch_h_sal

. capture drop aux_l_*

. capture drop aux_h_*

. 
. *===========================================================================
. * PUBLIC - PRIVATE JOBS
. *===========================================================================
. 
. * a) Identifies the people who change sector by education level
. gen     ch_l = (occupation != occupation_s) if sample_1 == 1 & (occupation_s 
> > 0 & occupation_s < .) & public_job == .
(61,644 missing values generated)

. replace ch_l = . if ch_l == 0
(168 real changes made, 168 to missing)

. gen     ch_h = (occupation != occupation_s) if sample_2 == 1 & (occupation_s 
> > 0 & occupation_s < .) & public_job == .
(61,071 missing values generated)

. replace ch_h = . if ch_h == 0
(645 real changes made, 645 to missing)

. 
. 
. * c) Creates the new public_job variable
. clonevar public_job_s = public_job
(40,223 missing values generated)

. replace  public_job_s = 1 if (ch_l == 1 | ch_h == 1) 
(170 real changes made)

. ta public_job

 public_job |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     20,273       93.74       93.74
          1 |      1,353        6.26      100.00
------------+-----------------------------------
      Total |     21,626      100.00

. ta public_job_s

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     20,273       93.01       93.01
          1 |      1,523        6.99      100.00
------------+-----------------------------------
      Total |     21,796      100.00

. 
. *===========================================================================
. forvalues i = 1/`lim' {
  2.         sum  ch_l [aw = fexp_s] if sect_main_s== `i'
  3.         if r(sum) != 0 {
  4.                 gen  aux_l_`i' = sum(fexp_s)/r(sum) if ch_l == 1 & sect_ma
> in_s== `i'
  5.                 sort aleat_ila, stable
  6.                 replace public_job_s = 0 if  aux_l_`i' <= pj_1_`i'
  7.                 di in ye "share of private employment is ===>   pj_1_`i'  
> = " scalar(pj_1_`i')
  8.                 ta public_job_s [aw=fexp_s] if aux_l_`i' != .
  9.         }
 10. 
.         sum  ch_h [aw = fexp_s] if sect_main_s== `i'
 11.         if r(sum) != 0 {
 12.                 gen  aux_h_`i' = sum(fexp_s)/r(sum) if ch_h == 1 & sect_ma
> in_s== `i'
 13.                 sort aleat_ila, stable
 14.                 replace public_job_s = 0 if  aux_h_`i' <= pj_2_`i'
 15.                 di in ye "share of private employment is ===>   pj_2_`i'  
> = " scalar(pj_2_`i')
 16.                 ta public_job_s [aw=fexp_s] if aux_h_`i' != .
 17.         }
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       1        3853           1          .          1          1
(61,848 missing values generated)
(0 real changes made)
share of private employment is ===>   pj_2_4  = .95843388

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          1      100.00      100.00
------------+-----------------------------------
      Total |          1      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |      26       44077           1          0          1          1
(61,823 missing values generated)
(25 real changes made)
share of private employment is ===>   pj_1_5  = .98825471

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 24.4509835       94.04       94.04
          1 | 1.54901649        5.96      100.00
------------+-----------------------------------
      Total |         26      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |      82      133211           1          0          1          1
(61,767 missing values generated)
(74 real changes made)
share of private employment is ===>   pj_2_5  = .89262122

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 72.8336249       88.82       88.82
          1 | 9.16637515       11.18      100.00
------------+-----------------------------------
      Total |         82      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |      11       27648           1          0          1          1
(61,838 missing values generated)
(10 real changes made)
share of private employment is ===>   pj_1_6  = .97794367

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |  10.512623       95.57       95.57
          1 | .487377025        4.43      100.00
------------+-----------------------------------
      Total |         11      100.00

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |      50       95951           1          0          1          1
(61,799 missing values generated)
(40 real changes made)
share of private employment is ===>   pj_2_6  = .81838466

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 40.7838376       81.57       81.57
          1 | 9.21616242       18.43      100.00
------------+-----------------------------------
      Total |         50      100.00

. 
. rename ch_l ch_l_pj

. rename ch_h ch_h_pj

. capture drop aux_l_*

. capture drop aux_h_*

. capture drop ch_l_sal

. capture drop ch_h_sal

. capture drop ch_l_pj

. capture drop ch_h_pj

. 
. *===========================================================================
. * II- Compute the income of employed simulated who come from other sector sta
> tus
. *===========================================================================
. 
. * Income estimation by education level
. gen  predila_n  = .
(61,849 missing values generated)

. /*
> if $m == 1 {
> 
>         forvalues n = 1/2 {
> 
>                 * linear projection
>         
>                 * Those who come from INACTIVITY
>                 mat score predila_n = b_1_`n' if occupation == 0 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 0 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 0 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from UNEMPLOYMENT
>                 mat score predila_n = b_1_`n' if occupation == 1 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 1 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 1 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from AGRICULTURE
>                 mat score predila_n = b_2_`n' if occupation == 2 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 2 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from INDUSTRY
>                 mat score predila_n = b_1_`n' if occupation == 3 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 3 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from SERVICES
>                 mat score predila_n = b_1_`n' if occupation == 4 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 4 & occupation
> _s == 3 & sample_`n' == 1, replace
> 
>                 * Those who remain in their sector but changes their informal
> ity status   
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
> 
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                  
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
> 
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                  
>                 *  Residuals   
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_1
> _`n' if occupation_s == 2 & sample_`n' == 1 
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_2
> _`n' if occupation_s == 3 & sample_`n' == 1
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_3
> _`n' if occupation_s == 4 & sample_`n' == 1
>         }
> 
>         replace predila_n = exp(predila_n)
> 
>         * Those who mantain their employment status and sector
>         gen     lai_m_s = .
>         replace lai_m_s = lai_m if occupation == 2 & occupation_s == 2       
>          
>         replace lai_m_s = .     if occupation == 2 & occupation_s == 2 & (lai
> _m == .) 
>         replace lai_m_s = lai_m if occupation == 3 & occupation_s == 3       
>          
>         replace lai_m_s = .     if occupation == 3 & occupation_s == 3 & (lai
> _m == .) 
>         replace lai_m_s = lai_m if occupation == 4 & occupation_s == 4       
>          
>         replace lai_m_s = .     if occupation == 4 & occupation_s == 4 & (lai
> _m == .) 
> 
>         * New employed who come from other sectors, non-employed or unemploye
> d 
>         replace lai_m_s = predila_n  if occupation_s == 2 & lai_m_s == .
>         replace lai_m_s = predila_n  if occupation_s == 3 & lai_m_s == .
>         replace lai_m_s = predila_n  if occupation_s == 4 & lai_m_s == .
> 
>         * Those who mantain their sectors but change their formality status
>         replace lai_m_s = predila_n  if occupation == 2 & occupation_s == 2 &
>  (lai_m == .) & informal_s == 1 & informal == 0
>         replace lai_m_s = predila_n  if occupation == 3 & occupation_s == 3 &
>  (lai_m == .) & informal_s == 1 & informal == 0
>         replace lai_m_s = predila_n  if occupation == 4 & occupation_s == 4 &
>  (lai_m == .) & informal_s == 1 & informal == 0
> 
>         replace lai_m_s = predila_n  if occupation == 2 & occupation_s == 2 &
>  (lai_m == .) & informal_s == 0 & informal == 1
>         replace lai_m_s = predila_n  if occupation == 3 & occupation_s == 3 &
>  (lai_m == .) & informal_s == 0 & informal == 1
>         replace lai_m_s = predila_n  if occupation == 4 & occupation_s == 4 &
>  (lai_m == .) & informal_s == 0 & informal == 1
> 
> }
> */
. 
. 
.         forvalues n = 1/2 {
  2. 
.                 * Linear projection
. 
.                 * Those who come from INACTIVITY
.                 mat score predila_n  = b_1_`n'  if occupation == 0 & sectorg_
> s == 1 & sample_`n' == 1, replace
  3.                 mat score predila_n  = b_2_`n'  if occupation == 0 & secto
> rg_s == 2 & sample_`n' == 1, replace
  4.                 mat score predila_n  = b_3_`n'  if occupation == 0 & secto
> rg_s == 3 & sample_`n' == 1, replace
  5.                 mat score predila_n  = b_4_`n'  if occupation == 0 & secto
> rg_s == 4 & sample_`n' == 1, replace
  6.                 mat score predila_n  = b_5_`n'  if occupation == 0 & secto
> rg_s == 5 & sample_`n' == 1, replace
  7.                 mat score predila_n  = b_6_`n'  if occupation == 0 & secto
> rg_s == 6 & sample_`n' == 1, replace
  8. 
.                 * Those who come from UNEMPLOYMENT
.                 mat score predila_n  = b_1_`n'  if occupation == 10 & sectorg
> _s == 1 & sample_`n' == 1, replace
  9.                 mat score predila_n  = b_2_`n'  if occupation == 10 & sect
> org_s == 2 & sample_`n' == 1, replace
 10.                 mat score predila_n  = b_3_`n'  if occupation == 10 & sect
> org_s == 3 & sample_`n' == 1, replace
 11.                 mat score predila_n  = b_4_`n'  if occupation == 10 & sect
> org_s == 4 & sample_`n' == 1, replace
 12.                 mat score predila_n  = b_5_`n'  if occupation == 10 & sect
> org_s == 5 & sample_`n' == 1, replace
 13.                 mat score predila_n  = b_6_`n'  if occupation == 10 & sect
> org_s == 6 & sample_`n' == 1, replace
 14. 
.                 * Those who come from Agriculture s0
.                 mat score predila_n  = b_2_`n'  if sectorg == 1 & sectorg_s =
> = 2 & sample_`n' == 1, replace
 15.                 mat score predila_n  = b_3_`n'  if sectorg == 1 & sectorg_
> s == 3 & sample_`n' == 1, replace
 16.                 mat score predila_n  = b_4_`n'  if sectorg == 1 & sectorg_
> s == 4 & sample_`n' == 1, replace
 17.                 mat score predila_n  = b_5_`n'  if sectorg == 1 & sectorg_
> s == 5 & sample_`n' == 1, replace
 18.                 mat score predila_n  = b_6_`n'  if sectorg == 1 & sectorg_
> s == 6 & sample_`n' == 1, replace
 19. 
.         * Those who come from Agriculture s1
.            mat score predila_n  = b_1_`n'  if sectorg == 2 & sectorg_s == 1 &
>  sample_`n' == 1, replace
 20.            mat score predila_n  = b_3_`n'  if sectorg == 2 & sectorg_s == 
> 3 & sample_`n' == 1, replace
 21.            mat score predila_n  = b_4_`n'  if sectorg == 2 & sectorg_s == 
> 4 & sample_`n' == 1, replace
 22.            mat score predila_n  = b_5_`n'  if sectorg == 2 & sectorg_s == 
> 5 & sample_`n' == 1, replace
 23.            mat score predila_n  = b_6_`n'  if sectorg == 2 & sectorg_s == 
> 6 & sample_`n' == 1, replace
 24.          
.                 * Those who come from Industry s0
.                 mat score predila_n  = b_1_`n'  if sectorg == 3 & sectorg_s =
> = 1 & sample_`n' == 1, replace
 25.                 mat score predila_n  = b_2_`n'  if sectorg == 3 & sectorg_
> s == 2 & sample_`n' == 1, replace
 26.                 mat score predila_n  = b_4_`n'  if sectorg == 3 & sectorg_
> s == 4 & sample_`n' == 1, replace
 27.                 mat score predila_n  = b_5_`n'  if sectorg == 3 & sectorg_
> s == 5 & sample_`n' == 1, replace
 28.                 mat score predila_n  = b_6_`n'  if sectorg == 3 & sectorg_
> s == 6 & sample_`n' == 1, replace
 29. 
.                 * Those who come from Industry s1
.                 mat score predila_n  = b_1_`n'  if sectorg == 4 & sectorg_s =
> = 1 & sample_`n' == 1, replace
 30.                 mat score predila_n  = b_2_`n'  if sectorg == 4 & sectorg_
> s == 2 & sample_`n' == 1, replace
 31.                 mat score predila_n  = b_3_`n'  if sectorg == 4 & sectorg_
> s == 3 & sample_`n' == 1, replace
 32.                 mat score predila_n  = b_5_`n'  if sectorg == 4 & sectorg_
> s == 5 & sample_`n' == 1, replace
 33.                 mat score predila_n  = b_6_`n'  if sectorg == 4 & sectorg_
> s == 6 & sample_`n' == 1, replace
 34. 
.                 * Those who come from Services s0
.                 mat score predila_n  = b_1_`n'  if occupation == 5 & sectorg_
> s == 1 & sample_`n' == 1, replace
 35.                 mat score predila_n  = b_2_`n'  if occupation == 5 & secto
> rg_s == 2 & sample_`n' == 1, replace
 36.                 mat score predila_n  = b_3_`n'  if occupation == 5 & secto
> rg_s == 3 & sample_`n' == 1, replace
 37.                 mat score predila_n  = b_4_`n'  if occupation == 5 & secto
> rg_s == 4 & sample_`n' == 1, replace
 38.                 mat score predila_n  = b_6_`n'  if occupation == 5 & secto
> rg_s == 6 & sample_`n' == 1, replace
 39. 
.         * Those who come from Services s1
.            mat score predila_n  = b_1_`n'  if occupation == 6 & sectorg_s == 
> 1 & sample_`n' == 1, replace
 40.            mat score predila_n  = b_2_`n'  if occupation == 6 & sectorg_s 
> == 2 & sample_`n' == 1, replace
 41.            mat score predila_n  = b_3_`n'  if occupation == 6 & sectorg_s 
> == 3 & sample_`n' == 1, replace
 42.            mat score predila_n  = b_4_`n'  if occupation == 6 & sectorg_s 
> == 4 & sample_`n' == 1, replace
 43.            mat score predila_n  = b_5_`n'  if occupation == 6 & sectorg_s 
> == 5 & sample_`n' == 1, replace
 44. 
.                 * Residuals   
.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_1
> _`n' if sectorg_s == 1 & sample_`n' == 1 
 45.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_2_`n' if sectorg_s == 2 & sample_`n' == 1
 46.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_3_`n' if sectorg_s == 3 & sample_`n' == 1
 47.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_4_`n' if sectorg_s == 4 & sample_`n' == 1
 48.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_5_`n' if sectorg_s == 5 & sample_`n' == 1
 49.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_6_`n' if sectorg_s == 6 & sample_`n' == 1
 50.         }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
.         replace predila_n = exp(predila_n)
(0 real changes made)

. 
.         * those who mantain their employment status and sector
.         gen     lai_m_s = .
(61,849 missing values generated)

.         levelsof occupation if occupation>10, local(alloccups)
11 12 13 14 15 16

.         foreach i of local alloccups {
  2.                 * Those who mantain their employment status and sector
.                 replace lai_m_s = lai_m if occupation == `i' & occupation_s =
> = `i'                
  3.                 replace lai_m_s = .     if occupation == `i' & occupation_
> s == `i' & (lai_m == .) 
  4.                 * New employed who come from other sectors, non-employed o
> r unemployed 
.                 replace lai_m_s = predila_n  if occupation_s == `i' & lai_m_s
>  == .
  5.         }
(895 real changes made)
(0 real changes made)
(0 real changes made)
(4,960 real changes made)
(0 real changes made)
(0 real changes made)
(3,563 real changes made)
(0 real changes made)
(0 real changes made)
(1,974 real changes made)
(0 real changes made)
(0 real changes made)
(4,189 real changes made)
(0 real changes made)
(0 real changes made)
(3,561 real changes made)
(0 real changes made)
(0 real changes made)

. 
.         * 2- New employed who come from other sectors, non-employed or unempl
> oyed 
.         replace lai_m_s = predila_n  if sectorg_s == 1 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if sectorg_s == 2 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if sectorg_s == 3 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if sectorg_s == 4 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if sectorg_s == 5 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if sectorg_s == 6 & lai_m_s == .
(0 real changes made)

. 
. 
. 
. 
. * Summ those who do not belong to the sample
. replace lai_m_s = lai_m  if lai_m_s == . &  sectorg_s!= . & sample == .
(0 real changes made)

. replace lai_m_s = lai_m  if lai_m_s == . &  lai_m != . & sample == .
(199 real changes made)

. replace lai_m_s = lai_m  if lai_m_s == . &  lai_m != . & sample == 1
(258 real changes made)

. 
. 
. * Eliminate labor income for those who pass from employed to non-employed sta
> tus 
. replace lai_m_s = .  if active_s  == 1 & unemplyd_s  == 1 & unemplyd == 0  & 
> sample == 1
(0 real changes made)

. replace lai_m_s = .  if active_s  == 0 & lf_samp     == 1                  & 
> sample == 1
(710 real changes made, 710 to missing)

. 
. drop predila_n aleat_ila

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 11 - Income growth by sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Oct 18, 2022 - Kelly Y. Montoya
. *===========================================================================
. 
. *===========================================================================
. * Getting reduction in informal workers because of quarantine 
. *===========================================================================
. /*
> if $t == 2 {
> 
>    replace lai_m_s = lai_m * (1 - (lai_m * ( $redu )/(lai_m * 12))) if inform
> al_s == 1
> 
> } */
. *===========================================================================
. * I. Calculates the growth rate by sector of total labor income 
. *    (main and secondary for everybody)
. *===========================================================================
. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     21,327    3.846861     1.59241          1          6

. loc lim = r(max)

. 
. forvalues i = 1/`lim' {
  2.         
.         //Base
.         sum lai_m     [aw = wgt]  if lai_m > 0 & lai_m < . & sectorg    == `i
> ' 
  3.         sca sp_`i' = r(mean)
  4. 
.         //Scenario
.         sum lai_m_s [aw = fexp_s]  if lai_m_s > 0 & lai_m_s < . & sectorg_s==
>  `i' 
  5.         sca sp1_`i' = r(mean)
  6. 
.         if `i' == 1 { 
  7.                 mat var0 = sp_`i' 
  8.                 mat var1 = sp1_`i' 
  9.                 mat list var0
 10.                 mat list var1
 11.         }
 12. 
.         if `i' != 1 {
 13.                 mat var0 = var0\sp_`i'
 14.                 mat var1 = var1\sp1_`i' 
 15.                 mat list var0
 16.                 mat list var1
 17.         
.         } 
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |     861  2651368.39    7.566606   15.21714   2.36e-17   160.3937

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |     807     2588928     7.79503   15.42323   2.36e-17   160.3937

symmetric var0[1,1]
           c1
r1  7.5666061

symmetric var1[1,1]
           c1
r1  7.7950302

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   4,805  14247473.1    10.04319   95.64286   .0030051   5640.807

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,546    13987291     10.2824   97.03055   .0034666   5640.807

var0[2,1]
           c1
r1  7.5666061
r2  10.043193

var1[2,1]
           c1
r1  7.7950302
r2  10.282402

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,554  10220423.7    15.81455    121.983   .0069332   4710.683

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,460    10221079     15.9268   122.6047   .0069332   4710.683

var0[3,1]
           c1
r1  7.5666061
r2  10.043193
r3  15.814552

var1[3,1]
           c1
r1  7.7950302
r2  10.282402
r3  15.926795

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   1,969  5885512.64    21.61403   98.77751   .1682317   2907.084

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,951     5924382    21.66521   98.95794   .1682317   2907.084

var0[4,1]
           c1
r1  7.5666061
r2  10.043193
r3  15.814552
r4  21.614032

var1[4,1]
           c1
r1  7.7950302
r2  10.282402
r3  15.926795
r4  21.665213

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   4,181  10341909.4    12.89326   16.88745   .0069332    511.669

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,057    10360258    12.88024   16.67956   .0069332    511.669

var0[5,1]
           c1
r1  7.5666061
r2  10.043193
r3  15.814552
r4  21.614032
r5  12.893258

var1[5,1]
           c1
r1  7.7950302
r2  10.282402
r3  15.926795
r4  21.665213
r5  12.880238

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,546  8135846.89     36.5172   271.5647   .0066559   7571.038

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,403     8081439    36.90126   273.8694   .0066559   7571.038

var0[6,1]
           c1
r1  7.5666061
r2  10.043193
r3  15.814552
r4  21.614032
r5  12.893258
r6    36.5172

var1[6,1]
           c1
r1  7.7950302
r2  10.282402
r3  15.926795
r4  21.665213
r5  12.880238
r6  36.901261

. 
. 
. *===========================================================================
. * Calculates the difference between simulated and projected income growth rat
> es by sector (This uses income projected with elasticities - input_gdp2)
. *===========================================================================
. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     21,327    3.846861     1.59241          1          6

. loc lim2 = r(max)

. 
. mat growth_ila_rel = growth_labor_income[1..`lim2',1]

. 
. mat list growth_ila_rel 

growth_ila_rel[6,1]
          rate
r1  -.07142629
r2   .01815923
r3   -.0461922
r4  -.00497454
r5   -.0074904
r6  -.00170236

. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: V = st_matrix("growth_ila_rel")

: C = st_matrix("var1")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_ila_rel_n",H)

: end
-------------------------------------------------------------------------------

. 
. mat list growth_ila_rel_n

growth_ila_rel_n[6,1]
            c1
r1  -.09863704
r2   -.0055271
r3  -.05291409
r4  -.00732513
r5  -.00648713
r6  -.01209246

. 
. 
. *===========================================================================
. * Expands income labor by sector
. *===========================================================================
. 
. clonevar lai_s_s = lai_s 
(54,846 missing values generated)

. 
. //Main
.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[1,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 1 
(807 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[2,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 2 
(4,546 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[3,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 3 
(3,460 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[4,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 4 
(1,951 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[5,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 5 
(4,057 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[6,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sectorg_s == 6 
(3,403 real changes made)

.  
. //Secondary 
.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[1,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 1 
(1,553 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[2,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 2 
(1,745 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[3,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 3 
(673 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[4,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 4 
(400 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[5,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 5 
(447 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[6,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sect_secu == 6 
(652 real changes made)

.   
. 
. * Check the variations
. forvalues i = 1/`lim' {
  2.         sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . & sectorg_s
>  == `i' 
  3.         sca sp2_`i' = r(mean)
  4.         //sca s1_`i' = scalar(sp_`i') + scalar(ss_`i')
. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |     807     2588928    7.026151   13.90193   2.13e-17   144.5729

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,546    13987291    10.22557   96.49425   .0034474   5609.629

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,460    10221079    15.08404   116.1172   .0065663   4461.421

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,951     5924382    21.50651   98.23307   .1669994    2885.79

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,057    10360258    12.79668   16.57136   .0068882   508.3498

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,403     8081439    36.45503   270.5576   .0065754   7479.486

. mat n =   scalar(sp2_1)/scalar(sp_1)-1

. mat n = n\scalar(sp2_2)/scalar(sp_2)-1

. mat n = n\scalar(sp2_3)/scalar(sp_3)-1

. mat n = n\scalar(sp2_4)/scalar(sp_4)-1

. mat n = n\scalar(sp2_5)/scalar(sp_5)-1

. mat n = n\scalar(sp2_6)/scalar(sp_6)-1

. 
. mat diff  = growth_ila_rel - n

. mat check = growth_ila_rel,n,diff

. mat list check

check[6,3]
          rate          c1          c1
r1  -.07142629  -.07142629  -5.121e-10
r2   .01815923   .01815923  -3.521e-09
r3   -.0461922  -.04619221   8.967e-09
r4  -.00497454  -.00497454  -6.588e-09
r5   -.0074904   -.0074904   1.111e-09
r6  -.00170236  -.00170236   1.075e-09

. 
. 
. *===========================================================================
. * Re-scale all incomes by the average income 
. *===========================================================================
. 
. sum     lai_m [aw = wgt] if lai_m > 0 & lai_m != . & sectorg != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  18,916  51482534.1    17.14042   135.6633   2.36e-17   7571.038

. loc tot_ila_s = r(mean)

. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s!=. & sectorg_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  18,224    51163377     17.0042   134.4023   2.13e-17   7479.486

. replace lai_m_s = `tot_ila_s' * (lai_m_s / r(mean)) if sectorg_s != .
(18,690 real changes made)

. 
. sum     lai_s [aw = wgt] if lai_s > 0 & lai_s != . & sectorg != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,704  15394714.3    2.646513   5.227174   .0000539   153.9647

. loc tot_ila_s = r(mean)

. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s!=. & sectorg_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,704    15553203    2.567088   5.127859    .000051   152.1029

. replace lai_s_s = `tot_ila_s' * (lai_s_s / r(mean)) if sectorg_s != .
(6,941 real changes made)

. 
. loc r = rowsof(growth_labor_income)

. mat growth_ila_tot = growth_labor_income[`r',1]

. 
. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
            c1
r1  -.00401619

. 
. replace lai_m_s = lai_m_s * (1 + growth_ila_tot[1,1]) if lai_m_s > 0 & lai_m_
> s != . & sectorg_s != .
(18,224 real changes made)

. 
. replace lai_s_s = lai_s_s * (1 + growth_ila_tot[1,1]) if lai_s_s > 0 & lai_s_
> s != . & sectorg_s != .
(5,704 real changes made)

. 
. * Checking 
. sum lai_m [aw = wgt] if lai_m > 0 & lai_m < . & sectorg != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  18,916  51482534.1    17.14042   135.6633   2.36e-17   7571.038

. sca s0 = r(mean)

. 
. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . & sectorg_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  18,224    51163377    17.07158   134.9349   2.14e-17   7509.125

. sca s1 = r(mean)

. 
. di scalar(s1)/scalar(s0)-1
-.00401619

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
            c1
r1  -.00401619

. 
. sum lai_s [aw = wgt] if lai_s > 0 & lai_s < . & sectorg != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,704  15394714.3    2.646513   5.227174   .0000539   153.9647

. sca s0 = r(mean)

. 
. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . & sectorg_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,704    15553203    2.635884   5.265282   .0000524   156.1791

. sca s1 = r(mean)

. 
. di scalar(s1)/scalar(s0)-1
-.00401619

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
            c1
r1  -.00401619

. 
. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 12 - Total labor income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. capture drop aux1

. capture drop aux2

. capture drop tot_lai_s

. 
. egen    aux1    = rsum(lai_m lai_s) , m
(42,249 missing values generated)

. replace aux1 = lai_s if lai_m < 0  
(491 real changes made, 484 to missing)

. replace aux1 = aux1 *-1
(19,116 real changes made)

. egen    aux2 = rsum(lai_m_s lai_s_s), m
(42,815 missing values generated)

. replace aux2 = lai_s_s if lai_m_s < 0  
(473 real changes made, 466 to missing)

. 
. *egen tot_lai = rsum(lai_m lai_s), m
. 
. egen tot_lai_s = rowtotal(tot_lai aux1 aux2), missing 
(42,733 missing values generated)

. 
. * Checking 
. sum lai_m [aw = wgt] if lai_m > 0 & lai_m < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  19,108  52011349.5    17.02711   134.9784   2.36e-17   7571.038

. sca sp = r(sum)

. sum lai_s [aw = wgt] if lai_s > 0 & lai_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,757  15508628.9    2.641586    5.23617   .0000539   153.9647

. sca ss = r(sum)

. sca s0 = scalar(sp) + scalar(ss)

. 
. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  18,416    51697653    16.95712   134.2425   2.14e-17   7509.125

. sca sp = r(sum)

. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,757    15668293    2.631035   5.273923   .0000524   156.1791

. sca ss = r(sum)

. sca s1 = scalar(sp) + scalar(ss)

. 
. loc r = rowsof(growth_macro_data)

. mat growth_ila_tot = growth_macro_data[`r',1]

. di scalar(s1)/scalar(s0)-1
-.00939312

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
           c1
r1  .05775109

. drop aux1 aux2

. 
. *============================================================================
> *
. *                                                                       END
. *============================================================================
> *
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 12  Non-labor income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Jul 11, 2022
. * Last update: Jul 18, 2022
. *============================================================================
> =
. * Modified by: Kelly Y. Montoya (kmontoyamunoz@worldbank.org)
. *                          Jul 18, 2022 - Adapted the ECU version to the full
>  project.
. *============================================================================
> =
. 
. 
. *============================================================================
> =
. * A. Private transfers
. *============================================================================
> =
. 
. loc nl_incomes "remesas pensions capital transfers"

. loc lim : word count `nl_incomes'

. dis `lim'
4

. 
. forvalues i = 1/`lim' {
  2. loc x : word `i' of `nl_incomes'
  3. 
. dis as text "{hline}" _newline ///
>         as text " nl income = `x'" _newline ///
>     as text "{hline}" _newline
  4. 
. *  1. calculates the growth rate of capital according to population growth 
. sum h_`x' [aw = wgt  ] if h_`x' > 0 & h_`x' <.
  5. mat var0 = r(sum) / 1000000
  6. sum h_`x' [aw = fexp_s] if h_`x' > 0 & h_`x' <.
  7. mat var1 = r(sum) / 1000000
  8. 
. * 2. calculates the difference between micro and macro data growth rates  
. mat growth_`x' = growth_nlabor[`i',1]
  9. 
. }
-------------------------------------------------------------------------------
 nl income = remesas
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_remesas |   5,835  14841153.9     3.24238   8.317676   .0001387   138.6637

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_remesas |   5,835    14994186    3.242377   8.317659   .0001387   138.6637
-------------------------------------------------------------------------------
 nl income = pensions
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  h_pensions |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  h_pensions |       0           0
-------------------------------------------------------------------------------
 nl income = capital
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_capital |   3,319  8565516.44    5.794979   10.75295   .0001387   135.3357

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_capital |   3,319     8653899    5.795141   10.75319   .0001387   135.3357
-------------------------------------------------------------------------------
 nl income = transfers
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
 h_transfers |   5,792  15147684.2    .8589167   2.929485    .000208   38.52077

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
 h_transfers |   5,792    15303714    .8589424   2.929558    .000208   38.52077

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_remesas")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_remesas_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_pensions")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_pensions_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_capital")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_capital_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
:         M = st_matrix("var0")

:         C = st_matrix("var1")

:         V = st_matrix("growth_transfers")

:         G = M:*(1:+V)

:         H = (G:/C):-1

:         st_matrix("growth_transfers_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. 
. foreach x of local nl_incomes {
  2.     dis as text "`x'"
  3. * 3. expands private tranfers according to the new growth rate 
. gen  h_`x'_s = h_`x' *(1 + growth_`x'_adjust[1,1] ) if h_`x' !=.
  4. 
. }
remesas
(56,014 missing values generated)
pensions
(61,849 missing values generated)
capital
(58,530 missing values generated)
transfers
(56,057 missing values generated)

. 
. * others non-labor transfers  
. gen  h_otherinla_s  = h_otherinla
(61,139 missing values generated)

. //gen h_privtrans_s = h_privtrans
. 
. 
. * imputed rent
. gen h_renta_imp_s = h_renta_imp
(52,827 missing values generated)

. 
. * Adjustment done by KM
. egen aux_nlai_s = rowtotal(h_remesas_s h_pensions_s h_capital_s h_renta_imp_s
>  h_otherinla_s h_transfers_s) if h_head == 1, missing
(49,331 missing values generated)

. bysort id: egen h_nlai_s = sum(aux_nlai_s) if h_head != ., m
(7,087 missing values generated)

. 
. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 14 - Household income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *============================================================================
> =
. * Modified by: Kelly Y. Montoya
. * Modification: 04/29/2022 - Correcting household non-labor income
. *                               07/26/2022 - Corrected household labor income
. *                               08/30/2022 - Corrected missing household labo
> r income
. *============================================================================
> =
. 
. note: total individual incomes before food price adjustment 

. *============================================================================
> =
. 
. * Labor
. * Observed 
. gen     h_lai_obs = h_lai * -1
(3,387 missing values generated)

. replace h_lai_obs = . if h_lai_obs == 0 
(0 real changes made)

. * Counterfactual
. *egen     h_lai_s = sum(tot_lai_s) , by(hhid)
. egen     h_lai_s = sum(tot_lai_s) if h_head != ., by(hhid) m // KM: I correct
> ed this.
(3,387 missing values generated)

. *replace  h_lai_s = .  if h_lai_s == 0
. 
. * KM: I modified this part
. * Non-labor
. * Observed
. bysort id: egen aux_nlai = sum(h_nlai), m
(6,626 missing values generated)

. cap drop h_nlai

. gen h_nlai = aux_nlai
(6,626 missing values generated)

. drop aux_nlai

. 
. gen     h_nlai_obs = h_nlai * -1
(6,626 missing values generated)

. replace h_nlai_obs = . if h_nlai_obs == 0 
(0 real changes made)

. * Counterfactual
. *replace  h_nlai_s = .  if h_nlai_s == 0
. 
. * Total
. egen     h_inc_s = rowtotal(h_inc h_lai_obs h_lai_s h_nlai_obs h_nlai_s) if h
> _head != ., missing 

. 
. replace  h_inc_s = 0 if h_inc_s < 0
(543 real changes made)

. *replace  h_inc_s = . if h_inc_s == 0
. replace  h_inc_s = . if h_inc == .
(0 real changes made)

. 
. * per capita household income - total
. gen       pc_inc_s = h_inc_s/ h_size

. label var pc_inc_s "per capita income - $scenario" 

. 
. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file
(analytic weights assumed)
 
Warning: pc_inc_s has 1084 values = 0. Used in calculations
 
Percentile ratios

----------------------------------------------------------
  All obs |    p90/p10     p90/p50     p10/p50     p75/p25
----------+-----------------------------------------------
          |     12.161       2.929       0.241       2.969
----------------------------------------------------------
  
Generalized Entropy index GE(2), and Gini coefficient

----------------------------------
  All obs |      GE(2)        Gini
----------+-----------------------
          |   13.78321     0.60059
----------------------------------
(7 observations deleted)
(file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO
    AM24/BGD-MPO-Microsimulation/2024AM/Data/OUTPUT/basesim_2023.dta not
    found)
file /Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY25 - SAR MPO
    AM24/BGD-MPO-Microsimulation/2024AM/Data/OUTPUT/basesim_2023.dta saved
. }

. *===========================================================================
. * Display running time  
. etime
Elapsed time is 13 seconds 

. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file
