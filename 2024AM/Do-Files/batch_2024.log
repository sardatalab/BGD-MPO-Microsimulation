
  ___  ____  ____  ____  ____ ®
 /__    /   ____/   /   ____/      StataNow 18.5
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2023 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-782-8272        https://www.stata.com
                                   979-696-4600        service@stata.com

Stata license: Unlimited-user 4-core network, expiring 16 Dec 2025
Serial number: 501809302042
  Licensed to: WBG User
               World Bank

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000 but can be increased;
          see help set_maxvar.

. do batch_2024 

. *!v2.0
. *============================================================================
> ===
. * Macro-Micro Simulations
. *============================================================================
> ===
. * Created on : July 24, 2024
. * Last update: July 24, 2024
. *============================================================================
> ===
. * Prepared by: South Asia Regional Stats Team
. 
. * Initiated by: Sergio Olivieri
. * E-mail: colivieri@worldbank.org
. 
. * Modified by: Israel Osorio Rodarte
. * E-mail: iosoriorordarte@worldbank.org
. *============================================================================
> ===
. 
. *============================================================================
> ===
. * TIME
. *============================================================================
> ===
. capture which etime

. if _rc ssc install etime

. etime, start

. *============================================================================
> ===
. 
. *============================================================================
> ===
. * PATHS - Modify according to your local route
. *============================================================================
> ===
. {
. * Main
.         * MacOSX and Unix
.         if (c(os)=="MacOSX"|c(os)=="Unix") & c(username)=="Israel" {
.                  gl main  "/Users/Israel/OneDrive/WBG/ETIRI/Projects/FY25/FY2
> 5 - SAR MPO AM24"
.         }
.         * Windows
.         if c(os)=="Windows" & c(username)=="WB308767" {
.                  gl main  "C:/Users/WB308767/OneDrive/WBG/ETIRI/Projects/FY25
> /FY25 - SAR MPO AM24"
.         }
.         
. * Path  
.         gl path "$main/BGD-MPO-Microsimulation/2024AM"
.         cd "$path"
/Users/Israel/Library/CloudStorage/OneDrive-Personal/WBG/ETIRI/Projects/FY25/FY
> 25 - SAR MPO AM24/BGD-MPO-Microsimulation/2024AM
.         
. * Do-files path
.         gl thedo     "$path/Do-files" // Do-files path
. 
. * Globals for country and year identification
.         global country BGD                      // Country to upload
.         global year 2022                        // household survey year to u
> se
.         global final_year 2027          // Last simulated year
.         global base_year 2022           // Base year for building LAVs
.         
.         cap mkdir "${path}/Data"
.         gl data_root "${path}/Data"
.         gl data_in   "${path}/Data/INPUT"
.         gl data_out  "${path}/Data/OUTPUT"
. 
. * Parameters
.         *gl use_saved_parameters "yes" // Not working yet
.         gl re_scale "yes"                       // Change for "yes"/"no" re-s
> cale using total income
.         gl sector_model 6                       // 
.         gl random_remittances "no" // Change for "yes" or "no" on modelling
.         gl baseyear 2022
.         
. * Databases
.         global reload_dlw        ""             // if yes, reloads databases 
> from datalibweb
.         local  loadhhdata ""            // if yes, save dta for Simulation (f
> orced for sequential mode)
.         local  runsim     "yes"         // Run simulations
. 
. 
. * Initial and final year for sequential run
.         local iniyear = 2027    // Initial year when doing sequential runs
.         local finyear = 2027    // Final year when doing sequential runs
. 
. * Local parallel
.         *local parallel         "yes"   // If "yes", the program will run in 
> parallel mode
.         
. }

. *============================================================================
> ===
. * Sub-options for parallel run, if enabled
. *============================================================================
> ===
. {
.         
. * Parallel run set up
.         * If *local parallel is set to "yes". Then n batch files will be crea
> ted
.         * with the name batch_`i'.do located in the working directory.
.         * The iniyear and finyear locals above will be modified.        
.                 local iniparallelyear = 2022    // First batch file to be cre
> ated
.                 local finparallelyear = 2027    // Last batch file to be crea
> ted
.                 *local parallel_automatic "yes"  // If yes, parallel run will
>  start automatically
.                                                                              
>    // Otherwise, call from terminal
.                 
.         * Parallel operationalization, do not modify
.         
.                 scalar xrxx = 1                 // Do not modify
.                 scalar xrxy = 1                 // Do not modify
.                 local iniyear=2024      // Do not modify
.                 local finyear=2024      // Do not modify
. 
.                 * Create batch files in MacOSX with sed function
.                 if "`parallel'"=="yes" & (c(os)=="MacOSX"|c(os)=="Unix") {
.                         cd "$thedo"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.sh
.                         cap file close myscript
.                         file open myscript using myscript.sh, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                 
.                                 * Copy batch file
.                                 !cp "0 master.do" "batch_`bi'.do"
  3.                                 * Replace xrxx and xryy with initial and f
> inal years
.                                 !sed -i '' "s/iniyear=2024/iniyear=`bi'/g" ba
> tch_`bi'.do
  4.                                 !sed -i '' "s/finyear=2024/finyear=`bi'/g"
>  batch_`bi'.do
  5.                                 * Turn off parallel option
.                                 !sed -i '' "s/local[[:space:]]parallel/**loca
> l parallel/g" batch_`bi'.do
  6.                                 
.                                 * Append line to myscript.sh
.                                 file write myscript "/usr/local/bin/stata-mp 
> -b do batch_`bi' &" _n
  7.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript
.                         !chmod u+rx myscript.sh
.                         if "`parallel_automatic'"=="yes" {
.                                 !./myscript.sh
.                         }
.                         etime
.                         exit
.                 }
.                 
.                 * Create batch files in Windows with powershell
.                 if "`parallel'"=="yes" & c(os)=="Windows" {
.                         cd "$thedo"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.bat
.                         cap file close myscript
.                         file open myscript using myscript.bat, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                                                 
.                                 * Copy batch file
.                                 !copy "0 master.do" "batch_`bi'.do"
  3.                                 * Replace _fake xrxx and xryy with initial
>  and final years
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace 'iniyear=2024', 'iniyear=`bi'' | Out-File -encoding ASCII batc
> h_`bi'.do "
  4.                                 !powershell -command " (Get-Content batch_
> `bi'.do) -replace 'finyear=2024', 'finyear=`bi'' | Out-File -encoding ASCII b
> atch_`bi'.do "
  5.                                 * Turn off parallel option
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace '*local parallel', '**local parallel' | Out-File -encoding ASC
> II batch_`bi'.do "
  6.                                 
.                                 * Append line to myscript.sh
.                                 if `bi'==`iniparallelyear' file write myscrip
> t `"   "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  7.                                 else                       file write mysc
> ript `" | "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  8.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript     
.                         if "`parallel_automatic'"=="yes" { 
.                                 !myscript.bat
.                         }
.                         etime
.                         exit    
.                 }
. }

. 
. *============================================================================
> ===
. * Load and save household survey
. * The process must be done before simulation steps.
. * Here, we force it to be run only during sequential runs.
. * Running it in parallel mode can create problems when the same file is being
>  
. * saved by each parallel instance.
. * This happens more often in Windows environments.
. *============================================================================
> ===
. if "`loadhhdata'"=="yes" & "`parallel'"=="" {
.         
.         * 000. load data
.         do "$thedo/000_load_data.do"
. 
.         * 001. macro shares to Tableau
.         do "$thedo/001_sar_mpo_tableau_dashboard.do"
.         
.         * Save
.         save "$data_root/BGD_2022_HIES_v02_M_v02_A_SARMD_SIM.dta", replace
.         
. }

. *===========================================================================
. * run dofiles
. *===========================================================================
. if "`runsim'"=="yes" {
. 
.         forval yyyy = `iniyear'/`finyear' {
  2.                 clear all
  3.                 clear mata
  4.                 clear matrix
  5. 
.                 * Declarre simulation year
.                 global sim_year = `yyyy'
  6.                 
.                 * Load auxiliary simulation programs
.                 local files : dir "$thedo/auxcode" files "*.do"
  7.                 di `files'
  8.                 foreach f of local files{
  9.                         dis in yellow "`f'"
 10.                         qui: run "$thedo/auxcode/`f'"
 11.                 }
 12. 
.                 * Use base household survey
.                 if ${year}==2022 use "$data_root/BGD_2022_HIES_v02_M_v02_A_SA
> RMD_SIM.dta", clear
 13.                 
.                 * Globals for reading scenarios
.                 gl inputs   "$data_in/Macro and elasticities/Inputs elasticit
> ies `yyyy'.xlsx" // Country's input Excel file
 14. 
.                 * 010.input parameters
.                         do "$thedo/010_parameters.do"
 15.                 * 020.prepare variables
.                         do "$thedo/020_variables.do"
 16.                 * 030.model labor incomes by groups
.                         do "$thedo/030_occupation.do"
 17.                 * 040.model labor incomes by skills
.                         do "$thedo/040_labor_income.do"
 18.                 * 050.modeling population growth
.                         do "$thedo/050_population.do"
 19.                 * 060.modeling labor activity rate
.                         do "$thedo/060_activity.do"
 20.                 * 070.modeling unemployment rate
.                         do "$thedo/070_unemployment.do"
 21.                 * 080.modeling changes in employment by sectors
.                         do "$thedo/080_struct_emp.do"
 22.                 * 090.modeling labor income by sector
.                         do "$thedo/090_asign_labor_income.do"   
 23.                 * 100.income growth by sector
.                         if "$re_scale" == "yes" do "$thedo/100_income_rel_new
> .do"
 24.                         if "$re_scale" == ""    do "$thedo/101_income_rel_
> new_no_rescaling.do"
 25.                 * 110. total labor incomes
.                         do "$thedo/110_total_income.do" 
 26.                 * 120. total non-labor incomes
.                         if "$random_remittances" == "no"  do "$thedo/120_assi
> gn_nlai.do"
 27.                         if "$random_remittances" == "yes" do "$thedo/121_a
> ssign_nlai.do"
 28.                 * 130. household income
.                         do "$thedo/130_household_income.do"
 29. 
.                 * Quick summary
.                         ineqdec0 pc_inc_s  [w=fexp_s]
 30.                         
.                 drop if welfarenom==.
 31.                 save "${data_out}/basesim_${model}", replace
 32.         }
cuantiles.doprog_mata.dozk.domtab1.domatnames.dogini.dotheil.dodesigual.doshare
> s.doparam_res.dofgt.dosimchoiceres.do
cuantiles.do
prog_mata.do
zk.do
mtab1.do
matnames.do
gini.do
theil.do
desigual.do
shares.do
param_res.do
fgt.do
simchoiceres.do

. *!v1.0
. *===========================================================================
. * TITLE: Set up parameters
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Dec 03, 2020
. * Last update: Jun 26, 2024 - Israel Osorio Rodarte
. *                          Jan 04, 2021 Kelly Y. Montoya
. *                          Jan 13, 2021 - Modification of average labor incom
> e sheet
. *                          Jul 22, 2022 - Added macro data matrix for re-scal
> ing with sectoral and total GDP in the new model
. *                          Jul 25, 2022 - Added WDI population matrix for new
>  weights
. *                          Jul 26, 2022 - Moved model set up from master. Mut
> ed population by gender.
. *===========================================================================
. 
. *===========================================================================
. * setting up the model
. *===========================================================================
. 
. 
. * mata matrix
. mata:
------------------------------------------------- mata (type end to exit) -----
: void st_shares(string scalar name1)
> {
>         real matrix M,N,P
>         M = st_matrix(name1)
>     N = runningsum(M[1..(rows(M)-1),1])
>     P = N:/M[rows(M),1]
>     st_matrix("shr",P)
> }

: end
-------------------------------------------------------------------------------

. 
. 
. *===========================================================================
. * general parameters
. *===========================================================================
. 
. preserve

. 
. import excel using "$inputs", sheet("input_setup") first clear
(6 vars, 1 obs)

. 
. * type of estimation
. gl national   = type_estimation[1]

. if $national == 1 gl tipo "local"

. if $national == 0 gl tipo "inter"  

. 
. * select scenario
. gl model = model[1]

. tostring model, replace
model was int now str4

. 
. * bonus
. if inlist(bonus,1) gl bonus = 1

. if inlist(bonus,0) gl bonus = 0 

. 
. * sectors (by default 6 sectors)
. gl m = num_sectors[1]

. 
. * new weights
. if inlist(weights,1) gl weights = 1

. if inlist(weights,0) gl weights = 0

. 
. * macro data
. import excel using "$inputs", sheet("input_gdp") first clear
(2 vars, 7 obs)

. 
.         use dateid bgdnv* using "$data_in/Macro and elasticities/bgd - spring
>  meetings 2024 - pov - corrected pop 2.dta", clear

.         gen year = yofd(dateid)

.         drop dateid

.         foreach var of varlist bgd* {
  2.                 local nname = substr("`var'",4,60)
  3.                 rename `var' `nname'
  4.         }

.         
.         gen double nvindrestkn = (nvindtotlkn - nvindconskn)

.         gen double nvsrvrestkn = (nvsrvtotlkn - nvsrvtrnskn - nvsrvfinakn)

.         
.         keep  year nvagrtotlkn nvindconskn nvindrestkn nvsrvtrnskn nvsrvfinak
> n nvsrvrestkn

.         order year nvagrtotlkn nvindconskn nvindrestkn nvsrvtrnskn nvsrvfinak
> n nvsrvrestkn

.         
.         egen double nvgdptotlkn = rsum(nvagrtotlkn nvindconskn nvindrestkn nv
> srvtrnskn nvsrvfinakn nvsrvrestkn)

.         
.         
.         tsset year, yearly

Time variable: year, 1980 to 2050
        Delta: 1 year

.         
.         foreach var of varlist nv*kn {
  2.                 sum `var' if year==$base_year
  3.                 local b`var' = r(mean)
  4.                 gen double lav`var' = `var'/`b`var''-1
  5.         }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvagrtotlkn |          1     3391252           .    3391252    3391252

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvindconskn |          1     2786276           .    2786276    2786276

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvindrestkn |          1     7996947           .    7996947    7996947

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvsrvtrnskn |          1     2512898           .    2512898    2512898

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvsrvfinakn |          1      930615           .     930615     930615

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvsrvrestkn |          1    1.16e+07           .   1.16e+07   1.16e+07

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
 nvgdptotlkn |          1    2.92e+07           .   2.92e+07   2.92e+07

.         
.         keep if year == $sim_year
(70 observations deleted)

.         ddddd
command ddddd is unrecognized
r(199);

end of do-file
r(199);
. }
r(199);

end of do-file
r(199);
