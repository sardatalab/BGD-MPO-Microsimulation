
  ___  ____  ____  ____  ____ ®
 /__    /   ____/   /   ____/      18.0
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2023 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-STATA-PC        https://www.stata.com
                                   979-696-4600        stata@stata.com

Stata license: Unlimited-user 4-core network, expiring 16 Dec 2025
Serial number: 501809302042
  Licensed to: WBG User
               World Bank

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000 but can be increased;
          see help set_maxvar.


Running C:\Program Files\Stata18\sysprofile.do ...

. do batch_2027.do 

. *!v1.0
. *============================================================================
> ===
. * TITLE: MPO micro-simulations
. *============================================================================
> ===
. * Created on : Mar 17, 2020
. * Last update: Jul 02, 2024
. *============================================================================
> ===
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. 
. * Modified by Israel Osorio-Rodarte
. * E-mail: iosoriorodarte@worldbank.org
. 
. * Modified by Kelly Y. Montoya: Based on the LAC Data Lab microsimulation
. *============================================================================
> ===
. 
. *============================================================================
> ===
. * TIME
. *============================================================================
> ===
. capture which etime

. if _rc ssc install etime

. etime, start

. *============================================================================
> ===
. 
. *============================================================================
> ===
. * PATHS - Modify according to your local route
. *============================================================================
> ===
. {
. * Main
.         * MacOSX and Unix
.         if (c(os)=="MacOSX"|c(os)=="Unix") & c(username)=="Israel" {
.                  gl main  "/Users/Israel/OneDrive/WBG/ETIRI/Projects/FY24/FY2
> 4 5 SAS - Bangladesh/main"
.         }
.         * Windows
.         if c(os)=="Windows" & c(username)=="WB308767" {
.                  gl main  "C:/Users/WB308767/OneDrive/WBG/ETIRI/Projects/FY24
> /FY24 5 SAS - Bangladesh/main"
.         }
. 
. * Path  
.         gl path "$main/BGD-MPO-Microsimulation/2024SM"
.         
. * Do-files path
.         gl thedo     "$path/Do-files" // Do-files path
. 
. * Globals for country and year identification
.         gl country BGD                  // Country to upload
.         gl year 2022                    // Year to upload - Base year dataset
.         gl final_year 2027              // Change for last simulated year
.         
.         cap mkdir "${path}/Data"
.         gl data_root "${path}/Data"
.         gl data_in   "${path}/Data/INPUT"
.         gl data_out  "${path}/Data/OUTPUT"
. 
. * Parameters
.         *gl use_saved_parameters "yes" // Not working yet
.         gl re_scale "yes" // Change for "yes"/"no" re-scale using total incom
> e
.         gl sector_model 6 // 
.         gl random_remittances "no" // Change for "yes" or "no" on modelling
.         gl baseyear 2022
. 
. * Databases
.         gl reload_dlw    ""             // if yes, updates databases from dat
> alibweb
.         local loadhhdata ""             // if yes, save dta for Simulation (b
> etter in sequential mode)
.         local runsim     "yes"  // Run simulations
. }

. *============================================================================
> ===
. * Sequential or parallel set-up
. *============================================================================
> ===
. {
.         
. * Initial and final year for sequential run
.         local iniyear = 2022    // Initial year when doing sequential runs
.         local finyear = 2027    // Final year when doing sequential runs
. 
. * Parallel run set up
.         * If *local parallel is set to "yes". Then n batch files will be crea
> ted
.         * with the name batch_`i'.do located in the working directory.
.         * The iniyear and finyear locals above will be modified.
. 
.         *local parallel         "yes"   // If "yes", the program will run in 
> parallel mode
.         
.                 local iniparallelyear = 2022    // First batch file to be cre
> ated
.                 local finparallelyear = 2027    // Last batch file to be crea
> ted
.                 *local parallel_automatic "yes"  // If yes, parallel run will
>  start automatically
.                                                                              
>    // Otherwise, call from terminal
.                 
.         * Parallel operationalization, do not modify
.         
.                 scalar xrxx = 1                 // Do not modify
.                 scalar xrxy = 1                 // Do not modify
.                 local iniyear=2027      // Do not modify
.                 local finyear=2027      // Do not modify
. 
.                 * Create batch files in MacOSX with sed function
.                 if "`parallel'"=="yes" & (c(os)=="MacOSX"|c(os)=="Unix") {
.                         cd "$thedo"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.sh
.                         cap file close myscript
.                         file open myscript using myscript.sh, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                 
.                                 * Copy batch file
.                                 !cp "0 master.do" "batch_`bi'.do"
  3.                                 * Replace xrxx and xryy with initial and f
> inal years
.                                 !sed -i '' "s/iniyear=2027/iniyear=`bi'/g" ba
> tch_`bi'.do
  4.                                 !sed -i '' "s/finyear=2027/finyear=`bi'/g"
>  batch_`bi'.do
  5.                                 * Turn off parallel option
.                                 !sed -i '' "s/local[[:space:]]parallel/**loca
> l parallel/g" batch_`bi'.do
  6.                                 
.                                 * Append line to myscript.sh
.                                 file write myscript "/usr/local/bin/stata-mp 
> -b do batch_`bi' &" _n
  7.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript
.                         !chmod u+rx myscript.sh
.                         if "`parallel_automatic'"=="yes" {
.                                 !./myscript.sh
.                         }
.                         etime
.                         exit
.                 }
.                 
.                 * Create batch files in Windows with powershell
.                 if "`parallel'"=="yes" & c(os)=="Windows" {
.                         cd "$thedo"
.                         
.                         * Create myscript.sh
.                         cap erase myscript.bat
.                         cap file close myscript
.                         file open myscript using myscript.bat, write
.                         
.                         * Create n batch_`bi'.do files
.                         forval bi = `iniparallelyear'/`finparallelyear' {
  2.                                                                 
.                                 * Copy batch file
.                                 !copy "0 master.do" "batch_`bi'.do"
  3.                                 * Replace _fake xrxx and xryy with initial
>  and final years
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace 'iniyear=2027', 'iniyear=`bi'' | Out-File -encoding ASCII batc
> h_`bi'.do "
  4.                                 !powershell -command " (Get-Content batch_
> `bi'.do) -replace 'finyear=2027', 'finyear=`bi'' | Out-File -encoding ASCII b
> atch_`bi'.do "
  5.                                 * Turn off parallel option
.                                 !powershell -command " (Get-Content batch_`bi
> '.do) -replace '*local parallel', '**local parallel' | Out-File -encoding ASC
> II batch_`bi'.do "
  6.                                 
.                                 * Append line to myscript.sh
.                                 if `bi'==`iniparallelyear' file write myscrip
> t `"   "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  7.                                 else                       file write mysc
> ript `" | "`c(sysdir_stata)'/StataMP-64" /e /i do batch_`bi'.do "'
  8.                         }
.                         
.                         * Close myscript.sh file
.                         file close myscript     
.                         if "`parallel_automatic'"=="yes" { 
.                                 !myscript.bat
.                         }
.                         etime
.                         exit    
.                 }
. }

. 
. *============================================================================
> ===
. * Load and save household survey
. *============================================================================
> ===
. if "`loadhhdata'"=="yes" {
.         
.         local code="$country"
.         local year0=$baseyear
.         local cpiversion="09"   
.         
.         * Download CPI from datalibweb, in Windows
.         if "`c(os)'"=="Windows" {
.                 if "$reload_dlw"=="yes" {
.                         cap datalibweb, country(Support) year(2005) type(GMDR
> AW) surveyid(Support_2005_CPI_v`cpiversion'_M) filename(Final_CPI_PPP_to_be_u
> sed.dta)
.                         if _rc {
.                                 noi di ""
.                                 noi di as error "Note: Downloading data from 
> datalibweb failed. Verify connection"
.                                 exit
.                         }
.                         else save "$data_in/datalib_support_2005_GMDRAW.dta",
>  replace
.                 }
.                 if "$reload_dlw"=="" {
.                         cap use "$data_in/datalib_support_2005_GMDRAW.dta", c
> lear
.                         if _rc {
.                                 noi di as error "CPI data not found. Download
>  it using datalibweb in Windows"
.                                 exit
.                         }       
.                 }
.         }
.         
.         * Read CPI in MacOSX
.         if (c(os)=="MacOSX"|c(os)=="Unix") {
.                 noi di ""
.                 noi di as text "Note: MacOSX/Unix, datalibweb skipped. CPI da
> ta should exist alreay in the Data/ folder"
.                 
.                 cap use "$data_in/datalib_support_2005_GMDRAW.dta", clear
.                 if _rc {
.                         noi di as error "CPI data not found. Download it usin
> g datalibweb in Windows"
.                         exit
.                 }
.         }
.         
.         * Save CPI temporary file
.         keep if code=="`code'" & year==`year0'
.         keep code year cpi2017 icp2017
.         rename code countrycode
.         tempfile dlwcpi
.         save `dlwcpi', replace
. 
.         * 0. load data
.         do "$thedo/00_load_data.do"
. 
.         drop cpi2017
.         merge m:1 countrycode year using `dlwcpi'
.         keep if _merge==3
.         drop _merge
.         save "$data_root/BGD_2022_HIES_v02_M_v02_A_SARMD_SIM.dta", replace
. }

. *===========================================================================
. * run dofiles
. *===========================================================================
. if "`runsim'"=="yes" {
. 
.         forval yyyy = `iniyear'/`finyear' {
  2.                 clear all
  3.                 clear mata
  4.                 clear matrix
  5. 
.                 * Load auxiliary simulation programs
.                 local files : dir "$thedo/auxcode" files "*.do"
  6.                 di `files'
  7.                 foreach f of local files{
  8.                         dis in yellow "`f'"
  9.                         qui: run "$thedo/auxcode/`f'"
 10.                 }
 11. 
.                 * Use base household survey
.                 if ${year}==2022 use "$data_root/BGD_2022_HIES_v02_M_v02_A_SA
> RMD_SIM.dta", clear
 12.                 
.                 * Globals for reading scenarios
.                 gl inputs   "$data_in/Macro and elasticities/Inputs elasticit
> ies `yyyy'.xlsx" // Country's input Excel file
 13. 
.                 * 1.input parameters
.                         do "$thedo/01_parameters.do"
 14.                 * 2.prepare variables
.                         do "$thedo/02_variables.do"
 15.                 * 3.model labor incomes by groups
.                         do "$thedo/03_occupation.do"
 16.                 * 4.model labor incomes by skills
.                         do "$thedo/04_labor_income.do"
 17.                 * 5.modeling population growth
.                         do "$thedo/05_population.do"
 18.                 * 6.modeling labor activity rate
.                         do "$thedo/06_activity.do"
 19.                 * 7.modeling unemployment rate
.                         do "$thedo/07_unemployment.do"
 20.                 * 8.modeling changes in employment by sectors
.                         do "$thedo/08_struct_emp.do"
 21.                 * 9.modeling labor income by sector
.                         do "$thedo/09_asign_labor_income.do"    
 22.                 * 10.income growth by sector
.                         do "$thedo/$do_income.do"
 23.                 * 11. total labor incomes
.                         do "$thedo/11_total_income.do"  
 24.                 * 12. total non-labor incomes
.                         do "$thedo/12_assign_nlai.do"
 25.                 * 13. household income
.                         do "$thedo/13_household_income.do"
 26. 
.                 * Quick summary
.                         ineqdec0 pc_inc_s  [w=fexp_s]
 27.                         
.                 drop if welfarenom==.
 28.                 save "${data_out}/basesim_${model}", replace
 29.         }
cuantiles.dodesigual.dofgt.dogini.domatnames.domtab1.doparam_res.doprog_mata.do
> shares.dosimchoiceres.dotheil.dozk.do
cuantiles.do
desigual.do
fgt.do
gini.do
matnames.do
mtab1.do
param_res.do
prog_mata.do
shares.do
simchoiceres.do
theil.do
zk.do

. *!v1.0
. *===========================================================================
. * TITLE: Set up parameters
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Dec 03, 2020
. * Last update: Jan 04, 2021 Kelly Y. Montoya
. *                          Jan 13, 2021 - Modification of average labor incom
> e sheet
. *                          Jul 22, 2022 - Added macro data matrix for re-scal
> ing with sectoral and total GDP in the new model
. *                          Jul 25, 2022 - Added WDI population matrix for new
>  weights
. *                          Jul 26, 2022 - Moved model set up from master. Mut
> ed population by gender.
. *===========================================================================
. 
. *===========================================================================
. * setting up the model
. *===========================================================================
. 
. *tasas de crecimiento del GDP en comparacion con el anio base
. 
. 
.         * sectorial growth rates
.         gl input_gdp_sheet "input_gdp2"

.         
.         * do-file 10 for re-scaling options
.         if "$re_scale" == "yes" gl do_income "10_income_rel_new"

.         else gl do_income "10_income_rel_new_no_rescaling"

.         
. 
. 
. * mata matrix
. mata:
------------------------------------------------- mata (type end to exit) -----
: void st_shares(string scalar name1)
> {
>         real matrix M,N,P
>         M = st_matrix(name1)
>     N = runningsum(M[1..(rows(M)-1),1])
>     P = N:/M[rows(M),1]
>     st_matrix("shr",P)
> }

: end
-------------------------------------------------------------------------------

. 
. 
. *===========================================================================
. * general parameters
. *===========================================================================
. 
. preserve

. 
. import excel using "$inputs", sheet("input_setup") first clear
(6 vars, 1 obs)

. 
. * type of estimation
. gl national   = type_estimation[1]

. if $national == 1 gl tipo "local"

. if $national == 0 gl tipo "inter"  

. 
. * select scenario
. gl model = model[1]

. tostring model, replace
model was int now str4

. 
. * number of months without payment
. /*
> gl  redu = redu[1]
> if  redu != 0 gl t = 2
> if  redu == 0 gl t = 1
> */
. * bonus
. if inlist(bonus,1) gl bonus = 1

. if inlist(bonus,0) gl bonus = 0 

. 
. * sectors (by default 6 sectors)
. gl m = num_sectors[1]

. * new weights
. if inlist(weights,1) gl weights = 1

. if inlist(weights,0) gl weights = 0

. 
. * average labor incomes
. import excel using "$inputs", sheet("$input_gdp_sheet") first clear    //inpu
> t_gdp2
(2 vars, 7 obs)

. mkmat rate, mat(growth_labor_income)

. 
. * macro data
. import excel using "$inputs", sheet("input_gdp") first clear
(2 vars, 7 obs)

. mkmat rate, mat(growth_macro_data)

. 
. * labor market
. import excel using "$inputs", sheet("input_labor") first clear
(2 vars, 8 obs)

. mkmat rate, mat(growth_labor)

. 
. /* informality
> import excel using "$inputs", sheet("input_informality") first clear
> mkmat rate, mat(growth_informal)*/
. 
. * non-labor incomes
. import excel using "$inputs", sheet("input_nonlabor") first clear
(2 vars, 4 obs)

. mkmat rate, mat(growth_nlabor)

. 
. /* poverty lines
> import excel using "$inputs", sheet("input_pl") first clear
> mkmat value, mat(growth_pl)*/
. 
. 
. *===========================================================================
. * Population growth 
. *===========================================================================
. 
. * total population
. import excel using "$inputs", sheet("input_pop_wdi") first clear
(2 vars, 1 obs)

. mkmat value, mat(growth_pop_wdi)

. 
. /* population by gender
> import excel using "$inputs", sheet("input_population") first clear
> mkmat female, mat(growth_pop_female)
> mkmat male  , mat(growth_pop_male)
> 
> * population in time 0
> mat vec_pop_grw0 = growth_pop_female\growth_pop_male
> mat vec_pop_grw0 = J(rowsof(vec_pop_grw0),colsof(vec_pop_grw0),1) + vec_pop_g
> rw0
> 
> loc cols = colsof(vec_pop_grw0)
> loc rows = rowsof(vec_pop_grw0)
> 
> 
> * population in time 1
> mat vec_pop_grw1 = vec_pop_grw0[....,1]
> forvalues i = 2(1)`cols'{
>   mat aux = vec_pop_grw0[....,`i']
>   mat vec_pop_grw1 = vec_pop_grw1\aux
> }*/
. 
. restore

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: Prepare variables
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Feb 14, 2023 Kelly Y. Montoya
. *                               March 1, 2023 - Cicero Braga - adjust informa
> lity for ARG
. *===========================================================================
. 
. *===========================================================================
. * Be careful: check by-one-bye
. *===========================================================================
. 
. gen ipcf_ppp17=(12/365)*ipcf/cpi2017/icp2017

. 
. gen welfarenom_ppp17=(12/365)*welfarenom/cpi2017/icp2017
(7 missing values generated)

. 
. clonevar emplyd     = lstatus_year if ipcf_ppp17 != .
(42,250 missing values generated)

. gen unemplyd   = (lstatus==2)  if ipcf_ppp17 != .

. *gen      male       = (hombre==1)
. replace male = . if male!=1
(30,855 real changes made, 30,855 to missing)

. 
. clonevar edad = age

. * age sample
. gen sample = 1 if inrange(edad,15,64)
(21,205 missing values generated)

. 
. clonevar id=hhid

. 
. 
. *===========================================================================
. * PPP adjustment factor
. *===========================================================================
. 
. 
. * PPP 2017 adjustment factor
. 
.         
.         foreach incomevar in ila ijubi itranp itrane icap inla_otro inla rent
> a_imp ipcf itf ip inp {
  2.                 cap drop `incomevar'_ppp17
  3.                 gen `incomevar'_ppp17=(12/365)*`incomevar'/cpi2017/icp2017
  4.         }
(42,249 missing values generated)
(61,849 missing values generated)
(56,014 missing values generated)
(54,054 missing values generated)
(58,530 missing values generated)
(61,139 missing values generated)
(47,541 missing values generated)
(22,300 missing values generated)
(42,250 missing values generated)
(54,846 missing values generated)

. 
. 
. 
. if $national == 0 {
.         
.                 *Make sure this is total family income
.                 clonevar  h_inc       = itf_ppp17
.                 clonevar lai_m        = ip_ppp17 
(42,250 missing values generated)
.                 clonevar lai_s        = inp_ppp17
(54,846 missing values generated)
.                 clonevar lai_orig     = ila_ppp17
(42,249 missing values generated)
. }

. 
. 
. *===========================================================================
. * Labor market variables
. *===========================================================================
. 
. * Occupation by economic sector and informal status
. 
. *Generate the three economic sectors variable
. /*
> if inlist(pais_ocaux,"PRY","pry")  {
>         recode sector (1=1 "Agriculture") (2 3 4 =2 "Industry") (5 6 7 8 9 10
>  =3 "Services") , gen(sect_main)
>         replace sect_main = . if ipcf_ppp17 == .
>         *recode sector_s (1 2 =1 "Agriculture") (3 4 5 6 =2 "Industry") (7 8 
> 9 10 11 12 13 14 15 16 17 =3 "Services") , gen(sect_secu) // KM: PRY doesn't 
> have sector_s but it could be created. I leave this here in case they add it 
> later in the harmonization.
> } // PRY doesn't have available the variable sector1d from 2014 on.
> 
> else {
>         recode sector1d (1 2 =1 "Agriculture") (3 4 5 6 =2 "Industry") (7 8 9
>  10 11 12 13 14 15 16 17 =3 "Services") , gen(sect_main)
>         replace sect_main = . if ipcf_ppp17 == .
>         
>         if inlist(pais_ocaux,"cri","CRI","CHL","chl","MEX", "mex") {
>             gen sect_secu = .
>         }
>         
>         else {
>                 recode sector1d_s (1 2 =1 "Agriculture") (3 4 5 6 =2 "Industr
> y") (7 8 9 10 11 12 13 14 15 16 17 =3 "Services") , gen(sect_secu)
>                 replace sect_secu = . if ipcf_ppp17 == .
>         }
> }
> */
. 
. * primary activity
. gen     sect_main6 = .
(61,849 missing values generated)

. replace sect_main6 = 1 if  industry6 == 1 & emplyd == 1 
(6,168 real changes made)

. replace sect_main6 = 2 if  industry6 == 2 & emplyd == 1 
(4,141 real changes made)

. replace sect_main6 = 3 if  industry6 == 3 & emplyd == 1 
(1,618 real changes made)

. replace sect_main6 = 4 if  industry6 == 4 & emplyd == 1 
(2,992 real changes made)

. replace sect_main6 = 5 if  industry6 == 5 & emplyd == 1
(1,773 real changes made)

. replace sect_main6 = 6 if  industry6 == 6 & emplyd == 1 
(2,900 real changes made)

. label var sect_main6 "main economic sector" 

. 
. * secondary activity
. gen     sect_secu6 = .
(61,849 missing values generated)

. replace sect_secu6 = 1 if  industry6_2 == 1 & emplyd == 1 
(6,309 real changes made)

. replace sect_secu6 = 2 if  industry6_2 == 2 & emplyd == 1 
(202 real changes made)

. replace sect_secu6 = 3 if  industry6_2 == 3 & emplyd == 1 
(100 real changes made)

. replace sect_secu6 = 4 if  industry6_2 == 4 & emplyd == 1 
(202 real changes made)

. replace sect_secu6 = 5 if  industry6_2 == 5 & emplyd == 1
(105 real changes made)

. replace sect_secu6 = 6 if  industry6_2 == 6 & emplyd == 1
(225 real changes made)

. label var sect_secu6  "secondary economic sector" 

. 
. label def sectors         ///
> 1 "Agriculture"   ///
> 2 "Industry" ///
> 3 "Construction"   ///
> 4 "Services" ///
> 5 "Transport"   ///
> 6 "Finance", replace

. label values sect_main6 sect_secu6 sectors

. 
. * labor relationship
. gen salaried = empstat_year==1 if emplyd==1
(42,250 missing values generated)

. gen self_emp = empstat_year==4 if emplyd==1 
(42,250 missing values generated)

. gen unpaid = empstat_year==2 if emplyd==1
(42,250 missing values generated)

. gen salaried2 = empstat_2_year==1 if emplyd==1
(42,250 missing values generated)

. gen self_emp2  = empstat_2_year==4 if emplyd==1
(42,250 missing values generated)

. gen unpaid2    = empstat_2_year==2 if emplyd==1
(42,250 missing values generated)

. 
. * primary activity
. gen     labor_rel = 1 if salaried == 1
(50,118 missing values generated)

. replace labor_rel = 2 if self_emp == 1
(7,673 real changes made)

. replace labor_rel = 3 if unpaid   == 1
(0 real changes made)

. replace labor_rel = 4 if unemplyd == 1
(1,204 real changes made)

. label var labor_rel "labor relation-primary job"

. 
. * secondary activity
. gen     labor_rel2 = 1 if salaried2 == 1
(61,033 missing values generated)

. replace labor_rel2 = 2 if self_emp2 == 1
(6,279 real changes made)

. replace labor_rel2 = 3 if unpaid2   == 1
(0 real changes made)

. label var labor_rel2 "labor relation-secondary job"

. 
. label def lab_rel ///
> 1 "salaried"   ///
> 2 "self-employd" ///
> 3 "unpaid" ///
> 4 "unemployed" ,replace

. label values labor_rel labor_rel2 lab_rel

. 
. * public job_status
. /* IMPORTANT: This isn't accounting for not salaried public workers
>  grupo_lab = 3  is  relab==2 & empresa==3
> */
. gen     public_job = 0 if emplyd ==1
(42,250 missing values generated)

. replace public_job = 1 if emplyd == 1 & ocusec_year==1
(1,353 real changes made)

. 
. note: by definiton the public job is part of formal services sector

. 
. replace industry6  = 4 if !inlist(industry6, 4) & public_job ==1 & industry6!
> = .
(444 real changes made)

. replace sect_main6 = 4 if !inlist(sect_main6,4) & public_job ==1 & sect_main6
>  != .
(444 real changes made)

. 
. *===========================================================================
. * Checking income variables
. *===========================================================================
. 
. * labor incomes
. egen    tot_lai = rowtotal(lai_m lai_s), missing
(42,249 missing values generated)

. replace tot_lai = lai_s if lai_m < 0
(491 real changes made, 484 to missing)

. replace tot_lai = . if lai_orig == .
(0 real changes made)

. if abs(tot_lai - lai_orig) > 1 & abs(tot_lai - lai_orig) != . di in red "WARN
> ING: Please check variables definition. tot_lai is different from lai_orig."

. drop lai_orig

. 
. * total household labor incomes
. egen     h_lai  = sum(tot_lai) , by(hhid) missing
(3,387 missing values generated)

. 
. * Household size
. clonevar h_size= hsize

. 
. * Non-labor incomes
.         gen capital_ppp17  = icap_ppp17
(58,530 missing values generated)

.         gen pensions_ppp17 = ijubi_ppp17
(61,849 missing values generated)

.         gen otherinla_ppp17 = inla_otro_ppp17
(61,139 missing values generated)

.         gen remesas_ppp17  = itranp_ppp17
(56,014 missing values generated)

.         gen transfers_ppp17 = itrane_ppp17
(54,054 missing values generated)

. 
. if $national == 0 { 
.                 note: includes imputed rent
.                 replace renta_imp_ppp17 = renta_imp_ppp17 / h_size
(39,355 real changes made)
.                 local var "remesas_ppp17 pensions_ppp17 capital_ppp17 renta_i
> mp_ppp17 otherinla_ppp17 transfers_ppp17"
.                 foreach x of local var {
  2.                 egen     h_`x' = sum(`x') , by(hhid) missing
  3.                 replace  h_`x' = . if h_`x' == 0        
  4.                 }
(37,417 missing values generated)
(0 real changes made)
(61,849 missing values generated)
(0 real changes made)
(47,276 missing values generated)
(0 real changes made)
(22,300 missing values generated)
(0 real changes made)
(58,808 missing values generated)
(0 real changes made)
(35,159 missing values generated)
(0 real changes made)
. } 

. 
. rename h_capital_ppp h_capital 

. rename h_pensions_ppp h_pensions

. rename h_remesas_ppp h_remesas 

. rename h_otherinla_ppp h_otherinla

. rename h_transfers_ppp h_transfers

. rename h_renta_imp_ppp h_renta_imp

. 
. * household income
. egen mm = rowtotal(h_lai h_remesas h_pensions h_capital h_renta_imp h_otherin
> la h_transfers), missing
(346 missing values generated)

. 
. gen  resid = h_inc - mm
(346 missing values generated)

. replace resid = 0 if resid < 0
(11,879 real changes made)

. drop mm

. 
. egen h_nlai = rowtotal(h_remesas h_pensions h_capital h_renta_imp h_otherinla
>  h_transfers resid), missing
(346 missing values generated)

. 
. * at household level 
. local var "h_remesas h_pensions h_capital h_renta_imp h_otherinla h_nlai h_tr
> ansfers resid"

. 
. foreach x of local var {
  2. replace  `x' = . if relationharm != 1
  3. }
(18,597 real changes made, 18,597 to missing)
(0 real changes made)
(11,254 real changes made, 11,254 to missing)
(30,527 real changes made, 30,527 to missing)
(2,331 real changes made, 2,331 to missing)
(47,335 real changes made, 47,335 to missing)
(20,898 real changes made, 20,898 to missing)
(47,335 real changes made, 47,335 to missing)

. replace h_nlai   = . if h_nlai == 0
(1,547 real changes made, 1,547 to missing)

. 
. 
. /*==========================================================================
> * II. INDEPENDENT VARIABLES
> *=========================================================================== 
>         gender:                     male 
>         experience:                 age
>         experience2:            age2
>         education dummies:      none and infantil
>                                                 primary
>                                                 secundary
>                                                 superior
>         household head:         h_head
>         marital status:         married
>         regional dummies:   region      
>         remittances:                remitt_any
>         other memb public job:  oth_pub
>         dependency:                     depen
>         others perception:          perce
> ========================================================================= */
.         
. * education level (aggregate primary and none)
. //replace educ_lev = 1 if educ_lev  ==0 
.         
. gen educ_level = educat7
(6,032 missing values generated)

. replace educ_lev = 1 if educ_lev ==0
(0 real changes made)

. 
. * marital status
. gen married = (marital==1)

. 
. * household head
. gen h_head = (relationharm==1)

. 
. * remittances domestic or abroad
. cap drop aux*

. //gen          aux  = 1 if (remesas > 0 & remesas !=.)
. 
. gen aux  = 1 if (remesas_ppp17 >0 & remesas_ppp17!=.)
(56,014 missing values generated)

. replace    aux  = 0 if  aux ==. 
(56,014 real changes made)

. egen       remitt_any = max(aux), by(hhid)

. label var  remitt_any "[=1] if household receives remittances"

. 
. * other member with public salaried job
. cap drop aux*

. egen aux       = total(public_job), by(hhid)

. gen     oth_pub = sign(aux - public_job)
(42,250 missing values generated)

. replace oth_pub = sign(aux) if missing(public_job)
(42,250 real changes made)

. lab var oth_pub "[=1] if other member with public job"

. 
. * dependency ratio
. cap drop aux*

. cap drop depen

. egen aux = total((age < 15 | age > 64)), by(hhid)

. gen       depen = aux/h_size 

. label var depen "potential dependency"

. 
. * log main labor income
. gen ln_lai_m = ln(lai_m)
(42,741 missing values generated)

. 
. *===========================================================================
. * I. DEPENDENT VARIABLES
. *===========================================================================
. 
. *check here definition of active (12 months or 7 days)
. 
. gen active = lstatus_year
(42,250 missing values generated)

. replace active = 1 if lstatus==2
(1,074 real changes made)

. replace active = 0 if active != 1
(41,176 real changes made)

. 
. gen     occupation = .
(61,849 missing values generated)

. replace occupation = 0 if  active     == 0              
(41,176 real changes made)

. replace occupation = 1 if  unemplyd   == 1                      
(1,204 real changes made)

. replace occupation = 2 if  sect_main6 == 1
(6,143 real changes made)

. replace occupation = 3 if  sect_main6 == 2
(3,972 real changes made)

. replace occupation = 4 if  sect_main6 == 3
(1,597 real changes made)

. replace occupation = 5 if  sect_main6 == 4
(3,436 real changes made)

. replace occupation = 6 if  sect_main6 == 5
(1,686 real changes made)

. replace occupation = 7 if  sect_main6 == 6
(2,758 real changes made)

. label var occupation "occupation status"

. 
. label define occup ///
> 0 "inactive" /// 
> 1 "unempl"   ///
> 2 "agric"  /// 
> 3 "ind" ///
> 4 "cons" ///
> 5 "serv" ///
> 6 "transp"  ///
> 7 "fin", replace 

. label values occupation occup

.         
. *===========================================================================
. * Setting up sample 
. *===========================================================================
. 
. //local var "ln_lai_m sect_main6 sect_main sect_secu6 sect_secu occupation"
. 
. local var "ln_lai_m sect_main6 industry6 occupation"

. 
. foreach x of varlist `var' {
  2.     replace `x' = . if sample != 1
  3. }
(1,316 real changes made, 1,316 to missing)
(1,378 real changes made, 1,378 to missing)
(1,407 real changes made, 1,407 to missing)
(21,198 real changes made, 21,198 to missing)

. 
. * education variables
. gen     sample_1 = 1 if educ_lev <  4 &  sample == 1 
(45,459 missing values generated)

. lab var sample_1 "low educated"

. gen     sample_2 = 1 if educ_lev >= 4 &  sample == 1 
(37,595 missing values generated)

. lab var sample_2 "high educated"

. 
. gen     skill = 1 if sample_1 == 1
(45,459 missing values generated)

. replace skill = 2 if sample_2 == 1
(24,254 real changes made)

. 
. 
. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 03 - Modelling labor status by education skills 
. *============================================================================
> =
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 27, 2022 Kelly Y. Montoya
. * Last update: March 22 - Cicero Braga (region dummies)
. *                          Mar 31, 2022 Included region for ECU (KM)
. *                          Apr 19, 2022 Included estimations saving for post-
> estimation (KM)
. *                          Feb 17, 2023 Changed region set up (KM)
. *============================================================================
> =
. 
. *============================================================================
> =
. * independet variables
. *============================================================================
> =
. 
. encode subnatid1, gen(region)

. 
. 
. loc mnl_rhs           c.age##c.age urban ib0.male#ibn.h_head#ib0.married

. loc mnl_rhs `mnl_rhs' remitt_any depen oth_pub ib0.male#ibn.educ_lev atschool

. loc mnl_rhs `mnl_rhs' ib1.region

. 
. * skill levels
. levelsof skill, loc(numb_skills)
1 2

. 
. foreach skill of numlist `numb_skills' {
  2. 
.         sum occupation if skill == `skill' 
  3.         loc base = r(min)
  4.         
.         * Parameters
.         *if "$use_saved_parameters" == "no" {
.                 mlogit occupation `mnl_rhs'  [pw = wgt] if skill == `skill' &
>  sample ==1, baseoutcome(`base')
  5.                 /*capture mkdir "${data}\models/${country}_${year}"
>                 estimates save "${data}\models/${country}_${year}\Status_skil
> l_`skill'.dta", replace
>         }
>         else {
>                 estimates use "${data}\models/${country}_${year}\Status_skill
> _`skill'.dta"
>                 estimates esample: occupation `mnl_rhs' [aw = pondera] if
>        skill == `skill' & sample ==1, baseoutcome(`base')
> 
>         }*/
. 
.         *====================================================================
> =====
.         * residuals
.         *====================================================================
> =====
.         
.         levelsof occupation if skill == `skill', local(occ_cat) 
  6.         loc rvarlist
  7.         
.         foreach sect of numlist `occ_cat' {
  8.         loc rvarlist "`rvarlist' U`sect'_`skill'"
  9.         }
 10.         
.         set seed 23081985
 11.         simchoiceres `rvarlist' if skill == `skill', total
 12. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  occupation |     16,390    1.933008    2.232155          0          7

note: 1.male#1.h_head#1.married omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
Iteration 0:  Log pseudolikelihood =  -39032600  
Iteration 1:  Log pseudolikelihood =  -35058292  
Iteration 2:  Log pseudolikelihood =  -34907332  
Iteration 3:  Log pseudolikelihood =  -34386329  
Iteration 4:  Log pseudolikelihood =  -34353810  
Iteration 5:  Log pseudolikelihood =  -34352641  
Iteration 6:  Log pseudolikelihood =  -34352588  
Iteration 7:  Log pseudolikelihood =  -34352577  
Iteration 8:  Log pseudolikelihood =  -34352575  
Iteration 9:  Log pseudolikelihood =  -34352574  
Iteration 10: Log pseudolikelihood =  -34352574  
Iteration 11: Log pseudolikelihood =  -34352574  
Iteration 12: Log pseudolikelihood =  -34352574  
Iteration 13: Log pseudolikelihood =  -34352574  
Iteration 14: Log pseudolikelihood =  -34352574  
Iteration 15: Log pseudolikelihood =  -34352574  
Iteration 16: Log pseudolikelihood =  -34352574  

Multinomial logistic regression                      Number of obs  =    7,874
                                                     Wald chi2(133) = 38028.17
                                                     Prob > chi2    =   0.0000
Log pseudolikelihood = -34352574                     Pseudo R2      =   0.1199

------------------------------------------------------------------------------
             |               Robust
  occupation | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
inactive     |  (base outcome)
-------------+----------------------------------------------------------------
unempl       |
         age |   .0281048   .0866432     0.32   0.746    -.1417128    .1979223
             |
 c.age#c.age |  -.0007064   .0011045    -0.64   0.522    -.0028712    .0014584
             |
       urban |   .2757646   .3398547     0.81   0.417    -.3903384    .9418676
             |
 male#h_head#|
     married |
   Male#0#0  |   .4275102   .6943757     0.62   0.538    -.9334412    1.788462
   Male#0#1  |   .0544046   .6255446     0.09   0.931     -1.17164    1.280449
   Male#1#0  |  -20.26859   .4883576   -41.50   0.000    -21.22576   -19.31143
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .2177298   .3523434     0.62   0.537    -.4728505    .9083102
       depen |  -.8510863   .7654679    -1.11   0.266    -2.351376    .6492032
     oth_pub |  -1.031045   .7237191    -1.42   0.154    -2.449508    .3874189
             |
        male#|
  educ_level |
     Male#1  |   .2788749   .3953647     0.71   0.481    -.4960257    1.053775
     Male#2  |  -.0088501   .4197161    -0.02   0.983    -.8314785    .8137784
     Male#3  |          0  (omitted)
             |
    atschool |   -1.40124   1.079588    -1.30   0.194    -3.517193    .7147139
             |
      region |
20-Chitta~g  |    .781242   .5485422     1.42   0.154    -.2938811    1.856365
   30-Dhaka  |    .953859   .5507162     1.73   0.083     -.125525    2.033243
  40-Khulna  |   .3021099    .703488     0.43   0.668    -1.076701    1.680921
45-Mymens~h  |  -.1985188   .6555625    -0.30   0.762    -1.483398     1.08636
50-Rajshahi  |  -1.190722   .8594253    -1.39   0.166    -2.875165    .4937204
 55-Rangpur  |  -.0313535   .6510449    -0.05   0.962    -1.307378    1.244671
  60-Sylhet  |   .7883926   .5430954     1.45   0.147    -.2760548     1.85284
             |
       _cons |  -3.361698   1.813995    -1.85   0.064    -6.917062    .1936666
-------------+----------------------------------------------------------------
agric        |
         age |    .177583    .028891     6.15   0.000     .1209576    .2342084
             |
 c.age#c.age |  -.0024547   .0003406    -7.21   0.000    -.0031222   -.0017872
             |
       urban |  -1.328797   .1235183   -10.76   0.000    -1.570889   -1.086706
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.912895   .2182601   -13.35   0.000    -3.340677   -2.485113
   Male#0#1  |  -2.422578   .1644849   -14.73   0.000    -2.744962   -2.100193
   Male#1#0  |  -.8598626   .3629276    -2.37   0.018    -1.571188   -.1485376
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0322653   .1112653    -0.29   0.772    -.2503412    .1858107
       depen |    .093742   .3072562     0.31   0.760     -.508469     .695953
     oth_pub |  -.3008601   .3520866    -0.85   0.393    -.9909372    .3892169
             |
        male#|
  educ_level |
     Male#1  |    .005234   .1384194     0.04   0.970     -.266063    .2765309
     Male#2  |   .1129714   .1545452     0.73   0.465    -.1899316    .4158745
     Male#3  |          0  (omitted)
             |
    atschool |  -2.856553   .9954364    -2.87   0.004    -4.807572   -.9055334
             |
      region |
20-Chitta~g  |   -.579959   .1952012    -2.97   0.003    -.9625462   -.1973717
   30-Dhaka  |  -.7303279   .1982178    -3.68   0.000    -1.118828    -.341828
  40-Khulna  |    .393119   .2076682     1.89   0.058    -.0139032    .8001412
45-Mymens~h  |  -.2103836   .1903267    -1.11   0.269     -.583417    .1626498
50-Rajshahi  |   .6968738   .2129961     3.27   0.001     .2794091    1.114338
 55-Rangpur  |  -.0208187   .2026028    -0.10   0.918    -.4179129    .3762755
  60-Sylhet  |   .0315909   .1873298     0.17   0.866    -.3355687    .3987506
             |
       _cons |   .0620762   .6084965     0.10   0.919    -1.130555    1.254707
-------------+----------------------------------------------------------------
ind          |
         age |   .1775638   .0320103     5.55   0.000     .1148247    .2403028
             |
 c.age#c.age |  -.0029945   .0003869    -7.74   0.000    -.0037529   -.0022361
             |
       urban |   .2485408   .1281941     1.94   0.053    -.0027149    .4997966
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.737848   .2400293   -11.41   0.000    -3.208297     -2.2674
   Male#0#1  |  -2.547314   .1979364   -12.87   0.000    -2.935262   -2.159366
   Male#1#0  |  -.4235008   .3974696    -1.07   0.287    -1.202527    .3555252
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0404309   .1248244    -0.32   0.746    -.2850823    .2042204
       depen |   -.174691   .3442032    -0.51   0.612    -.8493168    .4999348
     oth_pub |  -.5029192   .4350543    -1.16   0.248     -1.35561    .3497716
             |
        male#|
  educ_level |
     Male#1  |  -.8230897   .1498349    -5.49   0.000    -1.116761   -.5294187
     Male#2  |  -.4417409   .1671557    -2.64   0.008      -.76936   -.1141219
     Male#3  |          0  (omitted)
             |
    atschool |  -2.494496   .8339588    -2.99   0.003    -4.129025   -.8599664
             |
      region |
20-Chitta~g  |  -.0807115   .2168501    -0.37   0.710      -.50573    .3443069
   30-Dhaka  |    .533334   .2122113     2.51   0.012     .1174075    .9492605
  40-Khulna  |   .2006881   .2482312     0.81   0.419    -.2858361    .6872123
45-Mymens~h  |  -.0887184   .2193057    -0.40   0.686    -.5185496    .3411129
50-Rajshahi  |   .8956544    .239844     3.73   0.000     .4255688     1.36574
 55-Rangpur  |   .1523661   .2314836     0.66   0.510    -.3013334    .6060656
  60-Sylhet  |  -.2071509   .2167127    -0.96   0.339    -.6318999    .2175981
             |
       _cons |   .0242788   .6706633     0.04   0.971    -1.290197    1.338755
-------------+----------------------------------------------------------------
cons         |
         age |   .1077984    .035365     3.05   0.002     .0384842    .1771126
             |
 c.age#c.age |  -.0023213    .000431    -5.39   0.000     -.003166   -.0014766
             |
       urban |   .1135836    .136159     0.83   0.404     -.153283    .3804503
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.361675   .2563565   -13.11   0.000    -3.864124   -2.859225
   Male#0#1  |  -2.661018   .2086594   -12.75   0.000    -3.069983   -2.252053
   Male#1#0  |  -.9246417    .424173    -2.18   0.029    -1.756006   -.0932778
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .2583761   .1306346     1.98   0.048      .002337    .5144153
       depen |   .1199656     .36018     0.33   0.739    -.5859743    .8259054
     oth_pub |  -1.121443   .5528201    -2.03   0.043     -2.20495   -.0379352
             |
        male#|
  educ_level |
     Male#1  |  -.4192166   .1577545    -2.66   0.008    -.7284096   -.1100235
     Male#2  |  -.1580613   .1756637    -0.90   0.368    -.5023557    .1862332
     Male#3  |          0  (omitted)
             |
    atschool |   -27.0227   .2497993  -108.18   0.000     -27.5123    -26.5331
             |
      region |
20-Chitta~g  |  -.9059147   .2230834    -4.06   0.000     -1.34315   -.4686792
   30-Dhaka  |  -.4408016   .2216405    -1.99   0.047    -.8752091   -.0063942
  40-Khulna  |  -.0416523   .2387103    -0.17   0.861    -.5095158    .4262112
45-Mymens~h  |  -.5855359   .2182149    -2.68   0.007    -1.013229   -.1578426
50-Rajshahi  |     .33114   .2412023     1.37   0.170    -.1416078    .8038879
 55-Rangpur  |  -.5610502   .2390424    -2.35   0.019    -1.029565   -.0925358
  60-Sylhet  |  -.2011302   .2082126    -0.97   0.334    -.6092193    .2069589
             |
       _cons |    1.60371   .7161129     2.24   0.025      .200154    3.007265
-------------+----------------------------------------------------------------
serv         |
         age |   .1530024   .0413734     3.70   0.000      .071912    .2340928
             |
 c.age#c.age |  -.0023373   .0004892    -4.78   0.000    -.0032961   -.0013784
             |
       urban |   .5466593    .161455     3.39   0.001     .2302133    .8631053
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.599008   .3297605    -7.88   0.000    -3.245327   -1.952689
   Male#0#1  |  -2.430419   .2700966    -9.00   0.000    -2.959798   -1.901039
   Male#1#0  |  -.9573857   .5957286    -1.61   0.108    -2.124992    .2102208
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0364087   .1648319    -0.22   0.825    -.3594734    .2866559
       depen |  -.2955828   .4422433    -0.67   0.504    -1.162364    .5711982
     oth_pub |  -.1171845   .5251618    -0.22   0.823    -1.146483    .9121138
             |
        male#|
  educ_level |
     Male#1  |  -.7928709   .1905051    -4.16   0.000    -1.166254   -.4194877
     Male#2  |   -.225218   .2102776    -1.07   0.284    -.6373545    .1869184
     Male#3  |          0  (omitted)
             |
    atschool |  -26.65381   .2929161   -90.99   0.000    -27.22792   -26.07971
             |
      region |
20-Chitta~g  |  -.4274798   .2761048    -1.55   0.122    -.9686353    .1136757
   30-Dhaka  |  -.2195089   .2678263    -0.82   0.412    -.7444387     .305421
  40-Khulna  |  -.2249937   .3094749    -0.73   0.467    -.8315534    .3815661
45-Mymens~h  |  -.6659822   .2939027    -2.27   0.023    -1.242021   -.0899434
50-Rajshahi  |   .2187845   .3034562     0.72   0.471    -.3759787    .8135478
 55-Rangpur  |  -.3156144   .2931035    -1.08   0.282    -.8900868    .2588579
  60-Sylhet  |   .3702805   .2499404     1.48   0.138    -.1195936    .8601546
             |
       _cons |  -1.009124   .8750649    -1.15   0.249     -2.72422    .7059718
-------------+----------------------------------------------------------------
transp       |
         age |   .1883278   .0375334     5.02   0.000     .1147636     .261892
             |
 c.age#c.age |  -.0032114   .0004506    -7.13   0.000    -.0040945   -.0023283
             |
       urban |   .1700136   .1328825     1.28   0.201    -.0904314    .4304586
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.645867   .2844441   -12.82   0.000    -4.203367   -3.088367
   Male#0#1  |   -2.72203   .2105798   -12.93   0.000    -3.134759   -2.309301
   Male#1#0  |  -1.345561    .473721    -2.84   0.005    -2.274038   -.4170853
   Male#1#1  |          0  (omitted)
             |
  remitt_any |    .176476   .1308396     1.35   0.177    -.0799648    .4329169
       depen |   .3791809   .3631037     1.04   0.296    -.3324893    1.090851
     oth_pub |   -.173898   .4586295    -0.38   0.705    -1.072795    .7249992
             |
        male#|
  educ_level |
     Male#1  |  -.3162628   .1594643    -1.98   0.047     -.628807   -.0037186
     Male#2  |  -.0299748    .175188    -0.17   0.864     -.373337    .3133874
     Male#3  |          0  (omitted)
             |
    atschool |  -26.36431   .2533636  -104.06   0.000    -26.86089   -25.86773
             |
      region |
20-Chitta~g  |    .128357   .2187491     0.59   0.557    -.3003833    .5570973
   30-Dhaka  |   .1323315   .2218442     0.60   0.551    -.3024751    .5671381
  40-Khulna  |   .5045571   .2416346     2.09   0.037     .0309621    .9781521
45-Mymens~h  |  -.2434734   .2275592    -1.07   0.285    -.6894812    .2025344
50-Rajshahi  |   .8167318   .2468847     3.31   0.001     .3328465    1.300617
 55-Rangpur  |  -.0748462   .2420402    -0.31   0.757    -.5492364    .3995439
  60-Sylhet  |  -.2293824   .2257186    -1.02   0.310    -.6717827     .213018
             |
       _cons |  -.4996545   .7681894    -0.65   0.515    -2.005278    1.005969
-------------+----------------------------------------------------------------
fin          |
         age |   .2228255   .0359398     6.20   0.000     .1523847    .2932662
             |
 c.age#c.age |  -.0031064   .0004259    -7.29   0.000    -.0039413   -.0022716
             |
       urban |   .2133045   .1407976     1.51   0.130    -.0626536    .4892627
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.859843   .2747457   -10.41   0.000    -3.398334   -2.321351
   Male#0#1  |  -2.469957   .2292642   -10.77   0.000    -2.919307   -2.020608
   Male#1#0  |  -1.215097   .5028388    -2.42   0.016    -2.200642   -.2295507
   Male#1#1  |          0  (omitted)
             |
  remitt_any |  -.0050676   .1359767    -0.04   0.970    -.2715769    .2614418
       depen |    .034927   .3751839     0.09   0.926    -.7004199    .7702739
     oth_pub |   -1.71675   .8340188    -2.06   0.040    -3.351397   -.0821031
             |
        male#|
  educ_level |
     Male#1  |  -.7957036   .1648662    -4.83   0.000    -1.118836   -.4725717
     Male#2  |  -.2807654   .1834807    -1.53   0.126    -.6403809    .0788502
     Male#3  |          0  (omitted)
             |
    atschool |  -2.733638   1.032012    -2.65   0.008    -4.756346    -.710931
             |
      region |
20-Chitta~g  |   .0534297   .2719773     0.20   0.844    -.4796359    .5864954
   30-Dhaka  |   .6471014   .2576054     2.51   0.012     .1422041    1.151999
  40-Khulna  |   1.068396   .2739922     3.90   0.000     .5313814    1.605411
45-Mymens~h  |   .6029572    .257136     2.34   0.019     .0989799    1.106935
50-Rajshahi  |   1.207216    .279455     4.32   0.000     .6594941    1.754938
 55-Rangpur  |   1.050519   .2652333     3.96   0.000     .5306711    1.570366
  60-Sylhet  |   .7420267   .2528376     2.93   0.003     .2464741    1.237579
             |
       _cons |  -2.535911   .7669054    -3.31   0.001    -4.039018   -1.032804
------------------------------------------------------------------------------
0 1 2 3 4 5 6 7

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  occupation |     24,254    1.728581    2.346515          0          7

note: 1.male#1.h_head#1.married omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
Iteration 0:  Log pseudolikelihood =  -58304892  
Iteration 1:  Log pseudolikelihood =  -46625126  
Iteration 2:  Log pseudolikelihood =  -45614124  
Iteration 3:  Log pseudolikelihood =  -45571012  
Iteration 4:  Log pseudolikelihood =  -45570874  
Iteration 5:  Log pseudolikelihood =  -45570874  

Multinomial logistic regression                       Number of obs  =  11,931
                                                      Wald chi2(140) = 3960.41
                                                      Prob > chi2    =  0.0000
Log pseudolikelihood = -45570874                      Pseudo R2      =  0.2184

------------------------------------------------------------------------------
             |               Robust
  occupation | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
-------------+----------------------------------------------------------------
inactive     |  (base outcome)
-------------+----------------------------------------------------------------
unempl       |
         age |    .260806   .0780079     3.34   0.001     .1079134    .4136987
             |
 c.age#c.age |   -.004176    .001329    -3.14   0.002    -.0067808   -.0015711
             |
       urban |  -.0918298   .1660989    -0.55   0.580    -.4173777    .2337181
             |
 male#h_head#|
     married |
   Male#0#0  |   .4990563   .6385542     0.78   0.434     -.752487      1.7506
   Male#0#1  |  -.4447111   .6643863    -0.67   0.503    -1.746884    .8574622
   Male#1#0  |   .2980912   1.014766     0.29   0.769    -1.690814    2.286997
   Male#1#1  |          0  (omitted)
             |
  remitt_any |    .301997    .153044     1.97   0.048     .0020364    .6019577
       depen |  -1.670594   .4948618    -3.38   0.001    -2.640505   -.7006829
     oth_pub |   .2551066   .2257476     1.13   0.258    -.1873506    .6975638
             |
        male#|
  educ_level |
     Male#4  |  -1.155902   .2183426    -5.29   0.000    -1.583846   -.7279586
     Male#5  |  -1.061038   .3228741    -3.29   0.001    -1.693859   -.4282161
     Male#6  |  -.6317264   .4605356    -1.37   0.170     -1.53436    .2709069
     Male#7  |          0  (omitted)
             |
    atschool |  -1.661547   .2054454    -8.09   0.000    -2.064213   -1.258881
             |
      region |
20-Chitta~g  |  -.2486832   .2674837    -0.93   0.353    -.7729416    .2755752
   30-Dhaka  |   .0086682   .2489009     0.03   0.972    -.4791686     .496505
  40-Khulna  |  -.2552513   .2778237    -0.92   0.358    -.7997758    .2892732
45-Mymens~h  |  -.0514433    .280624    -0.18   0.855    -.6014561    .4985696
50-Rajshahi  |  -.3131958   .3039905    -1.03   0.303    -.9090063    .2826146
 55-Rangpur  |  -.2578165   .2829979    -0.91   0.362    -.8124822    .2968493
  60-Sylhet  |  -.1515398   .2881168    -0.53   0.599    -.7162383    .4131587
             |
       _cons |  -4.375395   1.049209    -4.17   0.000    -6.431806   -2.318984
-------------+----------------------------------------------------------------
agric        |
         age |   .2289705   .0292422     7.83   0.000     .1716569    .2862841
             |
 c.age#c.age |  -.0030998   .0003571    -8.68   0.000    -.0037997   -.0023999
             |
       urban |  -1.495609    .106127   -14.09   0.000    -1.703614   -1.287604
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.829728   .2146688   -13.18   0.000    -3.250471   -2.408985
   Male#0#1  |   -2.31318   .1766009   -13.10   0.000    -2.659311   -1.967048
   Male#1#0  |  -.1575308   .4115243    -0.38   0.702    -.9641036    .6490421
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .1530503   .0952041     1.61   0.108    -.0335462    .3396469
       depen |   .3077136   .2695178     1.14   0.254    -.2205317    .8359588
     oth_pub |  -.5526217   .2002189    -2.76   0.006    -.9450436   -.1601999
             |
        male#|
  educ_level |
     Male#4  |   .4389481   .1400719     3.13   0.002     .1644123    .7134839
     Male#5  |   .1491332    .187878     0.79   0.427     -.219101    .5173674
     Male#6  |   1.267271   .3506839     3.61   0.000     .5799434    1.954599
     Male#7  |          0  (omitted)
             |
    atschool |  -1.839474   .1654646   -11.12   0.000    -2.163779   -1.515169
             |
      region |
20-Chitta~g  |  -.7299382   .1640601    -4.45   0.000     -1.05149   -.4083862
   30-Dhaka  |  -1.073106   .1745063    -6.15   0.000    -1.415132   -.7310796
  40-Khulna  |   .1079397   .1584959     0.68   0.496    -.2027064    .4185859
45-Mymens~h  |   -.163435   .1698768    -0.96   0.336    -.4963874    .1695175
50-Rajshahi  |   .5089773   .1701394     2.99   0.003     .1755102    .8424444
 55-Rangpur  |   .0659462   .1592162     0.41   0.679    -.2461118    .3780042
  60-Sylhet  |  -.1505373   .1773246    -0.85   0.396    -.4980872    .1970125
             |
       _cons |  -1.633939   .6349113    -2.57   0.010    -2.878342   -.3895359
-------------+----------------------------------------------------------------
ind          |
         age |   .2219768    .028197     7.87   0.000     .1667117     .277242
             |
 c.age#c.age |  -.0037151   .0003574   -10.39   0.000    -.0044156   -.0030146
             |
       urban |   .1876774   .0930822     2.02   0.044     .0052396    .3701151
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.988631   .2020943   -14.79   0.000    -3.384728   -2.592533
   Male#0#1  |  -2.356309   .1763782   -13.36   0.000    -2.702004   -2.010614
   Male#1#0  |   -1.03165   .4035715    -2.56   0.011    -1.822636   -.2406648
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .1142205    .091427     1.25   0.212    -.0649732    .2934143
       depen |  -.5936631   .2635593    -2.25   0.024     -1.11023   -.0770963
     oth_pub |  -1.021104    .212028    -4.82   0.000    -1.436672   -.6055372
             |
        male#|
  educ_level |
     Male#4  |   .0255115    .128286     0.20   0.842    -.2259243    .2769474
     Male#5  |    .033188   .1683594     0.20   0.844    -.2967904    .3631663
     Male#6  |   .0852595   .5593089     0.15   0.879    -1.010966    1.181485
     Male#7  |          0  (omitted)
             |
    atschool |  -2.500961   .1620606   -15.43   0.000    -2.818593   -2.183328
             |
      region |
20-Chitta~g  |  -.1663984    .152749    -1.09   0.276    -.4657809     .132984
   30-Dhaka  |   .3452483   .1488755     2.32   0.020     .0534577    .6370389
  40-Khulna  |  -.3196168   .1712543    -1.87   0.062    -.6552691    .0160355
45-Mymens~h  |   .2434386   .1689308     1.44   0.150    -.0876596    .5745369
50-Rajshahi  |   .1995792   .1764048     1.13   0.258    -.1461678    .5453262
 55-Rangpur  |  -.1102548   .1704631    -0.65   0.518    -.4443563    .2238467
  60-Sylhet  |   -.227604   .1823205    -1.25   0.212    -.5849456    .1297377
             |
       _cons |  -.5107565   .5953467    -0.86   0.391    -1.677615    .6561016
-------------+----------------------------------------------------------------
cons         |
         age |   .2008273   .0409375     4.91   0.000     .1205913    .2810633
             |
 c.age#c.age |  -.0034819   .0005231    -6.66   0.000    -.0045071   -.0024567
             |
       urban |  -.0666272   .1230772    -0.54   0.588    -.3078541    .1745998
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.046076   .2605191   -11.69   0.000    -3.556684   -2.535468
   Male#0#1  |  -2.700219   .2162623   -12.49   0.000    -3.124085   -2.276352
   Male#1#0  |  -1.351224   .5912909    -2.29   0.022    -2.510133   -.1923149
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .2737083    .127168     2.15   0.031     .0244637    .5229529
       depen |  -.4093943   .3782779    -1.08   0.279    -1.150805    .3320168
     oth_pub |  -1.033736   .4431096    -2.33   0.020    -1.902215   -.1652575
             |
        male#|
  educ_level |
     Male#4  |   .6136751   .2126522     2.89   0.004     .1968844    1.030466
     Male#5  |  -.3706936   .2940971    -1.26   0.208    -.9471134    .2057262
     Male#6  |   1.015102   .6647447     1.53   0.127    -.2877736    2.317978
     Male#7  |          0  (omitted)
             |
    atschool |  -3.154256   .2742851   -11.50   0.000    -3.691845   -2.616667
             |
      region |
20-Chitta~g  |  -.8370112   .2088626    -4.01   0.000    -1.246374   -.4276481
   30-Dhaka  |   -.748187   .2085235    -3.59   0.000    -1.156886   -.3394884
  40-Khulna  |  -.2943992   .2195179    -1.34   0.180    -.7246464    .1358481
45-Mymens~h  |  -.7096147   .2466868    -2.88   0.004    -1.193112   -.2261175
50-Rajshahi  |   .2781914   .2221669     1.25   0.211    -.1572478    .7136306
 55-Rangpur  |  -.3472856   .2258982    -1.54   0.124    -.7900379    .0954667
  60-Sylhet  |  -.1414985   .2277421    -0.62   0.534    -.5878648    .3048679
             |
       _cons |  -1.098686   .8527678    -1.29   0.198     -2.77008     .572708
-------------+----------------------------------------------------------------
serv         |
         age |   .2851207   .0305845     9.32   0.000     .2251762    .3450652
             |
 c.age#c.age |  -.0039991   .0003709   -10.78   0.000    -.0047262   -.0032721
             |
       urban |  -.0332482   .0970901    -0.34   0.732    -.2235412    .1570448
             |
 male#h_head#|
     married |
   Male#0#0  |  -2.915642   .2081557   -14.01   0.000     -3.32362   -2.507665
   Male#0#1  |  -2.317582   .1770405   -13.09   0.000    -2.664575   -1.970589
   Male#1#0  |  -.7131991   .3940295    -1.81   0.070    -1.485483    .0590845
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .3117181   .0950081     3.28   0.001     .1255056    .4979306
       depen |   -.636848   .2813082    -2.26   0.024    -1.188202    -.085494
     oth_pub |  -.1182526   .1676629    -0.71   0.481    -.4468658    .2103607
             |
        male#|
  educ_level |
     Male#4  |  -1.335454   .1245121   -10.73   0.000    -1.579493   -1.091415
     Male#5  |  -.6793982   .1626766    -4.18   0.000    -.9982384    -.360558
     Male#6  |  -.6099248   .6022919    -1.01   0.311    -1.790395    .5705456
     Male#7  |          0  (omitted)
             |
    atschool |  -2.318181   .1764647   -13.14   0.000    -2.664046   -1.972317
             |
      region |
20-Chitta~g  |  -.4296334   .1582141    -2.72   0.007    -.7397272   -.1195395
   30-Dhaka  |  -.7302207   .1611618    -4.53   0.000    -1.046092   -.4143494
  40-Khulna  |  -.2202742   .1623537    -1.36   0.175    -.5384817    .0979333
45-Mymens~h  |  -.3080482   .1730221    -1.78   0.075    -.6471652    .0310689
50-Rajshahi  |  -.0612635   .1701858    -0.36   0.719    -.3948215    .2722944
 55-Rangpur  |  -.3737103    .169772    -2.20   0.028    -.7064572   -.0409634
  60-Sylhet  |   .2978901   .1705451     1.75   0.081    -.0363721    .6321523
             |
       _cons |  -1.312025   .6488787    -2.02   0.043    -2.583804   -.0402465
-------------+----------------------------------------------------------------
transp       |
         age |   .3089097   .0430013     7.18   0.000     .2246288    .3931906
             |
 c.age#c.age |  -.0049344   .0005528    -8.93   0.000    -.0060179   -.0038508
             |
       urban |     .03351   .1275084     0.26   0.793    -.2164018    .2834218
             |
 male#h_head#|
     married |
   Male#0#0  |  -3.410829   .2764432   -12.34   0.000    -3.952648    -2.86901
   Male#0#1  |  -2.855501   .2095078   -13.63   0.000    -3.266129   -2.444874
   Male#1#0  |  -1.446072   .6501252    -2.22   0.026    -2.720294   -.1718501
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .4168485   .1300249     3.21   0.001     .1620044    .6716926
       depen |   -.410227   .3687429    -1.11   0.266     -1.13295    .3124958
     oth_pub |  -1.107897   .3781673    -2.93   0.003    -1.849092   -.3667031
             |
        male#|
  educ_level |
     Male#4  |   1.166292   .2413492     4.83   0.000     .6932566    1.639328
     Male#5  |   .3309267   .3114616     1.06   0.288    -.2795268    .9413802
     Male#6  |   1.922474   1.076688     1.79   0.074    -.1877951    4.032743
     Male#7  |          0  (omitted)
             |
    atschool |  -3.050442   .3575435    -8.53   0.000    -3.751215    -2.34967
             |
      region |
20-Chitta~g  |  -.4899149    .213812    -2.29   0.022    -.9089789    -.070851
   30-Dhaka  |  -.4987021   .2072748    -2.41   0.016    -.9049533   -.0924509
  40-Khulna  |  -.1922243   .2213907    -0.87   0.385    -.6261421    .2416935
45-Mymens~h  |   -.379564   .2372461    -1.60   0.110    -.8445579    .0854299
50-Rajshahi  |   .1323111   .2304581     0.57   0.566    -.3193786    .5840008
 55-Rangpur  |  -.7240279   .2437016    -2.97   0.003    -1.201674   -.2463815
  60-Sylhet  |  -.3804477    .247118    -1.54   0.124    -.8647901    .1038946
             |
       _cons |  -3.465597   .8839098    -3.92   0.000    -5.198028   -1.733165
-------------+----------------------------------------------------------------
fin          |
         age |    .336403   .0311278    10.81   0.000     .2753937    .3974123
             |
 c.age#c.age |  -.0046634   .0003892   -11.98   0.000    -.0054261   -.0039006
             |
       urban |   .0873679   .0975449     0.90   0.370    -.1038166    .2785525
             |
 male#h_head#|
     married |
   Male#0#0  |   -2.61761   .2070182   -12.64   0.000    -3.023358   -2.211862
   Male#0#1  |  -2.217561   .1794542   -12.36   0.000    -2.569285   -1.865837
   Male#1#0  |  -.4815576   .3971499    -1.21   0.225    -1.259957    .2968418
   Male#1#1  |          0  (omitted)
             |
  remitt_any |   .0792963   .1006493     0.79   0.431    -.1179728    .2765653
       depen |  -.0515022   .2816267    -0.18   0.855    -.6034804    .5004761
     oth_pub |  -.6317471   .2012206    -3.14   0.002    -1.026132   -.2373619
             |
        male#|
  educ_level |
     Male#4  |  -.4827202   .1308493    -3.69   0.000    -.7391802   -.2262602
     Male#5  |  -.2548981   .1748116    -1.46   0.145    -.5975226    .0877264
     Male#6  |  -.2588059   .6563376    -0.39   0.693    -1.545204    1.027592
     Male#7  |          0  (omitted)
             |
    atschool |  -1.823714    .193394    -9.43   0.000    -2.202759   -1.444668
             |
      region |
20-Chitta~g  |  -.3437296    .173574    -1.98   0.048    -.6839283   -.0035308
   30-Dhaka  |   .0313535   .1649175     0.19   0.849     -.291879    .3545859
  40-Khulna  |   .4114125   .1704034     2.41   0.016     .0774279    .7453971
45-Mymens~h  |   .2278287   .1783046     1.28   0.201    -.1216419    .5772993
50-Rajshahi  |   .3163253   .1837874     1.72   0.085    -.0438914     .676542
 55-Rangpur  |   .0060024   .1830177     0.03   0.974    -.3527058    .3647106
  60-Sylhet  |   .4734658   .1807865     2.62   0.009     .1191307    .8278009
             |
       _cons |  -3.480771   .6545108    -5.32   0.000    -4.763588   -2.197953
------------------------------------------------------------------------------
0 1 2 3 4 5 6 7

. 
. *============================================================================
> =
. *                                                                            
>    END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 04 - Modeling labor incomes by education skills and economic sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 08, 2021
. *                          Apr 19, 2022 - Included estimations saving (Kelly 
> Y. Montoya)
. *                          Jul 25, 2022 - Change loc numsector (only 3 sector
> s). KYM
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * y vars 
. loc depvar "ln_lai_m"

. 
. * x vars 
. loc ols_rhs           c.age##c.age urban ib0.male##ib0.h_head

. loc ols_rhs `ols_rhs' ib0.male#ibn.educ_lev salaried public_job

. loc ols_rhs `ols_rhs' ib1.region

. 
. levelsof industry6, loc(numb_sectors)
1 2 3 4 5 6

. levelsof skill, loc(numb_skills)
1 2

. 
. foreach sector of numlist `numb_sectors' {
  2. 
.         foreach skill of numlist `numb_skills' {
  3.         
.                 * Parameters
.                 *if "$use_saved_parameters" == "no" {
.                         regress `depvar' `ols_rhs' [pw = wgt] if industry6 ==
>  `sector' & skill == `skill'   & sample == 1
  4.                         /*estimates save "${data}\models/${country}_${year
> }\Income_sector_`sector'_skill_`skill'.dta", replace
>                 }
>                 else {
>                         estimates use "${data}\models/${country}_${year}\Inco
> me_sector_`sector'_skill_`skill'.dta"
>                         estimates esample: `depvar' `ols_rhs' [pw = pondera] 
> if `numsector' == `sector' & skill == `skill'   & sample==1
>                 }*/
.         
.                 mat b_`sector'_`skill' = e(b)
  5.                 scalar sigma_`sector'_`skill' = e(rmse)  
  6.         }
  7. }
(sum of wgt is 7,239,536.4059753)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =      2,417
                                                F(14, 2402)       =      10.45
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0631
                                                Root MSE          =     1.1037

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0366647    .013929     2.63   0.009     .0093506    .0639788
             |
 c.age#c.age |  -.0005379   .0001605    -3.35   0.001    -.0008527   -.0002232
             |
       urban |   .1200495   .0819028     1.47   0.143     -.040558    .2806569
             |
        male |
       Male  |          0  (omitted)
    1.h_head |    .153309   .0896955     1.71   0.088    -.0225796    .3291975
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |    -.18997   .0645043    -2.95   0.003    -.3164599   -.0634801
     Male#2  |  -.2189485   .0798475    -2.74   0.006    -.3755256   -.0623715
     Male#3  |          0  (omitted)
             |
    salaried |   .2756898   .0547871     5.03   0.000     .1682549    .3831247
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |  -.3175632   .1128704    -2.81   0.005    -.5388967   -.0962298
   30-Dhaka  |  -.1378089   .1281732    -1.08   0.282    -.3891504    .1135326
  40-Khulna  |    .070418    .095409     0.74   0.461    -.1166744    .2575104
45-Mymens~h  |  -.1125737   .1025928    -1.10   0.273    -.3137533     .088606
50-Rajshahi  |   .1259943   .0996409     1.26   0.206    -.0693968    .3213854
 55-Rangpur  |  -.2804986     .10024    -2.80   0.005    -.4770645   -.0839328
  60-Sylhet  |  -.4585137   .1002137    -4.58   0.000     -.655028   -.2619994
             |
       _cons |   1.202417   .2723926     4.41   0.000     .6682685    1.736566
------------------------------------------------------------------------------
(sum of wgt is 4,081,668.3658142)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =      1,375
                                                F(15, 1359)       =       6.41
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0553
                                                Root MSE          =     1.6074

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .1207269   .0242076     4.99   0.000     .0732386    .1682152
             |
 c.age#c.age |  -.0014245   .0002979    -4.78   0.000     -.002009     -.00084
             |
       urban |   .0867514   .1317247     0.66   0.510    -.1716543    .3451571
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0616045   .1242097     0.50   0.620    -.1820592    .3052681
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.3080463   .1387102    -2.22   0.027    -.5801555    -.035937
     Male#5  |  -.2921074   .2041529    -1.43   0.153    -.6925964    .1083816
     Male#6  |  -.3981919   .4728082    -0.84   0.400    -1.325705    .5293211
     Male#7  |          0  (omitted)
             |
    salaried |    .333875   .0867448     3.85   0.000     .1637068    .5040432
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |   .1882091   .3222979     0.58   0.559    -.4440462    .8204644
   30-Dhaka  |   .3387226   .3452735     0.98   0.327    -.3386043     1.01605
  40-Khulna  |    .595003    .299402     1.99   0.047     .0076627    1.182343
45-Mymens~h  |   .2810408   .3146539     0.89   0.372    -.3362193     .898301
50-Rajshahi  |   .5282031   .3016728     1.75   0.080    -.0635919    1.119998
 55-Rangpur  |   .2336719   .3069558     0.76   0.447    -.3684868    .8358306
  60-Sylhet  |  -.1162098   .3223683    -0.36   0.719    -.7486032    .5161837
             |
       _cons |  -.8211559   .5030464    -1.63   0.103    -1.807987    .1656758
------------------------------------------------------------------------------
(sum of wgt is 3,252,305.9173584)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =      1,146
                                                F(14, 1131)       =       6.61
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1037
                                                Root MSE          =     .64296

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0476642   .0154744     3.08   0.002     .0173025    .0780258
             |
 c.age#c.age |   -.000547   .0002056    -2.66   0.008    -.0009504   -.0001435
             |
       urban |   .0832807   .0461273     1.81   0.071     -.007224    .1737855
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0257936   .0699503     0.37   0.712    -.1114534    .1630405
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.1432151    .054361    -2.63   0.009    -.2498749   -.0365553
     Male#2  |  -.0892149   .0645811    -1.38   0.167    -.2159271    .0374973
     Male#3  |          0  (omitted)
             |
    salaried |  -.0055481   .0829167    -0.07   0.947    -.1682359    .1571398
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |   -.116953    .092279    -1.27   0.205    -.2980103    .0641043
   30-Dhaka  |   .1156613   .0691613     1.67   0.095    -.0200376    .2513602
  40-Khulna  |  -.0126291   .0848839    -0.15   0.882    -.1791767    .1539185
45-Mymens~h  |  -.0272273   .0742304    -0.37   0.714    -.1728721    .1184175
50-Rajshahi  |  -.0867444   .0770646    -1.13   0.261    -.2379501    .0644613
 55-Rangpur  |  -.3168738   .1009993    -3.14   0.002    -.5150409   -.1187067
  60-Sylhet  |  -.4137495   .0930675    -4.45   0.000    -.5963539   -.2311451
             |
       _cons |   1.337211     .24734     5.41   0.000     .8519146    1.822508
------------------------------------------------------------------------------
(sum of wgt is 5,469,331.1793518)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =      1,774
                                                F(15, 1758)       =      25.83
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2564
                                                Root MSE          =     .73766

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0651802   .0124931     5.22   0.000     .0406773    .0896831
             |
 c.age#c.age |  -.0006337   .0001763    -3.60   0.000    -.0009794    -.000288
             |
       urban |    .223139    .044102     5.06   0.000      .136641     .309637
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.0784629   .0598432    -1.31   0.190    -.1958342    .0389084
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |   -.570916   .0725474    -7.87   0.000    -.7132041   -.4286278
     Male#5  |  -.2973419   .0887445    -3.35   0.001    -.4713977   -.1232861
     Male#6  |  -.5002123   .2518819    -1.99   0.047    -.9942319   -.0061927
     Male#7  |          0  (omitted)
             |
    salaried |  -.1170775   .0887793    -1.32   0.187    -.2912017    .0570466
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |   .0990589   .0714919     1.39   0.166    -.0411591    .2392769
   30-Dhaka  |   .3204367   .0533101     6.01   0.000     .2158789    .4249945
  40-Khulna  |  -.1392488   .0634377    -2.20   0.028      -.26367   -.0148275
45-Mymens~h  |   .1671098   .0605579     2.76   0.006     .0483368    .2858827
50-Rajshahi  |  -.0249516   .0654761    -0.38   0.703    -.1533708    .1034676
 55-Rangpur  |   -.122762   .0707538    -1.74   0.083    -.2615323    .0160084
  60-Sylhet  |  -.3824515   .0833969    -4.59   0.000     -.546019   -.2188839
             |
       _cons |   1.536169   .2423726     6.34   0.000       1.0608    2.011538
------------------------------------------------------------------------------
(sum of wgt is 2,248,568.9539185)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =        918
                                                F(14, 903)        =       4.31
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1006
                                                Root MSE          =     .56403

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |    .042099   .0147626     2.85   0.004     .0131261    .0710719
             |
 c.age#c.age |  -.0005341   .0001805    -2.96   0.003    -.0008883   -.0001799
             |
       urban |   .0918014   .0449433     2.04   0.041      .003596    .1800068
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .1007066   .0701403     1.44   0.151    -.0369504    .2383636
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.0664348   .0500201    -1.33   0.184     -.164604    .0317345
     Male#2  |  -.0049937   .0620877    -0.08   0.936    -.1268468    .1168593
     Male#3  |          0  (omitted)
             |
    salaried |  -.3074687   .3378331    -0.91   0.363    -.9704981    .3555608
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |  -.0018498   .0902776    -0.02   0.984    -.1790281    .1753285
   30-Dhaka  |    .016249   .0707198     0.23   0.818    -.1225454    .1550434
  40-Khulna  |   -.113168   .0815715    -1.39   0.166    -.2732598    .0469239
45-Mymens~h  |  -.1770576   .0779211    -2.27   0.023    -.3299852     -.02413
50-Rajshahi  |  -.1579257    .079584    -1.98   0.048    -.3141169   -.0017346
 55-Rangpur  |   -.207838   .0855619    -2.43   0.015    -.3757613   -.0399147
  60-Sylhet  |  -.3161573   .0897057    -3.52   0.000    -.4922133   -.1401013
             |
       _cons |   1.685395   .4225551     3.99   0.000     .8560901    2.514699
------------------------------------------------------------------------------
(sum of wgt is 1,492,822.2244873)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =        573
                                                F(15, 557)        =      15.61
                                                Prob > F          =     0.0000
                                                R-squared         =     0.4772
                                                Root MSE          =     .69471

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0603671   .0218588     2.76   0.006     .0174313     .103303
             |
 c.age#c.age |  -.0005961   .0003038    -1.96   0.050    -.0011928    6.65e-07
             |
       urban |   .0630431   .0715845     0.88   0.379    -.0775655    .2036517
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0621715   .0778491     0.80   0.425    -.0907422    .2150851
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.9015515   .1783142    -5.06   0.000    -1.251802    -.551301
     Male#5  |  -.9801187   .2059277    -4.76   0.000    -1.384609   -.5756288
     Male#6  |  -.8834438   .2043819    -4.32   0.000    -1.284897   -.4819904
     Male#7  |          0  (omitted)
             |
    salaried |  -1.026243   .2005945    -5.12   0.000    -1.420257   -.6322287
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |    .103727   .0892405     1.16   0.246    -.0715621    .2790161
   30-Dhaka  |   .1406571   .1082698     1.30   0.194    -.0720099     .353324
  40-Khulna  |  -.0955582   .0874556    -1.09   0.275    -.2673412    .0762249
45-Mymens~h  |   -.144372   .1869425    -0.77   0.440    -.5115704    .2228264
50-Rajshahi  |  -.1403955    .103333    -1.36   0.175    -.3433655    .0625744
 55-Rangpur  |   -.073222   .0966706    -0.76   0.449    -.2631055    .1166616
  60-Sylhet  |  -.2620528   .1433976    -1.83   0.068     -.543719    .0196134
             |
       _cons |   2.811451   .4934839     5.70   0.000     1.842134    3.780768
------------------------------------------------------------------------------
(sum of wgt is 995,189.450134277)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =        451
                                                F(15, 435)        =       5.23
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1625
                                                Root MSE          =     .64081

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0692579   .0198835     3.48   0.001     .0301782    .1083375
             |
 c.age#c.age |  -.0007171   .0002356    -3.04   0.002    -.0011802   -.0002541
             |
       urban |   .0721185   .0780531     0.92   0.356    -.0812896    .2255267
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.1879136   .1219611    -1.54   0.124    -.4276199    .0517927
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.3346183   .1292773    -2.59   0.010    -.5887041   -.0805325
     Male#2  |  -.1082871   .0928182    -1.17   0.244     -.290715    .0741407
     Male#3  |          0  (omitted)
             |
    salaried |   .0437065   .1090534     0.40   0.689    -.1706306    .2580435
  public_job |   .0884191   .2542345     0.35   0.728    -.4112617    .5880999
             |
      region |
20-Chitta~g  |   .1404902   .1517785     0.93   0.355    -.1578201    .4388006
   30-Dhaka  |   .4382788    .146598     2.99   0.003     .1501503    .7264072
  40-Khulna  |   .2935001   .1252112     2.34   0.020      .047406    .5395942
45-Mymens~h  |  -.0586928   .1346568    -0.44   0.663    -.3233516    .2059661
50-Rajshahi  |   .3166543   .1392753     2.27   0.023     .0429181    .5903906
 55-Rangpur  |  -.0347186   .1345961    -0.26   0.797    -.2992582    .2298209
  60-Sylhet  |  -.0628003   .1330873    -0.47   0.637    -.3243743    .1987738
             |
       _cons |   .7311158    .362136     2.02   0.044      .019362     1.44287
------------------------------------------------------------------------------
(sum of wgt is 4,146,150.2107239)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.

Linear regression                               Number of obs     =      1,904
                                                F(16, 1887)       =      37.71
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2651
                                                Root MSE          =     .77182

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0805095   .0168046     4.79   0.000      .047552    .1134669
             |
 c.age#c.age |  -.0007962   .0002106    -3.78   0.000    -.0012092   -.0003831
             |
       urban |   .2926189   .0507909     5.76   0.000     .1930067    .3922312
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   -.071219   .0668693    -1.07   0.287    -.2023646    .0599267
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.3517807   .0548377    -6.41   0.000    -.4593297   -.2442318
     Male#5  |  -.3052998   .0762533    -4.00   0.000    -.4548493   -.1557502
     Male#6  |  -.2778923   .1334414    -2.08   0.037    -.5396006    -.016184
     Male#7  |          0  (omitted)
             |
    salaried |  -.0072707   .1175606    -0.06   0.951    -.2378331    .2232916
  public_job |   .3354002   .0505272     6.64   0.000     .2363052    .4344952
             |
      region |
20-Chitta~g  |   .0988724   .0638654     1.55   0.122    -.0263819    .2241266
   30-Dhaka  |   .2164842   .0812613     2.66   0.008     .0571127    .3758557
  40-Khulna  |   .0641704   .0659957     0.97   0.331    -.0652618    .1936025
45-Mymens~h  |    .035646   .0680166     0.52   0.600    -.0977496    .1690416
50-Rajshahi  |  -.0234169   .0706754    -0.33   0.740    -.1620271    .1151933
 55-Rangpur  |  -.2128503   .0722935    -2.94   0.003    -.3546339   -.0710667
  60-Sylhet  |  -.2557583    .065442    -3.91   0.000    -.3841046   -.1274119
             |
       _cons |   .7992917   .3251695     2.46   0.014     .1615621    1.437021
------------------------------------------------------------------------------
(sum of wgt is 2,705,022.8132019)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =        981
                                                F(14, 966)        =       6.33
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0903
                                                Root MSE          =     .56867

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0469785   .0141637     3.32   0.001     .0191833    .0747737
             |
 c.age#c.age |  -.0005992   .0001753    -3.42   0.001    -.0009433   -.0002552
             |
       urban |   .1313425   .0461347     2.85   0.005     .0408067    .2218783
             |
        male |
       Male  |          0  (omitted)
    1.h_head |    .128661   .0777088     1.66   0.098    -.0238365    .2811586
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.0514874   .0553684    -0.93   0.353    -.1601436    .0571688
     Male#2  |  -.0493561   .0588075    -0.84   0.402    -.1647612     .066049
     Male#3  |          0  (omitted)
             |
    salaried |   .0547987    .065794     0.83   0.405     -.074317    .1839143
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |  -.0993312   .0783289    -1.27   0.205    -.2530456    .0543831
   30-Dhaka  |  -.0244982   .0856812    -0.29   0.775     -.192641    .1436446
  40-Khulna  |   -.155844   .0816172    -1.91   0.057    -.3160115    .0043236
45-Mymens~h  |    -.25691   .1045733    -2.46   0.014    -.4621271    -.051693
50-Rajshahi  |  -.1194052   .0711787    -1.68   0.094    -.2590879    .0202775
 55-Rangpur  |  -.2973085   .0839748    -3.54   0.000    -.4621026   -.1325144
  60-Sylhet  |  -.2689435    .097488    -2.76   0.006    -.4602562   -.0776307
             |
       _cons |   1.408851   .2665836     5.28   0.000     .8857016    1.932001
------------------------------------------------------------------------------
(sum of wgt is 1,600,338.744751)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =        616
                                                F(14, 600)        =          .
                                                Prob > F          =          .
                                                R-squared         =     0.2010
                                                Root MSE          =     .62828

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0737697   .0205917     3.58   0.000     .0333293    .1142102
             |
 c.age#c.age |  -.0007473   .0002779    -2.69   0.007     -.001293   -.0002016
             |
       urban |   .1899463   .0612197     3.10   0.002     .0697155    .3101772
             |
        male |
       Male  |          0  (omitted)
    1.h_head |  -.0772871   .0792163    -0.98   0.330     -.232862    .0782879
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.4962128    .240829    -2.06   0.040     -.969183   -.0232427
     Male#5  |  -.3744817   .2619118    -1.43   0.153    -.8888571    .1398937
     Male#6  |  -1.006056   .2476935    -4.06   0.000    -1.492507    -.519604
     Male#7  |          0  (omitted)
             |
    salaried |    .002858      .0911     0.03   0.975    -.1760556    .1817716
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |   .0827325   .1207191     0.69   0.493    -.1543508    .3198158
   30-Dhaka  |   .1401498   .1075325     1.30   0.193     -.071036    .3513356
  40-Khulna  |  -.0894788   .0961054    -0.93   0.352    -.2782227    .0992651
45-Mymens~h  |   .0099265   .1607621     0.06   0.951    -.3057982    .3256513
50-Rajshahi  |  -.0363842    .106286    -0.34   0.732    -.2451219    .1723536
 55-Rangpur  |  -.1775034   .1336595    -1.33   0.185    -.4400007    .0849939
  60-Sylhet  |  -.0655821   .1263008    -0.52   0.604    -.3136274    .1824633
             |
       _cons |   1.280509   .3923941     3.26   0.001     .5098762    2.051142
------------------------------------------------------------------------------
(sum of wgt is 1,997,638.9116211)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#3.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =        787
                                                F(14, 772)        =       3.18
                                                Prob > F          =     0.0001
                                                R-squared         =     0.0699
                                                Root MSE          =     .95662

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0443369   .0246466     1.80   0.072    -.0040454    .0927193
             |
 c.age#c.age |  -.0005193   .0002837    -1.83   0.068    -.0010762    .0000375
             |
       urban |   .1924303   .0945985     2.03   0.042     .0067294    .3781312
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0864989   .1505999     0.57   0.566     -.209135    .3821328
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#1  |  -.2096616   .1220205    -1.72   0.086    -.4491928    .0298696
     Male#2  |  -.0280507   .0926415    -0.30   0.762    -.2099098    .1538084
     Male#3  |          0  (omitted)
             |
    salaried |   .1039554   .0815646     1.27   0.203    -.0561592    .2640701
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |  -.4139709   .1810777    -2.29   0.023     -.769434   -.0585079
   30-Dhaka  |   .1206655    .142325     0.85   0.397    -.1587244    .4000554
  40-Khulna  |    .111876   .1179314     0.95   0.343    -.1196283    .3433802
45-Mymens~h  |  -.2057463   .1227585    -1.68   0.094    -.4467264    .0352338
50-Rajshahi  |  -.0341989   .1378859    -0.25   0.804    -.3048746    .2364768
 55-Rangpur  |  -.1218684   .1291557    -0.94   0.346    -.3754064    .1316696
  60-Sylhet  |  -.1594803   .1335387    -1.19   0.233    -.4216223    .1026618
             |
       _cons |   1.145277   .4415353     2.59   0.010     .2785244    2.012029
------------------------------------------------------------------------------
(sum of wgt is 3,640,020.0482788)
note: 1.male omitted because of collinearity.
note: 1.male#1.h_head omitted because of collinearity.
note: 1.male#7.educ_level omitted because of collinearity.
note: public_job omitted because of collinearity.

Linear regression                               Number of obs     =      1,504
                                                F(15, 1488)       =      16.52
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2572
                                                Root MSE          =     .95228

------------------------------------------------------------------------------
             |               Robust
    ln_lai_m | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
         age |   .0533365   .0200298     2.66   0.008      .014047    .0926261
             |
 c.age#c.age |  -.0004919    .000249    -1.98   0.048    -.0009803   -3.58e-06
             |
       urban |   .2395568   .0657632     3.64   0.000     .1105583    .3685552
             |
        male |
       Male  |          0  (omitted)
    1.h_head |   .0737281   .0780253     0.94   0.345    -.0793231    .2267793
             |
 male#h_head |
     Male#1  |          0  (omitted)
             |
        male#|
  educ_level |
     Male#4  |  -.6963895   .0840227    -8.29   0.000    -.8612049    -.531574
     Male#5  |   -.436879   .1236979    -3.53   0.000    -.6795197   -.1942383
     Male#6  |  -.4729443   .3707566    -1.28   0.202    -1.200205    .2543168
     Male#7  |          0  (omitted)
             |
    salaried |   .0162295   .0746093     0.22   0.828    -.1301211    .1625801
  public_job |          0  (omitted)
             |
      region |
20-Chitta~g  |  -.0109853   .1183623    -0.09   0.926    -.2431599    .2211894
   30-Dhaka  |     .41048   .1100592     3.73   0.000     .1945923    .6263677
  40-Khulna  |  -.0449242   .0945069    -0.48   0.635    -.2303052    .1404567
45-Mymens~h  |  -.0966742   .1003986    -0.96   0.336    -.2936121    .1002636
50-Rajshahi  |  -.1039476   .1243257    -0.84   0.403    -.3478198    .1399246
 55-Rangpur  |  -.4391655   .1150342    -3.82   0.000     -.664812   -.2135191
  60-Sylhet  |   -.301857   .1020835    -2.96   0.003    -.5020998   -.1016142
             |
       _cons |   1.653433   .3911541     4.23   0.000     .8861606    2.420705
------------------------------------------------------------------------------

. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 05 - Population Growth
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 05, 2021
. *===========================================================================
. * Modified by: Kelly Y. Montoya
. *                               Jul 25, 2022 - Adjusted fexp_s according to W
> DI population.
. *===========================================================================
. loc prior_wgt "wgt"

. loc nw_name   "all"

. 
. *===========================================================================
. * household ID (numeric) = psu + household   
. *sort psu id, stable
. *egen psuhid = group(psu id)
. 
. 
. 
. if $weights == 1 {
. *===========================================================================
. * 1. dummies for category
. *===========================================================================
. * dummies by cross categories "gender and age groups"
. gen     age_groups =  .
. replace age_groups =  1 if age >=  0 & age <=  14
. replace age_groups =  2 if age >= 15 & age <=  29
. replace age_groups =  3 if age >= 30 & age <=  44
. replace age_groups =  4 if age >= 45 & age <=  64
. replace age_groups =  5 if age >= 65 
. 
. egen int groupvar = group(male age_groups) 
. xi i.groupvar, noomit prefix(_by)
. unab caliblist: _by*
. 
. 
. loc mem_rel   "h_head"
. loc byvars    "male age_groups"
. loc hhd_id    "hhid"
. loc prior_wgt "wgt"
. loc nw_name   "all"
. 
. *===========================================================================
. * 2. means by category and total population in base year
. *===========================================================================
. total `caliblist' [pw = `prior_wgt'] 
. mat  tot_old = e(b)
. 
. * share by groups
. sum `prior_wgt' if e(sample), meanonly 
. scalar  total_`nw_name' = r(sum)
. mat mean_old = tot_old / r(sum)
. mat mean_old = mean_old'
. 
. * add n-1 restrictions
. mata: st_matrix("tot_new", st_matrix("tot_old"):*st_matrix("vec_pop_grw1")')
. mata: st_matrix("mean_`nw_name'",st_matrix("tot_new")'/sum(st_matrix("tot_new
> ")))
. mata: st_local("totalnew",strofreal(sum(st_matrix("tot_new")),"%20.5f"))
. mata: st_numscalar("TN1",sum(st_matrix("tot_new")))
. mat mean_`nw_name'c = mean_`nw_name'[2...,1]
. 
. *===========================================================================
. * 3. constrains
. *===========================================================================
. capture drop sort
. gsort `hhd_id' -`mem_rel'
. gen long sort = _n 
. bysort `hhd_id' (sort): gen byte _first = (_n == 1) 
. 
. 
. capture drop aux
. gen aux = 1 
. egen _hhsize = sum(aux), by(`hhd_id')
. 
. 
. * I use this expression in case individuals have different weights in the hou
> sehold
. * Within the household
. bysort `hhd_id' (sort): gen double _sumw_`nw_name' = sum(`prior_wgt')    
. bysort `hhd_id' (sort): replace    _sumw_`nw_name' = _sumw_`nw_name'[_N] 
. 
. foreach x of varlist `caliblist' {
  2.     bysort `hhd_id' (sort): gen double m_`nw_name'_`x' = sum(`x' * `prior_
> wgt' ) 
  3.     bysort `hhd_id' (sort): replace    m_`nw_name'_`x' = m_all_`x'[_N]/_su
> mw_`nw_name'
  4.         loc recaliblist `recaliblist' m_`nw_name'_`x'
  5. }
. 
. * add n-1 restrictions
. loc first: word 1 of `recaliblist'
. loc recaliblist: list recaliblist - first
. mat rownames mean_`nw_name'c = `recaliblist'
. 
. loc nw_name = "all"
. loc mem_rel  "h_head"
. tempvar factor_`nw_name'
. loc varlist: rownames(mean_`nw_name'c)
. mata: st_local("totalnew",strofreal(sum(st_matrix("tot_new")),"%20.5f"))
. 
. noi di "maxentropy `varlist' if `mem_rel' == 1, matrix(mean_`nw_name'c) prior
> (`prior_wgt') generate(`factor_`nw_name'') total(`totalnew')"
. maxentropy `varlist' if `mem_rel' == 1, matrix(mean_`nw_name'c) prior(`prior_
> wgt') generate(`factor_`nw_name'') total(`totalnew')
. 
. bysort `hhd_id' (sort): gen `nw_name'_wgt = `prior_wgt' * `factor_`nw_name''[
> 1]/_sumw_`nw_name'
. la var `nw_name'_wgt "Simulated `nw_name' weights"
. 
. drop aux* psuhid groupvar age_groups
. 
. //gen fexp_s = fexp
. //label var fexp_s "weight -$scenario"
. 
. rename  all_wgt fexp_s 
. 
. 
. }

. 
. 
. if $weights == 0 {
.     
.         sum wgt [w = wgt]
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         wgt |  61,849   165687181    4160.661   1958.489   411.2634   8718.561
.         sca var0 = r(sum_w)
.         sca var1 = growth_pop_wdi[1,1]
.         sca ratio_pop = var1/var0
.         gen fexp_s = round(`prior_wgt'* ratio_pop)
.         
.         * Check
.         sum fexp_s [w = fexp_s]
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
      fexp_s |  61,849   173976736    4368.789   2056.568        432       9155
.         if abs(r(sum_w) - growth_pop_wdi[1,1]) > 1000000 di in red "WARNING: 
> Population differs in more than a million people with WDI."
.         
.         
.         * Another way to adjust but keeping all decimal positions.
.         /*sum fexp_s [w = fexp_s]
>         if abs(r(sum_w) - growth_pop_wdi[1,1]) != 0 {
>             sum fexp_s [w = fexp_s]
>                 sca var0 = r(sum_w) - growth_pop_wdi[1,1]
>                 sca var1 = growth_pop_wdi[1,1]
>                 sca ratio_pop = var0/var1
>                 replace fexp_s = fexp_s * (1 + ratio_pop)
>         }*/
. 
. }

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 06 - Simulating changes in the labor force participation rate
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 09, 2022 Kelly Y. Montoya minor corrections an
> d warnings.
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * sample labor force 
. gen lf_samp = (active ==1) if sample==1
(21,205 missing values generated)

. sum lf_samp [aw = wgt] 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lf_samp |  40,644   108849193     .477306   .4994909          0          1

. 
. * goal
. note: this procedure changes the labor market structure (% inactivity, unempl
> oyment, employment by sector) according to elasticities.

. mat activity = J(1,1,r(mean))

. mat activity = r(mean)*(1 + growth_labor[1,1])

. mat list activity

symmetric activity[1,1]
           c1
r1  .47730602

. 
. * allocate individuals according to their utility of being inactive
. clonevar  active_s = lf_samp
(21,205 missing values generated)

. clonevar U0 = U0_1 
(53,975 missing values generated)

. replace  U0 = U0_2 if U0 == .
(11,931 real changes made)

. gsort -active_s U0 hhid 

. cap drop aux*

. 
. qui sum fexp_s                               if sample == 1 & lf_samp != . 

. gen double aux = sum(fexp_s)/r(sum)  if sample == 1 & lf_samp != . 
(21,205 missing values generated)

. replace active_s = 1    if aux <= (activity[1,1] + 10^(-23)) & sample == 1 & 
> lf_samp !=. 
(0 real changes made)

. replace active_s = 0    if aux >  (activity[1,1] + 10^(-23)) & sample == 1 & 
> lf_samp !=. 
(0 real changes made)

. 
. * check
. sum lf_samp  [aw = wgt]   if sample == 1 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lf_samp |  40,644   108849193     .477306   .4994909          0          1

. scalar v0 = r(mean)

. sum active_s [aw = fexp_s] if sample == 1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    active_s |  40,644   114295222    .4773058   .4994909          0          1

. scalar v1 = r(mean)

. 
. di scalar(v1)/scalar(v0)-1
-3.680e-07

. mat list growth_labor

growth_labor[8,1]
          rate
r1           0
r2  -1.421e-07
r3           0
r4           0
r5           0
r6           0
r7           0
r8           0

. 
. if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_labor[1,1],.005)
>  ) != 0 {
.         di in red "WARNING: New active population doesn´t match growth rate."
.         break
. }

. 
. cap drop aux*

. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 07 - Simulating changes in the unemployment rate
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 09, 2022 Kelly Y. Montoya minor corrections an
> d warnings.
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. * sample unemployment rate 
. gen     aux = unemplyd / lf_samp 
(42,659 missing values generated)

. sum aux [w = wgt] if lf_samp == 1
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,190  51954375.7    .0530905   .2242198          0          1

. * goal
. mat unemploy = r(mean)*(1 + growth_labor[2,1])

. mat list unemploy

symmetric unemploy[1,1]
           c1
r1  .05309049

. 
. * allocate individuals according to their probability of being unemployed
. gen    unemplyd_s = unemplyd  if active_s == 1
(42,659 missing values generated)

. clonevar U1 = U1_1 
(53,975 missing values generated)

. replace  U1 = U1_2 if U1 == .
(11,931 real changes made)

. gsort -unemplyd_s U1 id 

. cap drop aux*

. 
. qui sum fexp_s                              if active_s == 1 

. gen double aux = sum(fexp_s)/r(sum) if active_s == 1 
(42,659 missing values generated)

. replace unemplyd_s = 1                      if aux <= (unemploy[1,1] + epsflo
> at()) & active_s == 1 
(0 real changes made)

. replace unemplyd_s = 0                      if aux >  (unemploy[1,1] + epsflo
> at()) & active_s == 1 
(0 real changes made)

. 
. * simulating: employment status
. gen     emplyd_s = emplyd  if active_s  == 1
(43,635 missing values generated)

. replace emplyd_s = 1       if unemplyd_s == 0 & active_s == 1
(0 real changes made)

. replace emplyd_s = 0       if unemplyd_s == 1 & active_s == 1
(1,095 real changes made)

. tab emplyd_s active_s

           |  active_s
  emplyd_s |         1 |     Total
-----------+-----------+----------
         0 |     1,095 |     1,095 
         1 |    18,095 |    18,095 
-----------+-----------+----------
     Total |    19,190 |    19,190 

. 
. * check 
. capt drop aux

. gen     aux = unemplyd / lf_samp 
(42,659 missing values generated)

. sum aux [w = wgt] if lf_samp == 1 
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,190  51954375.7    .0530905   .2242198          0          1

. scalar v0 = r(mean)

. 
. cap drop aux

. gen     aux = unemplyd_s / active_s 
(42,659 missing values generated)

. sum aux [w = fexp_s] if active_s == 1 
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  19,190    54553778    .0530904   .2242196          0          1

. scalar v1 = r(mean)

. 
. di scalar(v1)/scalar(v0)-1
-1.823e-06

. mat list growth_labor

growth_labor[8,1]
          rate
r1           0
r2  -1.421e-07
r3           0
r4           0
r5           0
r6           0
r7           0
r8           0

. 
. if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_labor[2,1],.005)
>  ) != 0 {
.         di in red "WARNING: New active population doesn´t match growth rate."
.         break
. }

. 
. drop aux*

. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 08 - Simulating changes in the employment structure
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *                          Aug 10, 2022 Kelly Y. Montoya Changed estructure s
> ectoral matrix line 293.
. *                          Aug 11, 2022 Kelly Y. Montoya Changed informality 
> simulation and added checks for estructure and informality.
. *===========================================================================
. 
. note: those with public jobs do not change between sectors

. 
. *===========================================================================
. * I. MISCELLANEOUS TASKS  
. *===========================================================================
. 
. * public sector fixed
. clonevar public   = public_job
(42,250 missing values generated)

. 
. * number of sectors
. clonevar sectorg = sect_main6
(43,635 missing values generated)

. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     18,214    2.987647    1.789263          1          6

. loc lim = r(max)

. 
. * employment structure 
. mat sector     = J(`lim',1,.)

. mat sect_prv   = J(`lim',1,.)

. mat sect_pub   = J(`lim',1,.)

. 
. mat sector_s   = J(`lim',1,.)

. mat sect_prv_s = J(`lim',1,.)

. mat sect_pub_s = J(`lim',1,.)

. 
. forvalues a = 1/`lim' {
  2.         
.         * base year 
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' 
  3.         mat sector[`a',1]   = r(sum)
  4. 
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' & public == 0 
  5.         mat sect_prv[`a',1]   = r(sum)
  6.         
.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a' & public == 1
  7.         mat sect_pub[`a',1]   = r(sum)
  8.         
.         * simulated
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' 
  9.         mat sector_s[`a',1] = r(sum)
 10. 
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' & public =
> = 0 
 11.         mat sect_prv_s[`a',1] = r(sum)
 12. 
.         sum fexp_s if sample == 1 & emplyd_s == 1 & sectorg == `a' & public =
> = 1 
 13.         mat sect_pub_s[`a',1] = r(sum)
 14. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,365    2983.561    1644.522   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,365    2983.561    1644.522   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,317    3134.128    1723.356        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,317    3134.128    1723.356        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,793    3108.423    2276.309   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,793    3108.423    2276.309   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,766    3260.926     2387.94        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,766    3260.926     2387.94        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,555    2479.807    1916.647   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,555    2479.807    1916.647   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,551     2602.49    2010.981        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,551     2602.49    2010.981        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,287    2164.549    1945.797   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,960    2344.594    2022.355   411.2634   8057.709

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,327     1898.62    1794.847   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,267    2275.514    2043.353        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,945     2470.25    2126.213        432       8461

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,322    1989.007    1879.372        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,631    2675.128    2074.626   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,631    2675.128    2074.626   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,622    2811.231    2180.208        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,622    2811.231    2180.208        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      2,583    2474.641     2074.12   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      2,583    2474.641     2074.12   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |          0

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      2,572    2598.097    2178.414        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      2,572    2598.097    2178.414        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |          0

. 
. * employment matrix goals 
. loc row_tot = rowsof(growth_labor)

. mat growth_estru = growth_labor[3..`row_tot',1]

. 
. mata: st_mat("growth_estru", "sector", 1,`lim')

. mat sector = sector , sector_mata

. mata: st_gr("sector_s", "shares_mata")

. 
. * re-weighting the shares 
. sum fexp_s if emplyd_s == 1 & sample == 1

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |     18,095    2854.794    2095.744        432       9155

. ret li

scalars:
                  r(N) =  18095
              r(sum_w) =  18095
               r(mean) =  2854.793920972644
                r(Var) =  4392144.040705832
                 r(sd) =  2095.744268918761
                r(min) =  432
                r(max) =  9155
                r(sum) =  51657496

. mata: st_repond_1("shares_mata", "growth_estru", 2, `r(sum)', "sector_rep")

. 
. * sector dummies: identifying employed individuals who already have sector an
> d those who do not
. forvalues s = 1/`lim' {
  2.         gen d_act`s'     = cond(sectorg == `s',1,0) if sample == 1 & emply
> d_s == 1
  3.         gen d_act`s'_sim = d_act`s'                  
  4. }
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)
(43,754 missing values generated)

. 
. order d_act*_sim

. 
. * This is only for those who belongs to the employment in both moments
. egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emplyd_s == 1 & emplyd
>  == 1 & sample  == 1
(43,754 missing values generated)

. tab     changed

    changed |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     18,095      100.00      100.00
------------+-----------------------------------
      Total |     18,095      100.00

. 
. 
. *===========================================================================
. *II. SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS
. *===========================================================================
. * Mata rutine which orders sectors in ascending way 
. mata: st_order("growth_estru_n", 1, 2, "aux")

. 
. dis in red "SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS"
SECTORS WHICH REDUCED THEIR EMPLOYMENT LEVELS

. 
. forvalues r = 1/`lim' {
  2.         
.         *drop jobs from decreasing sectors 
.         if aux[`r',2] < 0 {
  3. 
.                 *identifies the sector          
.                 loc s = aux[`r',1] 
  4.                 dis in red "economic sector `s'"
  5.                 
.                 *orders the population according to: activity, probability, h
> hd id and ind id 
.                 loc p = `s' + 1
  6.                 clonevar P`s' = U`p'_1 
  7.                 replace  P`s' = U`p'_2 if P`s' == .
  8.                 
.                 gsort  -d_act`s'_sim -P`s' id -public
  9.                 capture drop aux
 10.                 gen     aux = sum(fexp_s) if emplyd_s == 1 & emplyd == 1 &
>  d_act`s'_sim == 1                                                 
 11.                 replace d_act`s'_sim = 0  if emplyd_s == 1 & emplyd == 1 &
>  d_act`s'_sim == 1 & (aux > sector_rep[`s',1] ) 
 12.                 
.                 drop aux changed
 13.                 egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emp
> lyd_s == 1 & emplyd == 1 & sample  == 1 
 14.         }
 15. }
economic sector 3
(53,975 missing values generated)
(11,931 real changes made)
(60,298 missing values generated)
(7 real changes made)
(43,754 missing values generated)
economic sector 6
(53,975 missing values generated)
(11,931 real changes made)
(59,277 missing values generated)
(10 real changes made)
(43,754 missing values generated)
economic sector 5
(53,975 missing values generated)
(11,931 real changes made)
(60,227 missing values generated)
(14 real changes made)
(43,754 missing values generated)
economic sector 4
(53,975 missing values generated)
(11,931 real changes made)
(58,582 missing values generated)
(5 real changes made)
(43,754 missing values generated)

. 
. *===========================================================================
. *II. SECTORS WHICH INCREASE THEIR EMPLOYMENT LEVELS
. *===========================================================================
. * Mata routine which orders sectors in descending way
. mata: st_order("growth_estru_n", 1, -2, "aux")

. 
. * Employed ranking(t): 1- employed(t-1) and changed sector; 2- unemployed(t-1
> ); 3- inactives(t-1)
. gen     rank$t =.
(61,849 missing values generated)

. replace rank$t = 1 if emplyd_s == 1 & emplyd  == 1 & changed == 0
(36 real changes made)

. replace rank$t = 2 if emplyd_s == 1 & unemplyd == 1 
(0 real changes made)

. replace rank$t = 3 if emplyd_s == 1 & lf_samp  == 0
(0 real changes made)

. 
. dis in red "SECTORS WHICH INCREASED THEIR EMPLOYMENT LEVELS"
SECTORS WHICH INCREASED THEIR EMPLOYMENT LEVELS

. 
. forvalues r = 1/`lim'   {
  2. 
.         * Asign a job to increasing sectors
.         if aux[`r',2]>=0        {
  3.         
.                 * Identifies the sector         
.                 loc s = aux[`r',1] 
  4.                 dis in red "economic sector `s'"
  5. 
.                 loc p = `s' + 1
  6.                 clonevar P`s' = U`p'_1 
  7.                 replace  P`s' = U`p'_2 if P`s' == .
  8.                 
.                 gsort -d_act`s'_sim rank$t -P`s' id 
  9. 
.                 gen aux = sum(fexp_s)       if (d_act`s'_sim == 1 | rank$t !=
>  .)                                                           
 10.                 replace d_act`s'_sim = 1        if  d_act`s'_sim == 0 & ra
> nk$t != .  & (aux <= sector_rep[`s',1]) 
 11. 
.                 drop changed aux
 12.                 egen    changed = rsum(d_act1_sim - d_act`lim'_sim) if emp
> lyd_s == 1 & sample  == 1
 13.                 sum     changed
 14.                                 
.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & emplyd  
> == 1
 15.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & unemp
> lyd == 1
 16.                 replace rank$t = . if changed == 1 & emplyd_s == 1 & lf_sa
> mp  == 0 
 17.         }
 18. }
economic sector 1
(53,975 missing values generated)
(11,931 real changes made)
(56,496 missing values generated)
(29 real changes made)
(43,754 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     18,095    .9996132    .0196652          0          1
(29 real changes made, 29 to missing)
(0 real changes made)
(0 real changes made)
economic sector 2
(53,975 missing values generated)
(11,931 real changes made)
(58,076 missing values generated)
(4 real changes made)
(43,754 missing values generated)

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     changed |     18,095    .9998342    .0128753          0          1
(4 real changes made, 4 to missing)
(0 real changes made)
(0 real changes made)

. 
. 
. *===========================================================================
. *III. Allocate sectors for those who were not assigned (by growth rate and sh
> are employment)
. *===========================================================================
. *mata: st_repond("sector","growth_estru" , 2, 1, "sector_shr", "share")
. sum rank$t

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
        rank |          3           1           0          1          1

. loc mm = r(N)

. dis in red "`mm'"
3

. 
. while (`mm' > 0) {
  2.         forvalues r = 1/`lim'   {
  3.         
.                 loc s = aux[`r',1] 
  4. 
.                 if growth_estru[`s',1]>0        {
  5.         
.                         loc p = shares_mata[`s',2]
  6.                 
.                         di in red "this is p: " "`p'"
  7.                 
.                         gsort -d_act`s'_sim -P`s' id 
  8.                         sum fexp_s                                   if em
> plyd_s == 1 & changed == 0 
  9.                         gen aux = sum(fexp_s)/r(sum) if emplyd_s == 1 & ch
> anged == 0 
 10.                         replace d_act`s'_sim = 1         if emplyd_s == 1 
> & changed == 0 & rank$t !=. & (aux <= `p') 
 11.                 
.                         drop changed aux
 12.                         egen changed = rsum(d_act1_sim - d_act`lim'_sim) i
> f emplyd_s ==1
 13.                         sum  changed
 14. 
.                         replace rank$t =. if changed == 1 & emplyd_s == 1 & e
> mplyd == 1
 15.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & unemplyd ==1
 16.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & lf_samp == 0
 17.                 }
 18.                 
.                 if growth_estru[`s',1]<0        {
 19.         
.                         loc p = shares_mata[`s',2]
 20.                 
.                         di in red "this is p: " "`p'"
 21.                 
.                         gsort -d_act`s'_sim -P`s' id 
 22.                         sum fexp_s                                      if
>  emplyd_s == 1 & changed == 0 
 23.                         gen aux = sum(fexp_s)/r(sum)    if emplyd_s == 1 &
>  changed == 0 
 24.                         replace d_act`s'_sim = 1                if emplyd_
> s == 1 & changed == 0 & rank$t !=. & (aux <= `p') 
 25.                 
.                         drop changed aux
 26.                         egen changed = rsum(d_act1_sim - d_act`lim'_sim)  
>       if emplyd_s ==1
 27.                         sum  changed
 28. 
.                         replace rank$t =. if changed == 1 & emplyd_s == 1 & e
> mplyd == 1
 29.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & unemplyd ==1
 30.                         replace rank$t =. if changed == 1 & emplyd_s == 1 
> & lf_samp == 0
 31.                 }
 32.         }
 33.         
.         sum rank$t
 34.         loc mm = r(N)
 35.         di in red "there are `mm' observations left"
 36.         if `mm' < 16 loc mm = 0 
 37.         note: adjust in case it doesn´t converge, increase the 16. 
 38. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
        rank |          3           1           0          1          1
there are 3 observations left

. 
. drop changed rank$t

. 
. *===========================================================================
. * Creates new activity
. *===========================================================================
. gen act$t = .
(61,849 missing values generated)

. forvalues s = 1/`lim'   {
  2.         replace act$t = `s' if d_act`s'_sim == 1 &  act$t == .
  3.         }
(5,346 real changes made)
(3,770 real changes made)
(1,544 real changes made)
(3,262 real changes made)
(1,608 real changes made)
(2,562 real changes made)

. drop d_act*

. 
. 
. * new main labor sector 
.         gen           sect_main_s = .
(61,849 missing values generated)

.         replace   sect_main_s =  1 if act$t == 1
(5,346 real changes made)

.         replace   sect_main_s =  2 if act$t == 2 
(3,770 real changes made)

.         replace   sect_main_s =  3 if act$t == 3
(1,544 real changes made)

.         replace   sect_main_s =  4 if act$t == 4
(3,262 real changes made)

.         replace   sect_main_s =  5 if act$t == 5
(1,608 real changes made)

.         replace   sect_main_s =  6 if act$t == 6
(2,562 real changes made)

.         replace   sect_main_s = sectorg if sect_main_s== . & sample == . & em
> plyd_s == 1
(0 real changes made)

.         label var sect_main_s "economic sector simulated"

.         
.         rename sect_main_s sect_main6_s

.         *recode sect_main6_s (1 2 = 1) (3 4 = 2) (5 6 = 3), gen(sect_main_s)
.         *label values sect_main_s sector
.         *ADD labels!
.         
.         
. * new occupation status
.         gen     occupation_s = .
(61,849 missing values generated)

.         replace occupation_s = 0 if  active_s     == 0 & sample == 1
(21,454 real changes made)

.         replace occupation_s = 1 if  unemplyd_s   == 1 & sample == 1
(1,095 real changes made)

.         replace occupation_s = 2 if  sect_main6_s == 1 & sample == 1
(5,346 real changes made)

.         replace occupation_s = 3 if  sect_main6_s == 2 & sample == 1
(3,770 real changes made)

.         replace occupation_s = 4 if  sect_main6_s == 3 & sample == 1
(1,544 real changes made)

.         replace occupation_s = 5 if  sect_main6_s == 4 & sample == 1
(3,262 real changes made)

.         replace occupation_s = 6 if  sect_main6_s == 5 & sample == 1
(1,608 real changes made)

.         replace occupation_s = 7 if  sect_main6_s == 6 & sample == 1
(2,562 real changes made)

. 
.         label var    occupation_s "occupation status - simulated"

.         label values occupation_s occup

. 
. 
. 
. *===========================================================================
. * Creates the structure sectoral matrix
. *===========================================================================
. mat sector   = J(`lim',1,.)

. mat sector_s = J(`lim',1,.)

. 
. forvalues a = 1/`lim' {
  2.         sum wgt if sample == 1 & emplyd == 1 & sectorg == `a'
  3.         mat sector[`a',1]   = r(sum)
  4.  
.         if $m == 1 {
  5.                 sum fexp_s if sample == 1 & emplyd_s == 1 & sect_main_s== 
> `a'
  6.                 mat sector_s[`a',1] = r(sum)
  7.         }
  8.         
.         if $m != 1 {
  9.                 sum fexp_s if sample == 1 & emplyd_s == 1 & sect_main6_s==
>  `a'
 10.                 mat sector_s[`a',1] = r(sum)
 11.         }
 12. }

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      5,365    2983.561    1644.522   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      5,346    3122.895     1726.33        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,793    3108.423    2276.309   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,770    3262.052      2387.4        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,555    2479.807    1916.647   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,544    2604.985    2012.103        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      3,287    2164.549    1945.797   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      3,262    2273.726    2043.892        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      1,631    2675.128    2074.626   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      1,608    2829.557    2180.192        432       9155

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
         wgt |      2,583    2474.641     2074.12   411.2634   8718.561

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      fexp_s |      2,562    2602.295    2180.839        432       9155

. 
. mat growth_estru = growth_labor[3..`row_tot',1]

. mata: st_mat("growth_estru", "sector", 1,`lim')

. mat sector = sector , sector_mata

. 
. mat list sector

sector[6,2]
           c1         c1
r1   16006803   16006803
r2   11790248   11790248
r3  3856100.1  3856100.1
r4  7114873.7  7114873.7
r5    4363133    4363133
r6  6391996.6  6391996.6

. mat list sector_s 

sector_s[6,1]
          c1
r1  16694997
r2  12297935
r3   4022097
r4   7416895
r5   4549927
r6   6667080

. 
. * including those out of sample
. replace unemplyd_s   = unemplyd if sample == .
(21,205 real changes made)

. replace emplyd_s     = emplyd   if sample == .
(1,385 real changes made)

. replace active_s     = lf_samp  if sample == .
(0 real changes made)

. replace sect_main6_s = sectorg  if sect_main6_s== . & sample == . & emplyd_s 
> == 1
(0 real changes made)

. 
. * check new sectoral structure 
. clonevar sectorg_s = sect_main6_s 
(43,757 missing values generated)

. 
. forvalues a = 1/`lim' {
  2.         
.         capt drop aux
  3.         gen aux = sectorg == `a' if sample == 1 & sectorg != .
  4.         sum aux [w = wgt] if lf_samp == 1
  5.         scalar v0 = r(mean)
  6.                 
.         capt drop aux
  7.         gen aux = sectorg_s == `a' if sample == 1 & sectorg_s != .
  8.         sum aux [w = fexp_s] if active_s == 1
  9.         scalar v1 = r(mean)
 10.         
.         if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_estru[`a
> ',1],.005) ) > 0.01 {
 11.                 di in red "WARNING: New sectoral estructure doesn´t match 
> growth rates."
 12.                 break
 13.         }       
 14. }
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .3232186   .4677182          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .3232399   .4677264          0          1
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .2380755   .4259172          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .2381063   .4259363          0          1
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .0778646   .2679657          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .0778738   .2679803          0          1
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .1436676    .350762          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .1436021   .3506955          0          1
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .0881029   .2834523          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .0880933   .2834384          0          1
(43,635 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,214  49523154.1    .1290709   .3352876          0          1
(43,757 missing values generated)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
         aux |  18,092    51648931    .1290846   .3353028          0          1

. 
. drop aux*

. 
. /*
> 
> *===========================================================================
> * Informality rates by economic sector
> *===========================================================================
> 
> * Creating a new informal variable
> cap drop informal_s
> 
> if $m == 1 {
>         
>         gen      informal_s = informal if emplyd_s == 1
> 
>         * random numbers
>         capture drop aleat_inf
>         set seed 12345678
>         gen aleat_inf = uniform() if sample == 1 
> 
>         * in and out of informality
>         sum sect_main
>         loc lim = r(max)
> 
>         * Creates the structure sectoral matrix - targets
>         mat informal      = J(`lim',1,.)
> 
>         forvalues a = 1/`lim' {
>                 sum informal [w = wgt] if lf_samp == 1 & emplyd == 1 & sect_m
> ain == `a' 
>                 mat informal[`a',1] = r(mean)*(1 + growth_informal[`a',1])
>         }
> 
>         * Allocate individuals according to their probability of being employ
> ed
>         gsort  sect_main_s -informal_s aleat_inf id 
> 
>         forvalues i = 1/`lim' {
>       
>                 qui sum fexp_s if active_s == 1 & sect_main_s == `i'
>                 gen double aux = sum(fexp_s)/r(sum) if emplyd_s == 1 & sect_m
> ain_s == `i'
>                 replace informal_s = 1 if aux <= (informal[`i',1] + epsfloat(
> )) & emplyd_s == 1 & sect_main_s == `i'
>                 replace informal_s = 0 if aux >  (informal[`i',1] + epsfloat(
> )) & emplyd_s == 1 & sect_main_s == `i'
>                 drop aux*
> 
>         }
> }
> 
> if $m != 1 {
>         
>         gen     informal_s = 1 if (sect_main6_s == 2 | sect_main6_s== 4 | sec
> t_main6_s== 6) & emplyd_s == 1
>         
>         replace informal_s = 0 if (sect_main6_s == 1 | sect_main6_s== 3 | sec
> t_main6_s== 5) & emplyd_s == 1
> }
> 
> 
> * Check new informal rates
> sum sect_main
> loc lim_inf = r(max)
> forvalues a = 1/`lim_inf' {
>                 
>         capt drop aux
>         gen aux = informal / lf_samp if sample == 1
>         sum aux [w = wgt] if lf_samp == 1 & sect_main == `a'
>         scalar v0 = r(mean)
>                 
>         capt drop aux
>         gen aux = informal_s / active_s if sample == 1
>         sum aux [w = fexp_s] if active_s == 1 & sect_main_s == `a' 
>         scalar v1 = r(mean)
>         
>         if abs( round((scalar(v1)/scalar(v0)-1),.005) - round(growth_informal
> [`a',1],.005) ) > 0.01 {
>                 di in red "WARNING: New informal workers in sector `a' doesn´
> t match growth rate."
>         }
>                 
> 
> }
> 
> * Bringing back those who do not belong to the sample
> replace informal_s = informal if sample == . & informal_s == .
> 
> *===========================================================================
> *                                     END
> *===========================================================================
> 
> */
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 10 - Assign labor income by sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *===========================================================================
. 
. *===========================================================================
. * Random numbers
. *===========================================================================
. capture drop aleat_ila

. set seed 23081985

. gen aleat_ila = uniform() if sample == 1 
(21,205 missing values generated)

. 
. ** I- Asign the contrafactual labor income by sector
. 
. *  IMPUTATION of salaried to those who come from the non-employed status in o
> rder to obtain the INCOME LINEAR PROJECTION
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     18,214    2.987647    1.789263          1          6

. loc lim = r(max)

. replace salaried = . if unemplyd == 1
(130 real changes made, 130 to missing)

. 
. forvalues i = 1/`lim' {
  2.    forvalues k =1(1)2 {
  3.            
.    sum salaried  [w = wgt] if sectorg == `i' & sample_`k' == 1
  4.    sca ns_`k'_`i' = 1-r(mean)
  5.    
.    sum public_job    [w = wgt] if sectorg == `i' & sample_`k' == 1
  6.    sca pj_`k'_`i' = 1-r(mean)
  7.         
.    }
  8. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   3,384    10119289    .3982593   .4896117          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   3,402  10172010.3           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,933  5751147.65    .1913526   .3934677          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,963  5834792.32           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,577  4724904.08    .8208203   .3836244          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,588  4771422.64           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   2,189  6970460.58    .8160024   .3875708          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   2,205  7018825.45           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     958  2317651.13    .9776708   .1478289          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     961  2325299.59           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     593  1526476.74    .8920884   .3105307          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     594  1530800.53           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     710   1625156.2    .8395656   .3672672          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     712  1626110.55    .0910665   .2879059          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   2,557  5454591.27    .8631656   .3437397          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   2,575  5488763.14    .4320436   .4954566          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     991  2718417.12    .7272433   .4456016          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     992  2722230.95           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     631  1624136.82     .761476   .4265192          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     639  1640902.04           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |     935  2380223.96    .3130843   .4639965          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |     937  2385286.62           0          0          0          0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
    salaried |   1,637  3983637.41    .4252652   .4945342          0          1

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  public_job |   1,646  4006710.01           0          0          0          0

. 
. *===========================================================================
. * SALARIED - NON-SALARIED
. *===========================================================================
. 
. * Identifies the people who change sector by education level
. gen     ch_l = (occupation != occupation_s) if sample_1 == 1 & (occupation_s 
> > 0 & occupation_s < .) & salaried == .
(61,613 missing values generated)

. replace ch_l = . if ch_l == 0
(199 real changes made, 199 to missing)

. gen     ch_h = (occupation != occupation_s) if sample_2 == 1 & (occupation_s 
> > 0 & occupation_s < .) & salaried == .
(60,990 missing values generated)

. replace ch_h = . if ch_h == 0
(777 real changes made, 777 to missing)

. 
. * Assigns the same salaried structure of the sector
. capture drop aux_l* aux_h* 

. * Creates the new salaried variable
. clonevar salaried_s = salaried
(42,380 missing values generated)

. replace  salaried_s = 1 if (ch_l == 1 | ch_h == 1) 
(119 real changes made)

. 
. forvalues i = 1/`lim' {
  2.         sum  ch_l [aw = fexp_s] if sect_main6_s== `i'
  3.         if r(sum) != 0 {
  4.                 gen  aux_l_`i' = sum(fexp_s)/r(sum) if ch_l == 1 & sect_ma
> in6_s== `i'
  5.                 sort aleat_ila, stable
  6.                 replace salaried_s = 0 if  aux_l_`i' <= ns_1_`i'
  7.                 di in ye "share of self employment is ===>   ns_1_`i'  = "
>  scalar(ns_1_`i')
  8.                 ta salaried_s [aw=fexp_s] if aux_l_`i' != .
  9.         }
 10. 
.         sum  ch_h [aw = fexp_s] if occupation_s == `i'
 11.         if r(sum) != 0 {
 12.                 gen  aux_h_`i' = sum(fexp_s)/r(sum) if ch_h == 1 & sect_ma
> in6_s== `i'
 13.                 sort aleat_ila, stable
 14.                 replace salaried_s = 0 if  aux_h_`i' <= ns_2_`i'
 15.                 di in ye "share of self employment is ===>   ns_2_`i'  = "
>  scalar(ns_2_`i')
 16.                 ta salaried_s [aw=fexp_s] if aux_h_`i' != .
 17.         }
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |      82      220865           1          0          1          1
(61,849 missing values generated)
(0 real changes made)
share of self employment is ===>   ns_2_1  = .80864742
no observations

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

. 
. 
. rename ch_l ch_l_sal

. rename ch_h ch_h_sal

. capture drop aux_l_*

. capture drop aux_h_*

. 
. *===========================================================================
. * PUBLIC - PRIVATE JOBS
. *===========================================================================
. 
. * a) Identifies the people who change sector by education level
. gen     ch_l = (occupation != occupation_s) if sample_1 == 1 & (occupation_s 
> > 0 & occupation_s < .) & public_job == .
(61,650 missing values generated)

. replace ch_l = . if ch_l == 0
(199 real changes made, 199 to missing)

. gen     ch_h = (occupation != occupation_s) if sample_2 == 1 & (occupation_s 
> > 0 & occupation_s < .) & public_job == .
(61,072 missing values generated)

. replace ch_h = . if ch_h == 0
(777 real changes made, 777 to missing)

. 
. 
. * c) Creates the new public_job variable
. clonevar public_job_s = public_job
(42,250 missing values generated)

. replace  public_job_s = 1 if (ch_l == 1 | ch_h == 1) 
(0 real changes made)

. ta public_job

 public_job |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     18,246       93.10       93.10
          1 |      1,353        6.90      100.00
------------+-----------------------------------
      Total |     19,599      100.00

. ta public_job_s

public_job_ |
          s |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     18,246       93.10       93.10
          1 |      1,353        6.90      100.00
------------+-----------------------------------
      Total |     19,599      100.00

. 
. *===========================================================================
. forvalues i = 1/`lim' {
  2.         sum  ch_l [aw = fexp_s] if sect_main6_s== `i'
  3.         if r(sum) != 0 {
  4.                 gen  aux_l_`i' = sum(fexp_s)/r(sum) if ch_l == 1 & sect_ma
> in6_s== `i'
  5.                 sort aleat_ila, stable
  6.                 replace public_job_s = 0 if  aux_l_`i' <= pj_1_`i'
  7.                 di in ye "share of private employment is ===>   pj_1_`i'  
> = " scalar(pj_1_`i')
  8.                 ta public_job_s [aw=fexp_s] if aux_l_`i' != .
  9.         }
 10. 
.         sum  ch_h [aw = fexp_s] if sect_main6_s== `i'
 11.         if r(sum) != 0 {
 12.                 gen  aux_h_`i' = sum(fexp_s)/r(sum) if ch_h == 1 & sect_ma
> in6_s== `i'
 13.                 sort aleat_ila, stable
 14.                 replace public_job_s = 0 if  aux_h_`i' <= pj_2_`i'
 15.                 di in ye "share of private employment is ===>   pj_2_`i'  
> = " scalar(pj_2_`i')
 16.                 ta public_job_s [aw=fexp_s] if aux_h_`i' != .
 17.         }
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_l |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        ch_h |       0           0

. 
. rename ch_l ch_l_pj

. rename ch_h ch_h_pj

. capture drop aux_l_*

. capture drop aux_h_*

. capture drop ch_l_sal

. capture drop ch_h_sal

. capture drop ch_l_pj

. capture drop ch_h_pj

. 
. *===========================================================================
. * II- Compute the income of employed simulated who come from other sector sta
> tus
. *===========================================================================
. 
. * Income estimation by education level
. gen  predila_n  = .
(61,849 missing values generated)

. /*
> if $m == 1 {
> 
>         forvalues n = 1/2 {
> 
>                 * linear projection
>         
>                 * Those who come from INACTIVITY
>                 mat score predila_n = b_1_`n' if occupation == 0 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 0 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 0 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from UNEMPLOYMENT
>                 mat score predila_n = b_1_`n' if occupation == 1 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 1 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 1 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from AGRICULTURE
>                 mat score predila_n = b_2_`n' if occupation == 2 & occupation
> _s == 3 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 2 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from INDUSTRY
>                 mat score predila_n = b_1_`n' if occupation == 3 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 3 & occupation
> _s == 4 & sample_`n' == 1, replace
> 
>                 * Those who come from SERVICES
>                 mat score predila_n = b_1_`n' if occupation == 4 & occupation
> _s == 2 & sample_`n' == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 4 & occupation
> _s == 3 & sample_`n' == 1, replace
> 
>                 * Those who remain in their sector but changes their informal
> ity status   
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 1 & informal == 0, replace
> 
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 0 & informal == 1, replace
>                  
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 1 & informal == 1, replace
> 
>                 mat score predila_n = b_1_`n' if occupation == 2 & occupation
> _s == 2 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                 mat score predila_n = b_2_`n' if occupation == 3 & occupation
> _s == 3 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                 mat score predila_n = b_3_`n' if occupation == 4 & occupation
> _s == 4 & sample_`n' == 1 & informal_s == 0 & informal == 0, replace
>                  
>                 *  Residuals   
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_1
> _`n' if occupation_s == 2 & sample_`n' == 1 
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_2
> _`n' if occupation_s == 3 & sample_`n' == 1
>                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_3
> _`n' if occupation_s == 4 & sample_`n' == 1
>         }
> 
>         replace predila_n = exp(predila_n)
> 
>         * Those who mantain their employment status and sector
>         gen     lai_m_s = .
>         replace lai_m_s = lai_m if occupation == 2 & occupation_s == 2       
>          
>         replace lai_m_s = .     if occupation == 2 & occupation_s == 2 & (lai
> _m == .) 
>         replace lai_m_s = lai_m if occupation == 3 & occupation_s == 3       
>          
>         replace lai_m_s = .     if occupation == 3 & occupation_s == 3 & (lai
> _m == .) 
>         replace lai_m_s = lai_m if occupation == 4 & occupation_s == 4       
>          
>         replace lai_m_s = .     if occupation == 4 & occupation_s == 4 & (lai
> _m == .) 
> 
>         * New employed who come from other sectors, non-employed or unemploye
> d 
>         replace lai_m_s = predila_n  if occupation_s == 2 & lai_m_s == .
>         replace lai_m_s = predila_n  if occupation_s == 3 & lai_m_s == .
>         replace lai_m_s = predila_n  if occupation_s == 4 & lai_m_s == .
> 
>         * Those who mantain their sectors but change their formality status
>         replace lai_m_s = predila_n  if occupation == 2 & occupation_s == 2 &
>  (lai_m == .) & informal_s == 1 & informal == 0
>         replace lai_m_s = predila_n  if occupation == 3 & occupation_s == 3 &
>  (lai_m == .) & informal_s == 1 & informal == 0
>         replace lai_m_s = predila_n  if occupation == 4 & occupation_s == 4 &
>  (lai_m == .) & informal_s == 1 & informal == 0
> 
>         replace lai_m_s = predila_n  if occupation == 2 & occupation_s == 2 &
>  (lai_m == .) & informal_s == 0 & informal == 1
>         replace lai_m_s = predila_n  if occupation == 3 & occupation_s == 3 &
>  (lai_m == .) & informal_s == 0 & informal == 1
>         replace lai_m_s = predila_n  if occupation == 4 & occupation_s == 4 &
>  (lai_m == .) & informal_s == 0 & informal == 1
> 
> }
> */
. 
. 
.         forvalues n = 1/2 {
  2. 
.                 * Linear projection
. 
.                 * Those who come from INACTIVITY
.                 mat score predila_n  = b_1_`n'  if occupation == 0 & occupati
> on_s == 2 & sample_`n' == 1, replace
  3.                 mat score predila_n  = b_2_`n'  if occupation == 0 & occup
> ation_s == 3 & sample_`n' == 1, replace
  4.                 mat score predila_n  = b_3_`n'  if occupation == 0 & occup
> ation_s == 4 & sample_`n' == 1, replace
  5.                 mat score predila_n  = b_4_`n'  if occupation == 0 & occup
> ation_s == 5 & sample_`n' == 1, replace
  6.                 mat score predila_n  = b_5_`n'  if occupation == 0 & occup
> ation_s == 6 & sample_`n' == 1, replace
  7.                 mat score predila_n  = b_6_`n'  if occupation == 0 & occup
> ation_s == 7 & sample_`n' == 1, replace
  8. 
.                 * Those who come from UNEMPLOYMENT
.                 mat score predila_n  = b_1_`n'  if occupation == 1 & occupati
> on_s == 2 & sample_`n' == 1, replace
  9.                 mat score predila_n  = b_2_`n'  if occupation == 1 & occup
> ation_s == 3 & sample_`n' == 1, replace
 10.                 mat score predila_n  = b_3_`n'  if occupation == 1 & occup
> ation_s == 4 & sample_`n' == 1, replace
 11.                 mat score predila_n  = b_4_`n'  if occupation == 1 & occup
> ation_s == 5 & sample_`n' == 1, replace
 12.                 mat score predila_n  = b_5_`n'  if occupation == 1 & occup
> ation_s == 6 & sample_`n' == 1, replace
 13.                 mat score predila_n  = b_6_`n'  if occupation == 1 & occup
> ation_s == 7 & sample_`n' == 1, replace
 14. 
.                 * Those who come from Agriculture
.                 mat score predila_n  = b_2_`n'  if occupation == 2 & occupati
> on_s == 3 & sample_`n' == 1, replace
 15.                 mat score predila_n  = b_3_`n'  if occupation == 2 & occup
> ation_s == 4 & sample_`n' == 1, replace
 16.                 mat score predila_n  = b_4_`n'  if occupation == 2 & occup
> ation_s == 5 & sample_`n' == 1, replace
 17.                 mat score predila_n  = b_5_`n'  if occupation == 2 & occup
> ation_s == 6 & sample_`n' == 1, replace
 18.                 mat score predila_n  = b_6_`n'  if occupation == 2 & occup
> ation_s == 7 & sample_`n' == 1, replace
 19. 
.         * Those who come from Industry
.            mat score predila_n  = b_1_`n'  if occupation == 3 & occupation_s 
> == 2 & sample_`n' == 1, replace
 20.            mat score predila_n  = b_3_`n'  if occupation == 3 & occupation
> _s == 4 & sample_`n' == 1, replace
 21.            mat score predila_n  = b_4_`n'  if occupation == 3 & occupation
> _s == 5 & sample_`n' == 1, replace
 22.            mat score predila_n  = b_5_`n'  if occupation == 3 & occupation
> _s == 6 & sample_`n' == 1, replace
 23.            mat score predila_n  = b_6_`n'  if occupation == 3 & occupation
> _s == 7 & sample_`n' == 1, replace
 24.          
.                 * Those who come from Construction
.                 mat score predila_n  = b_1_`n'  if occupation == 4 & occupati
> on_s == 2 & sample_`n' == 1, replace
 25.                 mat score predila_n  = b_2_`n'  if occupation == 4 & occup
> ation_s == 3 & sample_`n' == 1, replace
 26.                 mat score predila_n  = b_4_`n'  if occupation == 4 & occup
> ation_s == 5 & sample_`n' == 1, replace
 27.                 mat score predila_n  = b_5_`n'  if occupation == 4 & occup
> ation_s == 6 & sample_`n' == 1, replace
 28.                 mat score predila_n  = b_6_`n'  if occupation == 4 & occup
> ation_s == 7 & sample_`n' == 1, replace
 29. 
.                 * Those who come from Services
.                 mat score predila_n  = b_1_`n'  if occupation == 5 & occupati
> on_s == 2 & sample_`n' == 1, replace
 30.                 mat score predila_n  = b_2_`n'  if occupation == 5 & occup
> ation_s == 3 & sample_`n' == 1, replace
 31.                 mat score predila_n  = b_3_`n'  if occupation == 5 & occup
> ation_s == 4 & sample_`n' == 1, replace
 32.                 mat score predila_n  = b_5_`n'  if occupation == 5 & occup
> ation_s == 6 & sample_`n' == 1, replace
 33.                 mat score predila_n  = b_6_`n'  if occupation == 5 & occup
> ation_s == 7 & sample_`n' == 1, replace
 34. 
.                 * Those who come from Transport
.                 mat score predila_n  = b_1_`n'  if occupation == 6 & occupati
> on_s == 2 & sample_`n' == 1, replace
 35.                 mat score predila_n  = b_2_`n'  if occupation == 6 & occup
> ation_s == 3 & sample_`n' == 1, replace
 36.                 mat score predila_n  = b_3_`n'  if occupation == 6 & occup
> ation_s == 4 & sample_`n' == 1, replace
 37.                 mat score predila_n  = b_4_`n'  if occupation == 6 & occup
> ation_s == 5 & sample_`n' == 1, replace
 38.                 mat score predila_n  = b_6_`n'  if occupation == 6 & occup
> ation_s == 7 & sample_`n' == 1, replace
 39. 
.         * Those who come from Finance
.            mat score predila_n  = b_1_`n'  if occupation == 7 & occupation_s 
> == 2 & sample_`n' == 1, replace
 40.            mat score predila_n  = b_2_`n'  if occupation == 7 & occupation
> _s == 3 & sample_`n' == 1, replace
 41.            mat score predila_n  = b_3_`n'  if occupation == 7 & occupation
> _s == 4 & sample_`n' == 1, replace
 42.            mat score predila_n  = b_4_`n'  if occupation == 7 & occupation
> _s == 5 & sample_`n' == 1, replace
 43.            mat score predila_n  = b_5_`n'  if occupation == 7 & occupation
> _s == 6 & sample_`n' == 1, replace
 44. 
.                 * Residuals   
.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigma_1
> _`n' if occupation_s == 2 & sample_`n' == 1 
 45.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_2_`n' if occupation_s == 3 & sample_`n' == 1
 46.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_3_`n' if occupation_s == 4 & sample_`n' == 1
 47.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_4_`n' if occupation_s == 5 & sample_`n' == 1
 48.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_5_`n' if occupation_s == 6 & sample_`n' == 1
 49.                 replace   predila_n = predila_n + invnorm(aleat_ila)* sigm
> a_6_`n' if occupation_s == 7 & sample_`n' == 1
 50.         }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
.         replace predila_n = exp(predila_n)
(0 real changes made)

. 
.         * those who mantain their employment status and sector
.         gen     lai_m_s = .
(61,849 missing values generated)

.         forvalues i = 2/7 {
  2.                 * Those who mantain their employment status and sector
.                 replace lai_m_s = lai_m if occupation == `i' & occupation_s =
> = `i'                
  3.                 replace lai_m_s = .     if occupation == `i' & occupation_
> s == `i' & (lai_m == .) 
  4.                 * New employed who come from other sectors, non-employed o
> r unemployed 
.                 replace lai_m_s = predila_n  if occupation_s == `i' & lai_m_s
>  == .
  5.         }
(5,317 real changes made)
(0 real changes made)
(0 real changes made)
(3,766 real changes made)
(0 real changes made)
(0 real changes made)
(1,544 real changes made)
(0 real changes made)
(0 real changes made)
(3,262 real changes made)
(0 real changes made)
(0 real changes made)
(1,608 real changes made)
(0 real changes made)
(0 real changes made)
(2,562 real changes made)
(0 real changes made)
(0 real changes made)

. 
.         * 2- New employed who come from other sectors, non-employed or unempl
> oyed 
.         replace lai_m_s = predila_n  if occupation_s == 2 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if occupation_s == 3 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if occupation_s == 4 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if occupation_s == 5 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if occupation_s == 6 & lai_m_s == .
(0 real changes made)

.         replace lai_m_s = predila_n  if occupation_s == 7 & lai_m_s == .
(0 real changes made)

. 
. 
. 
. 
. * Summ those who do not belong to the sample
. replace lai_m_s = lai_m  if lai_m_s == . &  sect_main6_s!= . & sample == .
(0 real changes made)

. replace lai_m_s = lai_m  if lai_m_s == . &  lai_m != . & sample == .
(1,385 real changes made)

. replace lai_m_s = lai_m  if lai_m_s == . &  lai_m != . & sample == 1
(155 real changes made)

. 
. 
. * Eliminate labor income for those who pass from employed to non-employed sta
> tus 
. replace lai_m_s = .  if active_s  == 1 & unemplyd_s  == 1 & unemplyd == 0  & 
> sample == 1
(0 real changes made)

. replace lai_m_s = .  if active_s  == 0 & lf_samp     == 1                  & 
> sample == 1
(0 real changes made)

. 
. drop predila_n aleat_ila

. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *===========================================================================
. * TITLE: 11 - Income growth by sector
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *===========================================================================
. * Created on : Mar 17, 2020
. * Last update: Oct 18, 2021 Kelly Y. Montoya. 
. *===========================================================================
. 
. *===========================================================================
. * Getting reduction in informal workers because of quarantine 
. *===========================================================================
. /*
> if $t == 2 {
> 
>    replace lai_m_s = lai_m * (1 - (lai_m * ( $redu )/(lai_m * 12))) if inform
> al_s == 1
> 
> } */
. *===========================================================================
. * I. Calculates the growth rate by sector of total labor income 
. *    (main and secondary for everybody)
. *===========================================================================
. 
.   capture drop sectorg

.   clonevar sectorg = industry6
(43,450 missing values generated)

. 
. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     18,399    2.984238    1.791008          1          6

. loc lim = r(max)

. 
. forvalues i = 1/`lim' {
  2.         
.         //Base
.         sum lai_m     [aw = wgt]  if lai_m > 0 & lai_m < . & sectorg    == `i
> ' 
  3.         sca sp_`i' = r(mean)
  4. 
.         //Scenario
.         sum lai_m_s [aw = fexp_s]  if lai_m_s > 0 & lai_m_s < . & sect_main6_
> s== `i' 
  5.         sca sp1_`i' = r(mean)
  6. 
.         if `i' == 1 { 
  7.                 mat var0 = sp_`i' 
  8.                 mat var1 = sp1_`i' 
  9.                 mat list var0
 10.                 mat list var1
 11.         }
 12. 
.         if `i' != 1 {
 13.                 mat var0 = var0\sp_`i'
 14.                 mat var1 = var1\sp1_`i' 
 15.                 mat list var0
 16.                 mat list var1
 17.         
.         } 
 18. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   4,979  14787688.5    10.14113   94.00939   2.36e-17   5640.807

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,967    15432437    10.18837    94.2864   2.36e-17   5640.807

symmetric var0[1,1]
           c1
r1  10.141134

symmetric var1[1,1]
           c1
r1  10.188367

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,779  11761808.1    18.16478   114.9298   .0069332   4710.683

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,756    12268070    18.24228   115.3114   .0069332   4710.683

var0[2,1]
           c1
r1  10.141134
r2  18.164779

var1[2,1]
           c1
r1  10.188367
r2  18.242283

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   1,555  3856100.13    17.50281   118.4619   .1663964   2907.084

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,544     4022097    17.58239    118.855   .1663964   2907.084

var0[3,1]
           c1
r1  10.141134
r2  18.164779
r3  17.502815

var1[3,1]
           c1
r1  10.188367
r2  18.242283
r3  17.582389

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,282  7100425.82    18.08845   23.57451   .0693318   441.2972

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,257     7401725    18.12931   23.64485   .0693318   441.2972

var0[4,1]
           c1
r1  10.141134
r2  18.164779
r3  17.502815
r4   18.08845

var1[4,1]
           c1
r1  10.188367
r2  18.242283
r3  17.582389
r4   18.12931

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   1,630  4361301.63    14.08998   25.86872   .2773274   623.9866

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,607     4548004    14.12199   25.94985   .2773274   623.9866

var0[5,1]
           c1
r1  10.141134
r2  18.164779
r3  17.502815
r4   18.08845
r5  14.089983

var1[5,1]
           c1
r1  10.188367
r2  18.242283
r3  17.582389
r4   18.12931
r5  14.121988

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   2,567  6351260.64    33.32772   295.7245   .0066559   7571.038

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   2,547     6627160    33.46762   296.6542   .0066559   7571.038

var0[6,1]
           c1
r1  10.141134
r2  18.164779
r3  17.502815
r4   18.08845
r5  14.089983
r6  33.327717

var1[6,1]
           c1
r1  10.188367
r2  18.242283
r3  17.582389
r4   18.12931
r5  14.121988
r6  33.467616

. 
. 
. *===========================================================================
. * Calculates the difference between simulated and projected income growth rat
> es by sector (This uses income projected with elasticities - input_gdp2)
. *===========================================================================
. 
. sum sect_main6

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
  sect_main6 |     18,214    2.987647    1.789263          1          6

. loc lim2 = r(max)

. 
. mat growth_ila_rel = growth_labor_income[1..`lim2',1]

. 
. mat list growth_ila_rel 

growth_ila_rel[6,1]
    rate
r1     0
r2     0
r3     0
r4     0
r5     0
r6     0

. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: V = st_matrix("growth_ila_rel")

: C = st_matrix("var1")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_ila_rel_n",H)

: end
-------------------------------------------------------------------------------

. 
. mat list growth_ila_rel_n

growth_ila_rel_n[6,1]
            c1
r1  -.00463597
r2  -.00424858
r3  -.00452581
r4  -.00225381
r5  -.00226637
r6  -.00418013

. 
. 
. *===========================================================================
. * Expands income labor by sector
. *===========================================================================
. 
. clonevar lai_s_s = lai_s 
(54,846 missing values generated)

. 
. //Main
.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[1,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 1 
(4,967 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[2,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 2 
(3,756 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[3,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 3 
(1,544 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[4,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 4 
(3,257 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[5,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 5 
(1,607 real changes made)

.    replace lai_m_s = lai_m_s * (1 + growth_ila_rel_n[6,1]) if lai_m_s > 0 & l
> ai_m_s != .   & sect_main6_s == 6 
(2,547 real changes made)

.  
. //Secondary 
.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[1,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 1 
(1,557 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[2,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 2 
(994 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[3,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 3 
(574 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[4,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 4 
(911 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[5,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 5 
(569 real changes made)

.    replace lai_s_s = lai_s_s * (1 + growth_ila_rel_n[6,1]) if lai_s_s > 0 & l
> ai_s_s != .   & sectorg == 6 
(808 real changes made)

.   
. 
. * Check the variations
. forvalues i = 1/`lim' {
  2.         sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . & sect_main
> 6_s == `i' 
  3.         sca sp2_`i' = r(mean)
  4.         //sca s1_`i' = scalar(sp_`i') + scalar(ss_`i')
. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,967    15432437    10.14113    93.8493   2.35e-17   5614.656

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,756    12268070    18.16478   114.8215   .0069037   4690.669

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,544     4022097    17.50281   118.3171   .1656434   2893.927

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,257     7401725    18.08845   23.59156   .0691756   440.3026

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,607     4548004    14.08998   25.89104   .2766989   622.5724

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   2,547     6627160    33.32772   295.4142    .006628    7539.39

. mat n =   scalar(sp2_1)/scalar(sp_1)-1

. mat n = n\scalar(sp2_2)/scalar(sp_2)-1

. mat n = n\scalar(sp2_3)/scalar(sp_3)-1

. mat n = n\scalar(sp2_4)/scalar(sp_4)-1

. mat n = n\scalar(sp2_5)/scalar(sp_5)-1

. mat n = n\scalar(sp2_6)/scalar(sp_6)-1

. 
. mat diff  = growth_ila_rel - n

. mat check = growth_ila_rel,n,diff

. mat list check

check[6,3]
          rate          c1          c1
r1           0   8.145e-09  -8.145e-09
r2           0   2.826e-09  -2.826e-09
r3           0  -6.838e-09   6.838e-09
r4           0  -1.200e-10   1.200e-10
r5           0  -2.332e-09   2.332e-09
r6           0   4.907e-09  -4.907e-09

. 
. 
. *===========================================================================
. * Re-scale all incomes by the average income 
. *===========================================================================
. 
. sum     lai_m [aw = wgt] if lai_m > 0 & lai_m != . & sect_main6 != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  17,792  48218584.8    17.26858   136.9718   2.36e-17   7571.038

. loc tot_ila_s = r(mean)

. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s!=. & sect_main6_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  17,678    50299493    17.26821   136.8321   2.35e-17    7539.39

. replace lai_m_s = `tot_ila_s' * (lai_m_s / r(mean)) if sect_main6_s != .
(18,092 real changes made)

. 
. sum     lai_s [aw = wgt] if lai_s > 0 & lai_s != . & sect_main6 != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,413  14549467.7    2.662666   5.286009   .0000539   153.9647

. loc tot_ila_s = r(mean)

. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s!=. & sect_main6_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,384    15186243    2.661293   5.279828   .0000536   153.6177

. replace lai_s_s = `tot_ila_s' * (lai_s_s / r(mean)) if sect_main6_s != .
(6,562 real changes made)

. 
. loc r = rowsof(growth_labor_income)

. mat growth_ila_tot = growth_labor_income[`r',1]

. 
. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
    c1
r1   0

. 
. replace lai_m_s = lai_m_s * (1 + growth_ila_tot[1,1]) if lai_m_s > 0 & lai_m_
> s != . & sect_main6_s != .
(0 real changes made)

. 
. replace lai_s_s = lai_s_s * (1 + growth_ila_tot[1,1]) if lai_s_s > 0 & lai_s_
> s != . & sect_main6_s != .
(0 real changes made)

. 
. * Checking 
. sum lai_m [aw = wgt] if lai_m > 0 & lai_m < . & sect_main6 != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  17,792  48218584.8    17.26858   136.9718   2.36e-17   7571.038

. sca s0 = r(mean)

. 
. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . & sect_main6_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  17,678    50299493    17.26858    136.835   2.35e-17   7539.551

. sca s1 = r(mean)

. 
. di scalar(s1)/scalar(s0)-1
-6.130e-10

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
    c1
r1   0

. 
. sum lai_s [aw = wgt] if lai_s > 0 & lai_s < . & sect_main6 != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,413  14549467.7    2.662666   5.286009   .0000539   153.9647

. sca s0 = r(mean)

. 
. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . & sect_main6_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,384    15186243    2.662666   5.282553   .0000537    153.697

. sca s1 = r(mean)

. 
. di scalar(s1)/scalar(s0)-1
-5.414e-10

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
    c1
r1   0

. 
. 
. /*==========================================================================*
>  TOTAL GROWTH OF LABOR INCOMES
>  Expands labor incomes of main and secondary activities to make total income 
> growth at the sectoral and total global rates (alike old model)
> ==========================================================================*/
. 
. *************************************************************************
. *IMPORTANT: Re-scaling using sectoral GDP starts here
. *************************************************************************
. 
. *===========================================================================
. * Calculates the growth rate by sector of total labor income 
. *    (main and secondary for everybody)
. *===========================================================================
. 
.   capture drop sectorg

.   clonevar sectorg = sect_main6
(43,635 missing values generated)

. 
. 
. sum sectorg

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     sectorg |     18,214    2.987647    1.789263          1          6

. loc lim = r(max)

. 
. forvalues i = 1/`lim' {
  2.         sum lai_m     [aw = wgt]  if lai_m > 0 & lai_m < . & sectorg    ==
>  `i'
  3.         sca sp_`i' = r(sum)
  4.         sum lai_s     [aw = wgt]  if lai_s > 0 & lai_s < . & sectorg    ==
>  `i' 
  5.         sca ss_`i' = r(sum)
  6.         sca s0_`i' = scalar(sp_`i') + scalar(ss_`i')
  7. 
.         sum lai_m_s [aw = fexp_s]  if lai_m_s > 0 & lai_m_s < . & sect_main6_
> s== `i'
  8.         sca sp_`i' = r(sum)
  9.         sum lai_s_s    [aw = fexp_s] if lai_s_s   > 0 &   lai_s_s < . & se
> ctorg   == `i' 
 10.         sca ss_`i' = r(sum)
 11.         sca s1_`i' = scalar(sp_`i') + scalar(ss_`i')
 12. 
.         if `i' == 1 { 
 13.                 mat var0 = s0_`i'
 14.                 mat var1 = s1_`i'
 15.                 mat list var0
 16.                 mat list var1
 17.         }
 18. 
.         if `i' != 1 {
 19.                 mat var0 = var0\s0_`i'
 20.                 mat var1 = var1\s1_`i'
 21.                 mat list var0
 22.                 mat list var1
 23.         }
 24. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   4,979  14787688.5    10.14113   94.00939   2.36e-17   5640.807

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   1,557  4641374.17    3.653357   5.056048   .0013866   58.74245

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,967    15432437    10.14135    93.8513   2.35e-17   5614.776

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   1,557     4873510    3.638288   5.035241   .0013809    58.5003

symmetric var0[1,1]
           c1
r1  1.669e+08

symmetric var1[1,1]
           c1
r1  1.742e+08

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,779  11761808.1    18.16478   114.9298   .0069332   4710.683

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |     994  2803973.94    1.956319   5.362136   .0000539   96.71793

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,756    12268070    18.16517   114.8239   .0069039    4690.77

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     994     2944247    1.948993   5.342147   .0000537   96.35673

var0[2,1]
           c1
r1  1.669e+08
r2  2.191e+08

var1[2,1]
           c1
r1  1.742e+08
r2  2.286e+08

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   1,555  3856100.13    17.50281   118.4619   .1663964   2907.084

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |     574  1427239.15    1.736801   2.712404   .0016828   34.08354

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,544     4022097    17.50319   118.3196   .1656469   2893.989

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     574     1498647    1.729808   2.701482   .0016761    33.9468

var0[3,1]
           c1
r1  1.669e+08
r2  2.191e+08
r3   69971437

var1[3,1]
           c1
r1  1.742e+08
r2  2.286e+08
r3   72991892

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   3,282  7100425.82    18.08845   23.57451   .0693318   441.2972

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |     911   2014077.2    2.857188   8.211134   .0002988   153.9647

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,257     7401725    18.08884   23.59207   .0691771    440.312

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     911     2114844    2.852166   8.196628   .0002983    153.697

var0[4,1]
           c1
r1  1.669e+08
r2  2.191e+08
r3   69971437
r4  1.342e+08

var1[4,1]
           c1
r1  1.742e+08
r2  2.286e+08
r3   72991892
r4  1.399e+08

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   1,630  4361301.63    14.08998   25.86872   .2773274   623.9866

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |     569  1561882.76    1.829529   2.656414   .0014345   16.51346

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,607     4548004    14.09028   25.89159   .2767048   622.5858

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     569     1640016    1.826313   2.651755   .0014319   16.48454

var0[5,1]
           c1
r1  1.669e+08
r2  2.191e+08
r3   69971437
r4  1.342e+08
r5   64308174

var1[5,1]
           c1
r1  1.742e+08
r2  2.286e+08
r3   72991892
r4  1.399e+08
r5   67077847

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |   2,567  6351260.64    33.32772   295.7245   .0066559   7571.038

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |     808  2100920.46    2.478617   4.463863   .0017445   42.38949

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   2,547     6627160    33.32843   295.4205   .0066282   7539.551

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     808     2206015    2.469488   4.447469   .0017381   42.23409

var0[6,1]
           c1
r1  1.669e+08
r2  2.191e+08
r3   69971437
r4  1.342e+08
r5   64308174
r6  2.169e+08

var1[6,1]
           c1
r1  1.742e+08
r2  2.286e+08
r3   72991892
r4  1.399e+08
r5   67077847
r6  2.263e+08

. 
. 
. *===========================================================================
. * Calculates the difference between sectoral micro and macro growth data
. *===========================================================================
. 
. mat growth_ila_macro = growth_macro_data[1..`lim',1]

.  
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: V = st_matrix("growth_ila_macro")

: C = st_matrix("var1")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_ila_macro_n",H)

: end
-------------------------------------------------------------------------------

. 
. 
. *===========================================================================
. * Expands income labor by sector
. *===========================================================================
. 
. forvalues c = 1/`lim'   {
  2.    replace lai_m_s = lai_m_s * (1 + growth_ila_macro_n[`c',1]) if lai_m_s 
> > 0 & lai_m_s != . & sect_main6_s == `c'
  3.    replace lai_s_s = lai_s_s * (1 + growth_ila_macro_n[`c',1]) if lai_s_s 
> > 0 & lai_s_s != . & sectorg     == `c' 
  4. }
(4,967 real changes made)
(1,557 real changes made)
(3,756 real changes made)
(994 real changes made)
(1,544 real changes made)
(574 real changes made)
(3,257 real changes made)
(911 real changes made)
(1,607 real changes made)
(569 real changes made)
(2,547 real changes made)
(808 real changes made)

. 
. * Check the variations
. forvalues i = 1/`lim' {
  2.         sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . & sect_main
> 6_s == `i'
  3.         sca sp_`i' = r(sum)
  4.         sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . & sectorg  
>    == `i' 
  5.         sca ss_`i' = r(sum)
  6.         sca s1_`i' = scalar(sp_`i') + scalar(ss_`i')
  7. }

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   4,967    15432437    11.37504   105.2682   2.64e-17   6297.809

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   1,557     4873510    4.080883   5.647774   .0015489   65.61681

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,756    12268070    24.50054   154.8705   .0093117   6326.745

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     994     2944247    2.628732   7.205299   .0000724   129.9626

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,544     4022097    24.31184   164.3454   .2300827   4019.737

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     574     1498647    2.402695   3.752345    .002328   47.15194

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   3,257     7401725    22.10531   28.83048   .0845372   538.0796

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     911     2114844    3.485466   10.01662   .0003646   187.8241

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   1,607     4548004    19.50511    35.8416    .383041   861.8423

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     569     1640016    2.528155   3.670811   .0019822   22.81946

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |   2,547     6627160    43.32814   384.0571   .0086169   9801.684

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |     808     2206015    3.210422   5.781867   .0022596   54.90581

. mat n =   scalar(s1_1)/scalar(s0_1)-1

. mat n = n\scalar(s1_2)/scalar(s0_2)-1

. mat n = n\scalar(s1_3)/scalar(s0_3)-1

. mat n = n\scalar(s1_4)/scalar(s0_4)-1

. mat n = n\scalar(s1_5)/scalar(s0_5)-1

. mat n = n\scalar(s1_6)/scalar(s0_6)-1

. 
. mat diff  = growth_ila_macro - n

. mat check = growth_ila_macro,n,diff

. mat list check

check[6,3]
          rate          c1          c1
r1   .17081331   .17081332  -5.780e-09
r2   .40695176   .40695176   2.074e-10
r3   .44895389   .44895389  -1.423e-09
r4   .27422506   .27422506   1.063e-09
r5   .44391481   .44391481   1.408e-10
r6   .35662206   .35662208  -1.438e-08

. 
. 
. *************************************************************************
. *IMPORTANT: Re-scaling using total GDP starts here
. *************************************************************************
. 
. * IV. Re-scale the incomes in order to maintain constant the total income of 
> the economy 
. sum     lai_m    [aw = wgt]   if lai_m    > 0 & lai_m != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  19,108  52011349.5    17.02711   134.9784   2.36e-17   7571.038

. loc tot_ila_s = r(sum)

. sum     lai_m_s [aw = fexp_s]  if lai_m_s > 0 & lai_m_s!=.

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  19,108    54613610    21.44757   171.8672   2.64e-17   9801.684

. replace lai_m_s = `tot_ila_s' * (lai_m_s / r(sum)) 
(19,599 real changes made)

. 
. sum     lai_s    [aw = wgt]     if lai_s     > 0 & lai_s != .

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,757  15508628.9    2.641586    5.23617   .0000539   153.9647

. loc tot_ila_s = r(sum)

. sum     lai_s_s [aw = fexp_s]  if lai_s_s > 0 & lai_s_s !=.

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,757    16284422    3.203472   6.384488   .0000724   187.8241

. replace lai_s_s = `tot_ila_s' * (lai_s_s/ r(sum))
(7,003 real changes made)

. 
. * Ajuste por ingreso total
. loc r = rowsof(growth_macro_data)

. mat growth_ila_tot = growth_macro_data[`r',1]

. 
. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
           c1
r1  .33244464

. 
. replace lai_m_s = lai_m_s * (1 + growth_ila_tot[1,1]) if lai_m_s > 0 & lai_m_
> s != .
(19,108 real changes made)

. replace lai_s_s = lai_s_s * (1 + growth_ila_tot[1,1]) if lai_s_s > 0 & lai_s_
> s != .
(5,757 real changes made)

. 
. * Checking 
. sum lai_m [aw = wgt] if lai_m > 0 & lai_m < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  19,108  52011349.5    17.02711   134.9784   2.36e-17   7571.038

. sca sp = r(sum)

. sum lai_s [aw = wgt] if lai_s > 0 & lai_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,757  15508628.9    2.641586    5.23617   .0000539   153.9647

. sca ss = r(sum)

. sca s0 = scalar(sp) + scalar(ss)

. 
. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  19,108    54613610    21.60665   173.1419   2.66e-17   9874.383

. sca sp = r(sum)

. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,757    16284422    3.352085   6.680672   .0000757   196.5375

. sca ss = r(sum)

. sca s1 = scalar(sp) + scalar(ss)

. 
. di scalar(s1)/scalar(s0)-1
.33244464

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
           c1
r1  .33244464

. 
. 
. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 12 - Total labor income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *============================================================================
> =
. 
. *============================================================================
> =
. 
. capture drop aux1

. capture drop aux2

. capture drop tot_lai_s

. 
. egen    aux1    = rsum(lai_m lai_s) , m
(42,249 missing values generated)

. replace aux1 = lai_s if lai_m < 0  
(491 real changes made, 484 to missing)

. replace aux1 = aux1 *-1
(19,116 real changes made)

. egen    aux2 = rsum(lai_m_s lai_s_s), m
(42,249 missing values generated)

. replace aux2 = lai_s_s if lai_m_s < 0  
(491 real changes made, 484 to missing)

. 
. *egen tot_lai = rsum(lai_m lai_s), m
. 
. egen tot_lai_s = rowtotal(tot_lai aux1 aux2), missing 
(42,733 missing values generated)

. 
. * Checking 
. sum lai_m [aw = wgt] if lai_m > 0 & lai_m < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_m |  19,108  52011349.5    17.02711   134.9784   2.36e-17   7571.038

. sca sp = r(sum)

. sum lai_s [aw = wgt] if lai_s > 0 & lai_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       lai_s |   5,757  15508628.9    2.641586    5.23617   .0000539   153.9647

. sca ss = r(sum)

. sca s0 = scalar(sp) + scalar(ss)

. 
. sum lai_m_s [aw = fexp_s] if lai_m_s > 0 & lai_m_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_m_s |  19,108    54613610    21.60665   173.1419   2.66e-17   9874.383

. sca sp = r(sum)

. sum lai_s_s [aw = fexp_s] if lai_s_s > 0 & lai_s_s < . 

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
     lai_s_s |   5,757    16284422    3.352085   6.680672   .0000757   196.5375

. sca ss = r(sum)

. sca s1 = scalar(sp) + scalar(ss)

. 
. loc r = rowsof(growth_macro_data)

. mat growth_ila_tot = growth_macro_data[`r',1]

. di scalar(s1)/scalar(s0)-1
.33244464

. mat list growth_ila_tot

symmetric growth_ila_tot[1,1]
           c1
r1  .33244464

. drop aux1 aux2

. 
. *============================================================================
> *
. *                                                                       END
. *============================================================================
> *
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 12  Non-labor income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jul 18, 2022
. *============================================================================
> =
. * Modified by: Kelly Y. Montoya (kmontoyamunoz@worldbank.org)
. * Modification: 04/29/2022 - Correction of h_nlai_s
. *                               07/18/2022 - Modification on remittances mode
> lling
. *============================================================================
> =
. 
. 
. *============================================================================
> =
. * A. Private transfers
. *============================================================================
> =
. 
. * Remittances are increased only to those who are receiving, and they increse
>  at the remittances grow rate
. 
. if "${random_remittances}" == "no" {
.         do "${thedo}/12_assign_nlai_0.do"

. *!v1.0
. *============================================================================
> =
. * TITLE: 12  Non-labor income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Jul 11, 2022
. * Last update: Jul 18, 2022
. *============================================================================
> =
. * Modified by: Kelly Y. Montoya (kmontoyamunoz@worldbank.org)
. *                          Jul 18, 2022 - Adapted the ECU version to the full
>  project.
. *============================================================================
> =
. 
. 
. *============================================================================
> =
. * A. Private transfers
. *============================================================================
> =
. 
. loc nl_incomes "remesas pensions capital transfers"

. loc lim : word count `nl_incomes'

. dis `lim'
4

. 
. forvalues i = 1/`lim' {
  2. loc x : word `i' of `nl_incomes'
  3. 
. dis as text "{hline}" _newline ///
>         as text " nl income = `x'" _newline ///
>     as text "{hline}" _newline
  4. 
. *  1. calculates the growth rate of capital according to population growth 
. sum h_`x' [aw = wgt  ] if h_`x' > 0 & h_`x' <.
  5. mat var0 = r(sum) / 1000000
  6. sum h_`x' [aw = fexp_s] if h_`x' > 0 & h_`x' <.
  7. mat var1 = r(sum) / 1000000
  8. 
. * 2. calculates the difference between micro and macro data growth rates  
. mat growth_`x' = growth_nlabor[`i',1]
  9. 
. }
-------------------------------------------------------------------------------
 nl income = remesas
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_remesas |   5,835  14841153.9     3.24238   8.317676   .0001387   138.6637

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_remesas |   5,835    15583649    3.242365   8.317629   .0001387   138.6637
-------------------------------------------------------------------------------
 nl income = pensions
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  h_pensions |       0           0

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
  h_pensions |       0           0
-------------------------------------------------------------------------------
 nl income = capital
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_capital |   3,319  8565516.44    5.794979   10.75295   .0001387   135.3357

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
   h_capital |   3,319     8994090       5.795   10.75294   .0001387   135.3357
-------------------------------------------------------------------------------
 nl income = transfers
-------------------------------------------------------------------------------


    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
 h_transfers |   5,792  15147684.2    .8589167   2.929485    .000208   38.52077

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
 h_transfers |   5,792    15905450     .858937   2.929547    .000208   38.52077

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_remesas")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_remesas_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_pensions")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_pensions_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
: M = st_matrix("var0")

: C = st_matrix("var1")

: V = st_matrix("growth_capital")

: G = M:*(1:+V)

: H = (G:/C):-1

: st_matrix("growth_capital_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. mata:
------------------------------------------------- mata (type end to exit) -----
:         M = st_matrix("var0")

:         C = st_matrix("var1")

:         V = st_matrix("growth_transfers")

:         G = M:*(1:+V)

:         H = (G:/C):-1

:         st_matrix("growth_transfers_adjust",H)

: end
-------------------------------------------------------------------------------

. 
. 
. foreach x of local nl_incomes {
  2.     dis as text "`x'"
  3. * 3. expands private tranfers according to the new growth rate 
. gen  h_`x'_s = h_`x' *(1 + growth_`x'_adjust[1,1] ) if h_`x' !=.
  4. 
. }
remesas
(56,014 missing values generated)
pensions
(61,849 missing values generated)
capital
(58,530 missing values generated)
transfers
(56,057 missing values generated)

. 
. * others non-labor transfers  
. gen  h_otherinla_s  = h_otherinla
(61,139 missing values generated)

. //gen h_privtrans_s = h_privtrans
. 
. 
. * imputed rent
. gen h_renta_imp_s = h_renta_imp
(52,827 missing values generated)

. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file
. }

. 
. if "${random_remittances}" == "yes" {
.         do "${thedo}/12_assign_nlai_1.do"
. }

. 
. 
. 
. *============================================================================
> =
. * C. Total non-labor income
. *============================================================================
> =
. //egen h_nlai_s = rowtotal(h_remesas_s h_pensions_s h_capital_s h_privtrans_s
>  h_transfers_s h_cct_s h_renta_imp_s h_otherinla_s) if jefe == 1, missing
. 
. *gen h_nlai_s = rowtotal(h_remesas_s h_pensions_s h_capital_s h_renta_imp_s h
> _otherinla_s h_transfers_s) if jefe == 1, missing
. 
. * KM: I made this adjustment to non-labor income
. egen aux_nlai_s = rowtotal(h_remesas_s h_pensions_s h_capital_s h_renta_imp_s
>  h_otherinla_s h_transfers_s) if h_head == 1, missing
(49,331 missing values generated)

. 
. bysort id: egen h_nlai_s = sum(aux_nlai_s) if h_head != ., m
(7,087 missing values generated)

. 
. *gen h_nlai_s = nlai_s / h_size
. 
. *drop nlai_s
. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file

. *!v1.0
. *============================================================================
> =
. * TITLE: 14 - Household income
. *===========================================================================
. * Prepared by: Sergio Olivieri
. * E-mail: solivieri@worldbank.org
. *============================================================================
> =
. * Created on : Mar 17, 2020
. * Last update: Jan 04, 2021
. *============================================================================
> =
. * Modified by: Kelly Y. Montoya
. * Modification: 04/29/2022 - Correcting household non-labor income
. *                               07/26/2022 - Corrected household labor income
. *                               08/30/2022 - Corrected missing household labo
> r income
. *============================================================================
> =
. 
. note: total individual incomes before food price adjustment 

. *============================================================================
> =
. 
. * Labor
. * Observed 
. gen     h_lai_obs = h_lai * -1
(3,387 missing values generated)

. replace h_lai_obs = . if h_lai_obs == 0 
(0 real changes made)

. * Counterfactual
. *egen     h_lai_s = sum(tot_lai_s) , by(hhid)
. egen     h_lai_s = sum(tot_lai_s) if h_head != ., by(hhid) m // KM: I correct
> ed this.
(3,387 missing values generated)

. *replace  h_lai_s = .  if h_lai_s == 0
. 
. * KM: I modified this part
. * Non-labor
. * Observed
. bysort id: egen aux_nlai = sum(h_nlai), m
(6,626 missing values generated)

. cap drop h_nlai

. gen h_nlai = aux_nlai
(6,626 missing values generated)

. drop aux_nlai

. 
. gen     h_nlai_obs = h_nlai * -1
(6,626 missing values generated)

. replace h_nlai_obs = . if h_nlai_obs == 0 
(0 real changes made)

. * Counterfactual
. *replace  h_nlai_s = .  if h_nlai_s == 0
. 
. * Total
. egen     h_inc_s = rowtotal(h_inc h_lai_obs h_lai_s h_nlai_obs h_nlai_s) if h
> _head != ., missing 

. 
. replace  h_inc_s = 0 if h_inc_s < 0
(328 real changes made)

. *replace  h_inc_s = . if h_inc_s == 0
. replace  h_inc_s = . if h_inc == .
(0 real changes made)

. 
. * per capita household income - total
. gen       pc_inc_s = h_inc_s/ h_size

. label var pc_inc_s "per capita income - $scenario" 

. 
. 
. *============================================================================
> =
. *                                     END
. *============================================================================
> =
. 
end of do-file
(analytic weights assumed)
 
Warning: pc_inc_s has 822 values = 0. Used in calculations
 
Percentile ratios

----------------------------------------------------------
  All obs |    p90/p10     p90/p50     p10/p50     p75/p25
----------+-----------------------------------------------
          |     11.875       2.844       0.239       2.998
----------------------------------------------------------
  
Generalized Entropy index GE(2), and Gini coefficient

----------------------------------
  All obs |      GE(2)        Gini
----------+-----------------------
          |   14.06074     0.60111
----------------------------------
(7 observations deleted)
file C:/Users/WB308767/OneDrive/WBG/ETIRI/Projects/FY24/FY24 5 SAS -
    Bangladesh/main/BGD-MPO-Microsimulation/2024SM/Data/OUTPUT/basesim_2027.d
    > ta saved
. }

. *===========================================================================
. * Display running time  
. etime
Elapsed time is 38 seconds 

. *===========================================================================
. *                                     END
. *===========================================================================
. 
end of do-file
